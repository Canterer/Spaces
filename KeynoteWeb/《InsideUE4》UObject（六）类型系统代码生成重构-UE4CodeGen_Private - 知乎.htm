<!DOCTYPE html>
<html lang="zh" class="itcauecng" data-theme="light" data-rh="data-theme"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style class="ariareader ariareader--user-agent" media="screen" id="ariaf82fuvy5q7c" data-for="result" isaria="true">.ariafocus{outline:none;}body.useOldFixed [aria-fixedOldHidden=true],.ariaHide{display:none !important;}:focus{outline:none !important;}</style><meta charset="utf-8"><title>《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"><meta name="renderer" content="webkit"><meta name="force-rendering" content="webkit"><meta http-equiv="X-UA-Compatible" content="IE=10,chrome=1"><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"><meta data-rh="true" name="keywords" content="游戏开发,游戏引擎,虚幻引擎"><meta data-rh="true" name="description" content="读的不如写的快引言在之前的 《InsideUE4》UObject（四）类型系统代码生成和《InsideUE4》UObject（五）类型系统收集章节里，我们介绍了UE4是如何根据我们的代码和元标记生成反射代码，并在Main函数调用之前，利用…"><meta data-rh="true" property="og:title" content="《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private"><meta data-rh="true" property="og:url" content="https://zhuanlan.zhihu.com/p/34059049"><meta data-rh="true" property="og:description" content="读的不如写的快引言在之前的 《InsideUE4》UObject（四）类型系统代码生成和《InsideUE4》UObject（五）类型系统收集章节里，我们介绍了UE4是如何根据我们的代码和元标记生成反射代码，并在Main函数调用之前，利用…"><meta data-rh="true" property="og:image" content="https://picx.zhimg.com/v2-769549c0de13c0a0a66d078f776103e0_720w.jpg?source=172ae18b"><meta data-rh="true" property="og:type" content="article"><meta data-rh="true" property="og:site_name" content="知乎专栏"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png" sizes="152x152"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.d5793cac.png" sizes="120x120"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7abf3393.png" sizes="76x76"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.362a8eac.png" sizes="60x60"><link crossorigin="" rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/heifetz/favicon.ico"><link crossorigin="" rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/heifetz/search.xml" title="知乎"><link rel="dns-prefetch" href="https://static.zhimg.com/"><link rel="dns-prefetch" href="https://pica.zhimg.com/"><link rel="dns-prefetch" href="https://picx.zhimg.com/"><link rel="dns-prefetch" href="https://pic1.zhimg.com/"><link rel="dns-prefetch" href="https://pic2.zhimg.com/"><link rel="dns-prefetch" href="https://pic3.zhimg.com/"><link rel="dns-prefetch" href="https://pic4.zhimg.com/"><link rel="dns-prefetch" href="https://static.zhihu.com/"><style data-emotion-css="9mvwt1">:root{--zhc-padding-horizontal:20px;--zhc-padding-vertical:16px;--zhc-notification-top:75px;--app-padding:16px;--app-header-height:52px;--app-max-width:640px;--app-width:1000px;--app-font-size:15px;}</style><script nonce="" data-web-reporter-config="{&quot;platform&quot;:&quot;web&quot;,&quot;project&quot;:&quot;heifetz&quot;}">!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).webReporter={})}(this,function(e){"use strict";var t={},n=!1,o=function(){var e,o,r,a,i;return n||(e=document.querySelector("script[data-web-reporter-config]"),o=e&&e.dataset.webReporterConfig||"{}",r=JSON.parse(o),a=r.platform,i=r.project,t={platform:a,project:i},n=!0),t};function r(e){return a(function(){return localStorage.getItem(e)})()}function a(e){return function(){try{return e.apply(void 0,arguments)}catch(e){}}}var i=a(function(e,t){var n={platform:"web",project:o().project,clientTimestamp:+new Date};!function(e,t,n){"1"===r("weber:logenabled")&&console.log("[web-reporter]%o",{type:e,base:t,data:n})}(e,n,t),function(e,t){var n=btoa(JSON.stringify(t));if("undefined"!=typeof Blob&&window.navigator&&window.navigator.sendBeacon){var o=new Blob([n],{type:"text/plain"});navigator.sendBeacon(e,o)}else{var r=new XMLHttpRequest;r.open("POST",e),r.withCredentials=!1,r.setRequestHeader("Content-Type","text/plain;charset=UTF-8"),r.send(n)}}(r("weber:api")||"https://apm.zhihu.com/collector/web_json",{type:e,base:n,data:t})});e.report=i,Object.defineProperty(e,"__esModule",{value:!0})});
</script><link href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/7941.216a26f4.e07b5501c9707bef3df0.css" crossorigin="" rel="stylesheet"><link href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/column.216a26f4.65f86926949e6790f684.css" crossorigin="" rel="stylesheet"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/user-hover-card.216a26f4.abd617b43cb1ecfc3d93.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/GoodsRecommendGoodsCardList.216a26f4.d95ce79191cdf8d7ac28.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/report_modals.216a26f4.06f4ff608e9af861b520.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/9625.216a26f4.fab316e5d80ef71e9e23.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/ECommerceAd.216a26f4.cdbc0ed858e691df0a59.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/1468.216a26f4.101bb14a2c1d8d20b744.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/EditableV2.216a26f4.d180f7d6ef8bb7bb7c87.css" crossorigin="anonymous"><script nonce="">!function(){"use strict";!function(e,n){var r=[];function t(e){return function(){r.push([e,arguments])}}n.Raven={captureException:t("captureException"),captureMessage:t("captureMessage"),captureBreadcrumb:t("captureBreadcrumb")};var a,o,c,i,s,u="undefined"!=typeof DOMError;function d(e){var n=e instanceof Error||e instanceof ErrorEvent||u&&e instanceof DOMError||e instanceof DOMException;Raven.captureException(n?e:new Error(e.message||e.reason))}n.addEventListener("unhandledrejection",d),n.addEventListener("error",d,!0),a=e.src,o=e,c=function(){r.forEach(function(e){var n;(n=Raven)[e[0]].apply(n,e[1])}),n.removeEventListener("unhandledrejection",d),n.removeEventListener("error",d,!0)},i=document.head||document.getElementsByTagName("head")[0],(s=document.createElement("script")).crossOrigin=o.crossOrigin,s.dataset.sentryConfig=o["data-sentry-config"],s.onload=c,s.src=a,i.appendChild(s)}({"defer":true,"crossOrigin":"anonymous","src":"https://unpkg.zhimg.com/@cfe/sentry-script@1.3.1/dist/init.js","data-sentry-config":"{\"dsn\":\"https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224\",\"sampleRate\":0.1,\"release\":\"2208-77d63458\",\"ignoreErrorNames\":[\"NetworkError\",\"SecurityError\"],\"ignoreErrorsPreset\":\"ReactApp\",\"tags\":{\"app_name\":\"heifetz\"}}"},window)}();
</script><script crossorigin="anonymous" data-sentry-config="{&quot;dsn&quot;:&quot;https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224&quot;,&quot;sampleRate&quot;:0.1,&quot;release&quot;:&quot;2208-77d63458&quot;,&quot;ignoreErrorNames&quot;:[&quot;NetworkError&quot;,&quot;SecurityError&quot;],&quot;ignoreErrorsPreset&quot;:&quot;ReactApp&quot;,&quot;tags&quot;:{&quot;app_name&quot;:&quot;heifetz&quot;}}" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/init.js"></script><style data-emotion-css="55n9hh">.css-55n9hh{position:fixed;top:0;right:0;left:0;z-index:101;display:none;height:2px;pointer-events:none;background:#1772F6;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}</style><style data-emotion-css="1l12z7y">.css-1l12z7y{box-shadow:0px 16px 32px rgba(0,0,0,0.04);}</style><style data-emotion-css="1hlrcxk">.css-1hlrcxk{-webkit-transition-property:fill;transition-property:fill;-webkit-transition-duration:0.25s;transition-duration:0.25s;-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;}</style><style data-emotion-css="icip60">.css-icip60{border-radius:2px;}</style><style data-emotion-css="fnnb9l">.css-fnnb9l{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:30px;height:30px;border-radius:2px;}</style><style data-emotion-css="78p1r9">.css-78p1r9{box-sizing:border-box;margin:0;min-width:0;margin-left:auto;margin-right:auto;max-width:690px;margin-top:0;}@media screen and (min-width:40em){.css-78p1r9{margin-top:1em;}}</style><style data-emotion-css="1xa1hik">.css-1xa1hik{position:relative;padding-bottom:56%;height:0;border-radius:inherit;}</style><style data-emotion-css="1h1xzpn">.css-1h1xzpn{box-sizing:border-box;margin:0;min-width:0;position:relative;padding-bottom:56%;height:0;border-radius:inherit;}</style><style data-emotion-css="1ld0bim">.css-1ld0bim{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;}</style><style data-emotion-css="uodor8">.css-uodor8{border-radius:50%;}</style><style data-emotion-css="1syywx2">.css-1syywx2{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:38px;height:38px;border-radius:50%;}</style><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style><style data-emotion-css="2dtzk2">.css-2dtzk2{cursor:pointer;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:.3em;}</style><style data-emotion-css="1m3x3v9">.css-1m3x3v9{width:1em;height:1em;}</style><style data-emotion-css="z4ujak">.css-z4ujak{color:#8491a5;}</style><style data-emotion-css="1od93p9">.css-1od93p9{margin-top:16px;position:relative;}</style><style data-emotion-css="376mun">.css-376mun{position:relative;display:inline;}</style><style data-emotion-css="dg64xe">.css-dg64xe .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-dg64xe .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-dg64xe .FileLinkCard-info{margin-left:12px;}.css-dg64xe .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-dg64xe .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-dg64xe .FileLinkCard-source{white-space:pre;}.css-dg64xe img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-dg64xe img.content_image[data-size="normal"],.css-dg64xe img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-dg64xe img.content_image[data-size="small"],.css-dg64xe img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="1vqsdx1">.css-1vqsdx1 .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-1vqsdx1 .LinkCard.new,.css-1vqsdx1 .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1vqsdx1 .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-1vqsdx1 .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1vqsdx1 .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-1vqsdx1 .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1vqsdx1 .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1vqsdx1 .LinkCard.old,.css-1vqsdx1 .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}</style><style data-emotion-css="yxro2d">.css-yxro2d .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-yxro2d .LinkCard.old,.css-yxro2d .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-yxro2d .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-yxro2d .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-yxro2d .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-yxro2d .LinkCard.new,.css-yxro2d .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-yxro2d .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-yxro2d .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-yxro2d .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-yxro2d .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-yxro2d .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-yxro2d .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-yxro2d .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-yxro2d .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-yxro2d .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-yxro2d .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-yxro2d .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-yxro2d .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-yxro2d .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-yxro2d .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-yxro2d .FileLinkCard-info{margin-left:12px;}.css-yxro2d .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-yxro2d .FileLinkCard-source{white-space:pre;}.css-yxro2d img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-yxro2d img.content_image[data-size="normal"],.css-yxro2d img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-yxro2d img.content_image[data-size="small"],.css-yxro2d img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="ob6uua animation-1yvu044">.css-ob6uua{word-break:break-word;line-height:1.6;}.css-ob6uua > [data-first-child]{margin-top:0;}.css-ob6uua > :last-child{margin-bottom:0;}.css-ob6uua h1,.css-ob6uua h2{clear:left;margin-top:calc((1.4em * 2) / 1.2);margin-bottom:calc(1.4em / 1.2);font-size:1.2em;line-height:1.5;font-weight:600;}.css-ob6uua h3,.css-ob6uua h4,.css-ob6uua h5,.css-ob6uua h6{clear:left;margin-top:calc((1.4em * 1.5) / 1.1);margin-bottom:calc(1.4em / 1.1);font-size:1.1em;line-height:1.5;font-weight:600;}.css-ob6uua u{-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid #373a40;}.css-ob6uua b{font-weight:600;}.css-ob6uua sup{font-size:0.8em;}.css-ob6uua sup[data-draft-type='reference']{color:#09408e;}.css-ob6uua a:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}html[data-focus-visible] .css-ob6uua a:focus{box-shadow:0 0 0 2px #ffffff,0 0 0 4px rgba(23,114,246,0.3);}.css-ob6uua a.ztext-link,.css-ob6uua a.internal,.css-ob6uua a.external{-webkit-text-decoration:none;text-decoration:none;cursor:pointer;border-bottom:1px solid #81858f;}.css-ob6uua a.ztext-link:hover,.css-ob6uua a.internal:hover,.css-ob6uua a.external:hover{color:#09408e;border-bottom:1px solid #09408e;}.css-ob6uua a.ztext-link > .ellipsis::after,.css-ob6uua a.internal > .ellipsis::after,.css-ob6uua a.external > .ellipsis::after{content:'...';}.css-ob6uua a.ztext-link > .invisible,.css-ob6uua a.internal > .invisible,.css-ob6uua a.external > .invisible{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;}.css-ob6uua a.ztext-link u,.css-ob6uua a.internal u,.css-ob6uua a.external u{border:none;}.css-ob6uua a.member_mention{color:#09408e;}.css-ob6uua a.member_mention:hover{border-bottom:1px solid #09408e;}.css-ob6uua a.UserLink-link{color:#09408e;}.css-ob6uua a.UserLink-link:hover{border-bottom:1px solid #09408e;}.css-ob6uua p{margin:1.4em 0;}.css-ob6uua p.ztext-empty-paragraph{margin:calc((2.8em- (1.4em * 2 + 1.6em)) / 2) 0;}.css-ob6uua p.ztext-empty-paragraph + .ztext-empty-paragraph{margin:1.4em 0;}.css-ob6uua hr{margin:4em auto;width:240px;max-width:100%;border:none;border-top:1px solid #c4c7ce;}.css-ob6uua img[eeimg]{max-width:100%;vertical-align:middle;}.css-ob6uua img[eeimg="1"]{margin:0 3px;max-width:calc(100% - 6px);display:inline-block;}.css-ob6uua img[eeimg="2"]{margin:1.4em auto;display:block;}.css-ob6uua blockquote{margin:1.4em 0;padding-left:1em;color:#535861;border-left:3px solid #c4c7ce;}.css-ob6uua ol,.css-ob6uua ul{margin:1.4em 0;padding:0;width:100%;}.css-ob6uua ol ol,.css-ob6uua ul ol,.css-ob6uua ol ul,.css-ob6uua ul ul{margin:0;}.css-ob6uua ol li::before,.css-ob6uua ul li::before{width:1em;}.css-ob6uua ol > ol,.css-ob6uua ul > ol,.css-ob6uua ol > ul,.css-ob6uua ul > ul{padding-left:1em;box-sizing:border-box;}.css-ob6uua ul>li{display:table;width:100%;list-style:none;}.css-ob6uua ul>li::before{display:table-cell;content:'•  ';white-space:pre;}.css-ob6uua ol{counter-reset:ol;}.css-ob6uua ol > li{display:table;width:100%;list-style:none;}.css-ob6uua ol > li::before{display:table-cell;text-align:right;counter-increment:ol;content:counter(ol) '. ';white-space:pre;}.css-ob6uua ol ol{counter-reset:ol2;}.css-ob6uua ol ol li::before{counter-increment:ol2;content:counter(ol2) '. ';}.css-ob6uua ol ol ol{counter-reset:ol3;}.css-ob6uua ol ol ol li::before{counter-increment:ol3;content:counter(ol3) '. ';}.css-ob6uua ol ol ol ol{counter-reset:ol4;}.css-ob6uua ol ol ol ol li::before{counter-increment:ol4;content:counter(ol4) '. ';}.css-ob6uua figure{margin:1.4em 0;}.css-ob6uua figure .content_image,.css-ob6uua figure .origin_image{margin:0 auto;}.css-ob6uua figure figcaption{margin-top:calc(0.6em / 0.9);padding:0 1em;font-size:0.9em;line-height:1.5;text-align:center;color:#9196a1;}.css-ob6uua figure + figure{margin-top:calc(1.4em * 1.6);}.css-ob6uua figure[data-size='small'],.css-ob6uua figure:not([data-size]) > [data-size='small']{clear:both;}.css-ob6uua figure[data-size='left'],.css-ob6uua figure:not([data-size]) > [data-size='left']{float:left;margin:0 20px 20px 0;max-width:33%;}.css-ob6uua figure[data-size='right'],.css-ob6uua figure:not([data-size]) > [data-size='right']{float:right;margin:0 0 20px 20px;max-width:33%;}.css-ob6uua figure[data-size='collapse']{margin-bottom:0;}.css-ob6uua figure[data-size='collapse'] + figure{margin-top:0;}.css-ob6uua .content_image,.css-ob6uua .origin_image{display:block;max-width:100%;height:auto;margin:1.4em auto;background-color:#fff;}.css-ob6uua .content_image[data-size='small'],.css-ob6uua .origin_image[data-size='small']{max-width:40%;}.css-ob6uua .content_image.zh-lightbox-thumb,.css-ob6uua .origin_image.zh-lightbox-thumb{cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in;}.css-ob6uua code{margin:0 2px;padding:3px 4px;border-radius:3px;font-family:Menlo,Monaco,Consolas,'Andale Mono','lucida console','Courier New',monospace;font-size:0.9em;background-color:#f8f8fa;}.css-ob6uua pre{margin:1.4em 0;padding:calc(0.8em / 0.9);font-size:0.9em;word-break:initial;word-wrap:initial;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;background:#f8f8fa;border-radius:4px;}.css-ob6uua pre code{margin:0;padding:0;font-size:inherit;border-radius:0;background-color:inherit;}.css-ob6uua li pre{white-space:pre-wrap;}.css-ob6uua table[data-draft-type='table']{border-collapse:collapse;font-size:15px;margin:1.4em auto;max-width:100%;table-layout:fixed;text-align:left;width:100%;}.css-ob6uua table[data-draft-type='table'][data-size='small']{min-width:260px;width:40%;}.css-ob6uua table[data-draft-type='table'][data-row-style='striped'] tr:nth-of-type(2n + 1){background:#f8f8fa;}.css-ob6uua table[data-draft-type='table'] td,.css-ob6uua table[data-draft-type='table'] th{border:1px solid #c4c7ce;line-height:24px;height:24px;padding:3px 12px;}.css-ob6uua table[data-draft-type='table'] th{background:#ebeced;color:#191B1F;font-weight:500;}.css-ob6uua .video-box,.css-ob6uua .link-box{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:1.4em 0;overflow:auto;white-space:normal;cursor:pointer;border:solid 1px #ebeced;border-radius:4px;}.css-ob6uua .lazy[data-lazy-status]{background-color:#f8f8fa;}.css-ob6uua .lazy[data-lazy-status="ok"]{background-color:#fff;-webkit-animation:animation-1yvu044 0.5s ease-in;animation:animation-1yvu044 0.5s ease-in;}.css-ob6uua .highlight{margin:1em 0;}.css-ob6uua .highlight pre{margin:0;}.css-ob6uua .highlight .hll{background-color:#f8f8fa;}.css-ob6uua .highlight .c{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .err{color:#D95350;}.css-ob6uua .highlight .k{font-weight:600;}.css-ob6uua .highlight .o{font-weight:600;}.css-ob6uua .highlight .cm{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cp{font-weight:600;color:#9196a1;}.css-ob6uua .highlight .c1{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cs{font-style:italic;font-weight:600;color:#9196a1;}.css-ob6uua .highlight .gd{color:#F05159;}.css-ob6uua .highlight .ge{font-style:italic;}.css-ob6uua .highlight .gr{color:#D95350;}.css-ob6uua .highlight .gh{color:#9196a1;}.css-ob6uua .highlight .gi{color:#12b370;}.css-ob6uua .highlight .go{color:#81858f;}.css-ob6uua .highlight .gp{color:#535861;}.css-ob6uua .highlight .gs{font-weight:600;}.css-ob6uua .highlight .gu{color:#9196a1;}.css-ob6uua .highlight .gt{color:#D95350;}.css-ob6uua .highlight .kc{font-weight:600;}.css-ob6uua .highlight .kd{font-weight:600;}.css-ob6uua .highlight .kn{font-weight:600;}.css-ob6uua .highlight .kp{font-weight:600;}.css-ob6uua .highlight .kr{font-weight:600;}.css-ob6uua .highlight .kt{font-weight:600;color:#09408e;}.css-ob6uua .highlight .m{color:#1772F6;}.css-ob6uua .highlight .s{color:#D95350;}.css-ob6uua .highlight .na{color:#1772F6;}.css-ob6uua .highlight .nb{color:#1772F6;}.css-ob6uua .highlight .nc{font-weight:600;color:#09408e;}.css-ob6uua .highlight .no{color:#1772F6;}.css-ob6uua .highlight .ni{color:#6A5FF3;}.css-ob6uua .highlight .ne{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nf{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nn{color:#535861;}.css-ob6uua .highlight .nt{color:#09408e;}.css-ob6uua .highlight .nv{color:#1772F6;}.css-ob6uua .highlight .ow{font-weight:600;}.css-ob6uua .highlight .w{color:#adb0b7;}.css-ob6uua .highlight .mf{color:#1772F6;}.css-ob6uua .highlight .mh{color:#1772F6;}.css-ob6uua .highlight .mi{color:#1772F6;}.css-ob6uua .highlight .mo{color:#1772F6;}.css-ob6uua .highlight .sb{color:#D95350;}.css-ob6uua .highlight .sc{color:#D95350;}.css-ob6uua .highlight .sd{color:#D95350;}.css-ob6uua .highlight .s2{color:#D95350;}.css-ob6uua .highlight .se{color:#D95350;}.css-ob6uua .highlight .sh{color:#D95350;}.css-ob6uua .highlight .si{color:#D95350;}.css-ob6uua .highlight .sx{color:#D95350;}.css-ob6uua .highlight .sr{color:#A5542F;}.css-ob6uua .highlight .s1{color:#D95350;}.css-ob6uua .highlight .ss{color:#D95350;}.css-ob6uua .highlight .bp{color:#9196a1;}.css-ob6uua .highlight .vc{color:#1772F6;}.css-ob6uua .highlight .vg{color:#1772F6;}.css-ob6uua .highlight .vi{color:#1772F6;}.css-ob6uua .highlight .il{color:#1772F6;}.css-ob6uua .highlight::-webkit-scrollbar{width:6px;height:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal{background-color:rgba(25,27,31,0.5);border-radius:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal:hover{background-color:rgba(25,27,31,0.6);}.css-ob6uua .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-ob6uua .LinkCard.old,.css-ob6uua .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-ob6uua .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-ob6uua .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-ob6uua .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-ob6uua .LinkCard.new,.css-ob6uua .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-ob6uua .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-ob6uua .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-ob6uua .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-ob6uua .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-ob6uua .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-ob6uua .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-ob6uua .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-ob6uua .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-ob6uua .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-ob6uua .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-ob6uua .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-ob6uua .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-ob6uua .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-ob6uua .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-ob6uua .FileLinkCard-info{margin-left:12px;}.css-ob6uua .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-ob6uua .FileLinkCard-source{white-space:pre;}.css-ob6uua img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-ob6uua img.content_image[data-size="normal"],.css-ob6uua img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-ob6uua img.content_image[data-size="small"],.css-ob6uua img.origin_image[data-size="small"]{width:320px;max-width:100%;}@-webkit-keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}@keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}</style><style data-emotion-css="1qckg6r">.css-1qckg6r{width:442px;}.css-1qckg6r .Modal-content{padding:16px 20px 32px;margin:0;}</style><style data-emotion-css="zein01">.css-zein01{border-radius:4px;padding:0 12px;border:1px solid #ebeced;}</style><style data-emotion-css="1xlfegr">.css-1xlfegr{background:transparent;box-shadow:none;}</style><style data-emotion-css="1gomreu">.css-1gomreu{position:relative;display:inline-block;}</style><style data-emotion-css="1u7r5c9">.css-1u7r5c9{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:40px;height:40px;border-radius:50%;}</style><style data-emotion-css="ch8ocw">.css-ch8ocw{position:relative;display:inline-block;height:30px;padding:0 12px;font-size:14px;line-height:30px;color:#1772F6;vertical-align:top;border-radius:100px;background:rgba(23,114,246,0.1);}.css-ch8ocw:hover{background-color:rgba(23,114,246,0.15);}</style><style type="text/css">/* toast 打包后 css 的有先层级有问题，自定义的样式会被覆盖，先加个 important 吧 */
.Toast_module_toast__e741a14e {
  top: 40px !important;
  border-radius: 34px !important;
  box-shadow: 0px 4px 16px #00000014 !important;
  background-color: #fff !important;
  padding: 11px 24px !important;
  font-weight: 500 !important;
  font-size: 14px !important;
  line-height: 22px !important;
  color: #121212 !important;
  transform: translate(-50%, 0%) !important;
}
</style><style type="text/css">.Marquee_module_marquee__218919a6 {
  overflow: hidden;
}

.Marquee_module_marqueeText__218919a6 {
  position: relative;
  transition: all 0.5s ease-in-out;
}
.Marquee_module_noAnimation__218919a6 {
  transition: none;
}

.Marquee_module_marqueeItem__218919a6 {
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  overflow: hidden;
  flex: 1;
}
</style><style data-emotion="css"></style></head><body class="WhiteBg-body PostIndex-body" aria-status="false" aria-ofstatus="false" aria-basefontsize="16" data-rh="class"><a id="ariaTipText" role="pagedescription" aria-label="欢迎进入 《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private - 知乎,盲人用户使用操作智能引导，请按快捷键Ctrl+Alt+R；阅读详细操作说明请按快捷键Ctrl+Alt+问号键。" aria-atomic="true" href="javascript:void(0)" class="skipAutoFix" style="width: 1px; height: 1px;"><img src="" style="width:1px !important;height:1px !important;position:absolute;top:0;"></a><div id="root"><div class="App"><div class="LoadingBar  css-55n9hh"></div><div><span style="position:absolute;top:-10000px;left:-10000px" role="log" aria-live="assertive"></span></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;13-37-60-50-30&quot;}" data-zop="{&quot;authorName&quot;:&quot;大钊&quot;,&quot;itemId&quot;:&quot;34059049&quot;,&quot;title&quot;:&quot;《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-detail-view-path-module="PostItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;34059049&quot;,&quot;id&quot;:&quot;34059049&quot;}}}"><div class="ColumnPageHeader-Wrapper"><div><div class="Sticky ColumnPageHeader css-1l12z7y"><div class="ColumnPageHeader-content"><a href="https://www.zhihu.com/" aria-label="知乎"><svg viewBox="0 0 64 30" fill="#1772F6" width="64" height="30" class="css-1hlrcxk"><path d="M29.05 4.582H16.733V25.94h3.018l.403 2.572 4.081-2.572h4.815V4.582zm-5.207 18.69l-2.396 1.509-.235-1.508h-1.724V7.233h6.78v16.04h-2.425zM14.46 14.191H9.982c0-.471.033-.954.039-1.458v-5.5h5.106V5.935a1.352 1.352 0 0 0-.404-.957 1.378 1.378 0 0 0-.968-.396H5.783c.028-.088.056-.177.084-.255.274-.82 1.153-3.326 1.153-3.326a4.262 4.262 0 0 0-2.413.698c-.57.4-.912.682-1.371 1.946-.532 1.453-.997 2.856-1.31 3.693C1.444 8.674.28 11.025.28 11.025a5.85 5.85 0 0 0 2.52-.61c1.119-.593 1.679-1.502 2.054-2.883l.09-.3h2.334v5.5c0 .5-.045.982-.073 1.46h-4.12c-.71 0-1.39.278-1.893.775a2.638 2.638 0 0 0-.783 1.874h6.527a17.717 17.717 0 0 1-.778 3.649 16.796 16.796 0 0 1-3.012 5.273A33.104 33.104 0 0 1 0 28.74s3.13 1.175 5.425-.954c1.388-1.292 2.631-3.814 3.23-5.727a28.09 28.09 0 0 0 1.12-5.229h5.967v-1.37a1.254 1.254 0 0 0-.373-.899 1.279 1.279 0 0 0-.909-.37z"></path><path d="M11.27 19.675l-2.312 1.491 5.038 7.458a6.905 6.905 0 0 0 .672-2.218 3.15 3.15 0 0 0-.28-2.168l-3.118-4.563zM51.449 15.195V5.842c4.181-.205 7.988-.405 9.438-.483l.851-.05c.387-.399.885-2.395.689-3.021-.073-.25-.213-.666-.638-.555a33.279 33.279 0 0 1-4.277.727c-2.766.321-3.97.404-7.804.682-6.718.487-12.709.72-12.709.72a2.518 2.518 0 0 0 .788 1.834 2.567 2.567 0 0 0 1.883.706c2.278-.095 5.598-.25 8.996-.41v9.203h-12.78c0 .703.281 1.377.783 1.874a2.69 2.69 0 0 0 1.892.777h10.105v7.075c0 .887-.464 1.192-1.231 1.214h-3.92a4.15 4.15 0 0 0 .837 1.544 4.2 4.2 0 0 0 1.403 1.067 6.215 6.215 0 0 0 2.71.277c1.36-.066 2.967-.826 2.967-3.57v-7.607h11.28c.342 0 .67-.135.91-.374.242-.239.378-.563.378-.902v-1.375H51.449z"></path><path d="M42.614 8.873a2.304 2.304 0 0 0-1.508-.926 2.334 2.334 0 0 0-1.727.405l-.376.272 4.255 5.85 2.24-1.62-2.884-3.98zM57.35 8.68l-3.125 4.097 2.24 1.663 4.517-5.927-.375-.277a2.32 2.32 0 0 0-1.722-.452 2.327 2.327 0 0 0-1.536.896z"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="https://www.zhihu.com/column/insideue4">InsideUE5</a></div></div><div class="ColumnPageHeader-Button"><div class="Popover"><button title="更多" id="Popover1-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button ColumnPageHeader-MenuToggler FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--Dots" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></button></div><button type="button" class="Button ColumnPageHeader-WriteButton FEfUrdfMIKpQDJDqkjte Button--blue JmYzaky7MEPMFcJDLNMG"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--EditSurround" fill="currentColor"><path d="M4.352 6.804A2.554 2.554 0 0 1 6.905 4.25h6.072a.875.875 0 0 0 0-1.75H6.905a4.304 4.304 0 0 0-4.303 4.304v10.142a4.304 4.304 0 0 0 4.303 4.304h10.143a4.304 4.304 0 0 0 4.304-4.304v-6.071a.875.875 0 0 0-1.75 0v6.071a2.554 2.554 0 0 1-2.554 2.554H6.905a2.554 2.554 0 0 1-2.553-2.554V6.804Z"></path><path d="M20.595 4.731a.875.875 0 1 0-1.237-1.237l-7.763 7.762a.875.875 0 1 0 1.238 1.238l7.762-7.763Z"></path></svg>写文章</button></div></div><div class="ColumnPageHeader-profile"><div class="Popover AppHeader-menu"><button id="Popover4-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button AppHeader-profileEntry FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><img class="Avatar AppHeader-profileAvatar css-fnnb9l" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x" alt="点击打开没有了想念的主页"></button></div><div class="Popover ddLajxN_Q0AuobBZjX9m AppHeaderProfileMenu-creatorHintPopover"><div class="AppHeaderProfileMenu-creatorHintToggler" id="Popover5-toggle" aria-haspopup="true" aria-expanded="false"></div></div></div></div></div></div><div class="css-78p1r9"><div class="css-1h1xzpn"><div class="css-1ld0bim"><span style="box-sizing:border-box;display:block;overflow:hidden;width:initial;height:initial;background:none;opacity:1;border:0;margin:0;padding:0"><picture><source type="image/avif" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.avif 1x, %E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.avif 2x" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.avif"><source type="image/webp" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.webp 1x, %E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.webp 2x" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.webp"><img alt="《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private" decoding="async" style="position: absolute; inset: 0px; box-sizing: border-box; padding: 0px; border: medium; margin: auto; display: block; width: 0px; height: 0px; min-width: 100%; max-width: 100%; min-height: 100%; max-height: 100%;" width="100%" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.jpg 1x, %E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-769549c0de13c0a0a66d078f776103e0_1440w.jpg 2x"></picture></span></div></div></div><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private</h1><div class="Post-Author"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><div class="AuthorInfo"><meta itemprop="name" content="大钊"><meta itemprop="image" content="https://picx.zhimg.com/v2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b"><meta itemprop="url" content="https://www.zhihu.com/people/fjz13"><meta itemprop="zhihu:followerCount"><span class="UserLink AuthorInfo-avatarWrapper"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/fjz13" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User"><img class="Avatar AuthorInfo-avatar css-1syywx2" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l.png 2x" alt="大钊"></a></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/fjz13" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User">大钊</a></div><a href="https://www.zhihu.com/kvip/purchase" rel="noopener noreferrer" class="css-2dtzk2">​<img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-57fe7feb4813331d5eca02ef731e12c9_002.png" alt="知乎知识会员" class="css-1m3x3v9"></a></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="ztext AuthorInfo-badgeText css-0">UE源码剖析，等编译的时候回答问题</div></div></div></div></div></div><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Plus FollowButton-icon" fill="currentColor"><path fill-rule="evenodd" d="M13.25 3.25a1.25 1.25 0 1 0-2.5 0v7.5h-7.5a1.25 1.25 0 1 0 0 2.5h7.5v7.5a1.25 1.25 0 1 0 2.5 0v-7.5h7.5a1.25 1.25 0 0 0 0-2.5h-7.5v-7.5Z" clip-rule="evenodd"></path></svg></span>关注他</button></div><div class="LabelContainer-wrapper"></div><div><div class="css-dvccr2"><div class="css-1lr85n">143 人赞同了该文章</div><svg width="14px" height="14px" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRight16 css-z4ujak" fill="currentColor"><path fill-rule="evenodd" d="M6.252 2.328a.75.75 0 0 1 1.04.213l3.334 5.05a.75.75 0 0 1 0 .826L7.292 13.46a.75.75 0 0 1-1.251-.828L9.1 8.004 6.04 3.367a.75.75 0 0 1 .212-1.039Z" clip-rule="evenodd"></path></svg></div></div><span class="css-z4ujak"></span></header><div class="Post-RichTextContainer"><div class="css-1od93p9"><div class="css-376mun"><div class="RichText ztext Post-RichText css-ob6uua" options="[object Object]"><p data-first-child=""></p><blockquote data-pid="6bddEZ6d">读的不如写的快</blockquote><h2>引言</h2><p data-pid="URGKSx-2">在之前的<a href="https://zhuanlan.zhihu.com/p/25098685" class="internal" target="_blank">《InsideUE4》UObject（四）类型系统代码生成</a>和<a href="https://zhuanlan.zhihu.com/p/26019216" class="internal" target="_blank">《InsideUE4》UObject（五）类型系统收集</a>章
节里，我们介绍了UE4是如何根据我们的代码和元标记生成反射代码，并在Main函数调用之前，利用静态变量的初始化来收集类型的元数据信息。经过了我这
么长时间的拖更……也经过了Epic这么长时间的版本更替，把UE从4.15.1进化到了4.18.3，自然的，CoreUObject模块也进行了一些
改进。本文就先补上一个关于代码生成的改进：在UE4.17（20170722）的时候进行的UObjectGlobals.h.cpp重构，优化了代码
生成的内容和组织形式。</p><h2>旧版本代码生成</h2><p data-pid="mpbBZct0">首先来看一下之前的版本的代码元数据生成：</p><h2><span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=5813180&amp;content_type=Article&amp;match_order=1&amp;q=UEnum&amp;zhida_source=entity" target="_blank">UEnum<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>的生成：</h2><div class="highlight"><pre><code class="language-text">//测试代码
#pragma once
#include "UObject/NoExportTypes.h"
#include "MyEnum.generated.h"
UENUM(BlueprintType)
enum class EMyEnum : uint8
{
    MY_Dance    UMETA(DisplayName = "Dance"),
    MY_Rain     UMETA(DisplayName = "Rain"),
    MY_Song     UMETA(DisplayName = "Song")
};

//生成代码节选(Hello.genrated.cpp)：
ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMyEnum"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());//直接创建该UEnum对象
TArray&lt;TPair&lt;FName, uint8&gt;&gt; EnumNames;//设置枚举里的名字和值
EnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT("EMyEnum::MY_Dance")), 0));
EnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT("EMyEnum::MY_Rain")), 1));
EnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT("EMyEnum::MY_Song")), 2));
EnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT("EMyEnum::MY_MAX")), 3));   //添加一个默认的MAX字段
ReturnEnum-&gt;SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
ReturnEnum-&gt;CppType = TEXT("EMyEnum");
#if WITH_METADATA   //设置元数据
UMetaData* MetaData = ReturnEnum-&gt;GetOutermost()-&gt;GetMetaData();
MetaData-&gt;SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
MetaData-&gt;SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("MyEnum.h"));
MetaData-&gt;SetValue(ReturnEnum, TEXT("MY_Dance.DisplayName"), TEXT("Dance"));
MetaData-&gt;SetValue(ReturnEnum, TEXT("MY_Rain.DisplayName"), TEXT("Rain"));
MetaData-&gt;SetValue(ReturnEnum, TEXT("MY_Song.DisplayName"), TEXT("Song"));
#endif</code></pre></div><h2>UStruct的生成：</h2><div class="highlight"><pre><code class="language-text">//测试代码：
#pragma once
#include "UObject/NoExportTypes.h"
#include "MyStruct.generated.h"
USTRUCT(BlueprintType)
struct HELLO_API FMyStruct
{
    GENERATED_USTRUCT_BODY()
    UPROPERTY(BlueprintReadWrite)
    float Score;
};
//生成代码节选(Hello.genrated.cpp)：
ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MyStruct"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps&lt;FMyStruct&gt;, EStructFlags(0x00000201));//直接创建UScriptStruct对象
UProperty* NewProp_Score = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Score"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Score, FMyStruct), 0x0010000000000004);//直接关联相应的Property信息
ReturnStruct-&gt;StaticLink(); //链接
#if WITH_METADATA   //元数据
UMetaData* MetaData = ReturnStruct-&gt;GetOutermost()-&gt;GetMetaData();
MetaData-&gt;SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
MetaData-&gt;SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("MyStruct.h"));
MetaData-&gt;SetValue(NewProp_Score, TEXT("Category"), TEXT("MyStruct"));
MetaData-&gt;SetValue(NewProp_Score, TEXT("ModuleRelativePath"), TEXT("MyStruct.h"));
#endif</code></pre></div><h2>UClass的生成：</h2><div class="highlight"><pre><code class="language-text">//测试代码：
#pragma once
#include "UObject/NoExportTypes.h"
#include "MyClass.generated.h"
UCLASS(BlueprintType)
class HELLO_API UMyClass : public UObject
{
    GENERATED_BODY()
public:
    UPROPERTY(BlueprintReadWrite)
    float Score;
public:
    UFUNCTION(BlueprintCallable, Category = "Hello")
    void CallableFunc();    //C++实现，蓝图调用
    UFUNCTION(BlueprintNativeEvent, Category = "Hello")
    void NativeFunc();  //C++实现默认版本，蓝图可重载实现
    UFUNCTION(BlueprintImplementableEvent, Category = "Hello")
    void ImplementableFunc();   //C++不实现，蓝图实现
};
//生成代码节选(Hello.genrated.cpp)：
//添加子字段
OuterClass-&gt;LinkChild(Z_Construct_UFunction_UMyClass_CallableFunc());
OuterClass-&gt;LinkChild(Z_Construct_UFunction_UMyClass_ImplementableFunc());
OuterClass-&gt;LinkChild(Z_Construct_UFunction_UMyClass_NativeFunc());
PRAGMA_DISABLE_DEPRECATION_WARNINGS
UProperty* NewProp_Score = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Score"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Score, UMyClass), 0x0010000000000004);//添加属性
PRAGMA_ENABLE_DEPRECATION_WARNINGS
//添加函数名字映射
OuterClass-&gt;AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyClass_CallableFunc(), "CallableFunc"); // 774395847
OuterClass-&gt;AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyClass_ImplementableFunc(), "ImplementableFunc"); // 615168156
OuterClass-&gt;AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyClass_NativeFunc(), "NativeFunc"); // 3085959641
OuterClass-&gt;StaticLink();
#if WITH_METADATA   //元数据
UMetaData* MetaData = OuterClass-&gt;GetOutermost()-&gt;GetMetaData();
MetaData-&gt;SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
MetaData-&gt;SetValue(OuterClass, TEXT("IncludePath"), TEXT("MyClass.h"));
MetaData-&gt;SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MyClass.h"));
MetaData-&gt;SetValue(NewProp_Score, TEXT("Category"), TEXT("MyClass"));
MetaData-&gt;SetValue(NewProp_Score, TEXT("ModuleRelativePath"), TEXT("MyClass.h"));
#endif</code></pre></div><p data-pid="MIkqkoTD">可以见到，以往的方式在生成的代码里有很多的“套路化”的SetValue、Add段落，都是用来添加字段属性、函数和元数据的信息。虽然这些代码也是UHT程序化生成的，不用人手工操作，看起来也只能说是略有瑕疵，但要是从精益求精的角度上来说，缺点有：</p><ol><li data-pid="nitHVay7">本着DRY(Don't Repeat Yourself)原则，这些模式化的代码在每一个反射文件里也都会重复N次，增大了代码的体积。</li><li data-pid="3cvwcoL5">代码文件的膨胀，自然会增加编译的时间消耗。</li><li data-pid="UhDkVSta">即使是程序生成的代码，有时也难免要阅读Debug，大量的模式代码噪音显然降低了关键代码的可读性和课调试性。</li><li data-pid="8uaz8oeb">UHT的编写维护，更多的代码量生成，自然会带来UHT工具代码的编写量增长，增大了编写维护的成本；代码越多，Bug越多；UHT要输出更多的代码，自然效率会降低，从而导致总编译时间的消耗增长。</li></ol><h2>UE4CodeGen_Private</h2><p data-pid="jbQbQJbv">改善方式是显然易得的，同一件事不要做两遍。既然到处都是这些胶水代码，那就把这些代码封装成函数；既然到处都散布着这些元数据信息数据，那就把这些数据封装成结构作为函数的参数。<br>所以，UE在4.17的时候，在UObjectGlobals.h.cpp里增加了一个UE4CodeGen_Private的命名空间，里面添加了一些生成函数：</p><div class="highlight"><pre><code class="language-text">//UObjectGlobals.h
namespace UE4CodeGen_Private
{
    COREUOBJECT_API void ConstructUFunction(UFunction*&amp; OutFunction, const FFunctionParams&amp; Params);
    COREUOBJECT_API void ConstructUEnum(UEnum*&amp; OutEnum, const <span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=5813180&amp;content_type=Article&amp;match_order=1&amp;q=FEnumParams&amp;zhida_source=entity" target="_blank">FEnumParams<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>&amp; Params);
    COREUOBJECT_API void ConstructUScriptStruct(UScriptStruct*&amp; OutStruct, const FStructParams&amp; Params);
    COREUOBJECT_API void ConstructUPackage(UPackage*&amp; OutPackage, const FPackageParams&amp; Params);
    COREUOBJECT_API void ConstructUClass(UClass*&amp; OutClass, const FClassParams&amp; Params);
}

//UObjectGlobals.cpp
namespace UE4CodeGen_Private
{
    void ConstructUProperty(UObject* Outer, const FPropertyParamsBase* const*&amp; PropertyArray, int32&amp; NumProperties);
    void AddMetaData(UObject* Object, const <span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=5813180&amp;content_type=Article&amp;match_order=1&amp;q=FMetaDataPairParam&amp;zhida_source=entity" target="_blank">FMetaDataPairParam<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>* MetaDataArray, int32 NumMetaData);
}</code></pre></div><p data-pid="rYTljJ8w">函数的名字含义显而易见，都是用来构造一些元数据结构：
UEnum、UFunction、UProperty、UScriptStruct、UClass、UPackage和添加一些元数据（这些结构后续会详
解）。第一个参数都是指针的引用，所以是用来向外构造一个对象用指针返回的；关键的是在第二个参数：都是一个个XXXParams参数，用来传进去信息
的。<br>所以我们继续查看这些参数信息：</p><h2>UEnum的Params和生成：</h2><div class="highlight"><pre><code class="language-text">//UObjectGlobals.h
namespace UE4CodeGen_Private
{
#if WITH_METADATA   //只有在编辑器模式下，才保留元数据信息
    struct FMetaDataPairParam   //元数据对
    {
        //例：MetaData-&gt;SetValue(ReturnEnum, TEXT("MY_Song.DisplayName"), TEXT("Song"));
        const char* NameUTF8;   //元数据的键值对信息
        const char* ValueUTF8;
    };
#endif
    struct <span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=5813180&amp;content_type=Article&amp;match_order=1&amp;q=FEnumeratorParam&amp;zhida_source=entity" target="_blank">FEnumeratorParam<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>     //枚举项
    {
        const char*               NameUTF8; //枚举项的名字
        int64                     Value;    //枚举项的值
#if WITH_METADATA
        const FMetaDataPairParam* MetaDataArray;    //一个枚举项依然可以包含多个元数据键值对
        int32                     NumMetaData;
#endif
    };

    struct FEnumParams  //枚举参数
    {
        UObject*                  (*OuterFunc)();   //获取Outer对象的函数指针回调，用于获取所属于的Package
        EDynamicType                DynamicType;    //是否动态，一般是非动态的
        const char*                 NameUTF8;   //枚举的名字
        EObjectFlags                ObjectFlags;    //UEnum对象的标志
        FText                     (*DisplayNameFunc)(int32);    //获取自定义显示名字的回调，一般是nullptr，就是默认规则生成的名字
        uint8                       CppForm; 
        /*CppForm指定这个枚举是怎么定义的，用来在之后做更细的处理。
        enum class ECppForm
        {
            Regular,    //常规的enum MyEnum{}这样定义
            Namespaced, //MyEnum之外套一层namespace的定义
            EnumClass   //enum class定义的
        };
        */
        const char*                 CppTypeUTF8;    //C++里的类型名字，一般是等同于NameUTF8的，但有时定义名字和反射的名字可以不一样
        const FEnumeratorParam*     EnumeratorParams;   //枚举项数组
        int32                       NumEnumerators;
#if WITH_METADATA
        const FMetaDataPairParam*   MetaDataArray;  //元数据数组
        int32                       NumMetaData;
#endif
    };
}

//MyEnum.gen.cpp生成代码：
static const UE4CodeGen_Private::FEnumeratorParam Enumerators[] = { //所有的枚举项
            { "MyEnum::MY_Dance", (int64)MyEnum::MY_Dance },
            { "MyEnum::MY_Rain", (int64)MyEnum::MY_Rain },
            { "MyEnum::MY_Song", (int64)MyEnum::MY_Song },
        };
#if WITH_METADATA
static const UE4CodeGen_Private::FMetaDataPairParam Enum_MetaDataParams[] = {   //枚举的元数据
    { "BlueprintType", "true" },
    { "IsBlueprintBase", "true" },
    { "ModuleRelativePath", "MyEnum.h" },
    { "MY_Dance.DisplayName", "Dance" },
    { "MY_Rain.DisplayName", "Rain" },
    { "MY_Song.DisplayName", "Song" },
};
#endif
static const UE4CodeGen_Private::FEnumParams EnumParams = { //枚举的元数据参数信息
    (UObject*(*)())Z_Construct_UPackage__Script_Hello,
    UE4CodeGen_Private::EDynamicType::NotDynamic,
    "MyEnum",
    RF_Public|RF_Transient|RF_MarkAsNative,
    nullptr,
    (uint8)UEnum::ECppForm::EnumClass,
    "MyEnum",
    Enumerators, //枚举项数组
    ARRAY_COUNT(Enumerators),  
    METADATA_PARAMS(Enum_MetaDataParams, ARRAY_COUNT(Enum_MetaDataParams))//枚举元数据数组
};
UE4CodeGen_Private::ConstructUEnum(ReturnEnum, EnumParams); //利用枚举参数构造UEnum*对象到ReturnEnum</code></pre></div><p data-pid="3D8DJeUN">先挑最软的椰子开始捏，枚举的构造比较简单，就只是包含枚举项（字符串-整形)，所以只要依次添加进去就可以。元数据对指的就是那些UMETA等宏标记里面那些的内容，可以在很多地方上使用来添加额外的信息。</p><h2>UStruct的Params和生成：</h2><p data-pid="QpYqv1sN">因为UStruct里只能包含属性，所以我们在这里着重关注属性信息是怎么生成的。</p><div class="highlight"><pre><code class="language-text">//UObjectGlobals.h
//PS:为了阅读方便，与源码有一定的代码位置微调，但不影响功能正确性
namespace UE4CodeGen_Private
{
    enum class EPropertyClass   //属性的类型
    {
        Byte,
        Int8,
        Int16,
        Int,
        Int64,
        UInt16,
        UInt32,
        UInt64,
        UnsizedInt,
        UnsizedUInt,
        Float,
        Double,
        Bool,
        SoftClass,
        WeakObject,
        LazyObject,
        SoftObject,
        Class,
        Object,
        Interface,
        Name,
        Str,
        Array,
        Map,
        Set,
        Struct,
        Delegate,
        MulticastDelegate,
        Text,
        Enum,
    };

    // This is not a base class but is just a common initial sequence of all of the F*PropertyParams types below.
    // We don't want to use actual inheritance because we want to construct aggregated compile-time tables of these things.
    struct FPropertyParamsBase  //属性参数基类
    {
        EPropertyClass Type;    //属性的类型
        const char*    NameUTF8;     //属性的名字
        EObjectFlags   ObjectFlags;  //属性生成的UProperty对象标志，标识这个UProperty对象的特征，RF_XXX那些宏
        uint64         PropertyFlags;    //属性生成的UProperty属性标志，标识这个属性的特征，CPF_XXX那些宏
        int32          ArrayDim;        //属性有可能是个数组，数组的长度，默认是1
        const char*    RepNotifyFuncUTF8;   //属性的网络复制通知函数名字
    };

    struct FPropertyParamsBaseWithOffset // : FPropertyParamsBase
    {
        EPropertyClass Type;
        const char*    NameUTF8;
        EObjectFlags   ObjectFlags;
        uint64         PropertyFlags;
        int32          ArrayDim;
        const char*    RepNotifyFuncUTF8;
        int32          Offset;  //在结构或类中的内存偏移，可以理解为成员变量指针（成员变量指针其实本质上就是从对象内存起始位置的偏移）
    };
    //通用的属性参数
    struct FGenericPropertyParams // : FPropertyParamsBaseWithOffset
    {
        EPropertyClass   Type;
        const char*      NameUTF8;
        EObjectFlags     ObjectFlags;
        uint64           PropertyFlags;
        int32            ArrayDim;
        const char*      RepNotifyFuncUTF8;
        int32            Offset;
#if WITH_METADATA
        const FMetaDataPairParam*           MetaDataArray;
        int32                               NumMetaData;
#endif
    };

    //一些普通常用的数值类型就通过这个类型定义别名了
    // These property types don't add new any construction parameters to their base property
    typedef FGenericPropertyParams FInt8PropertyParams;
    typedef FGenericPropertyParams FInt16PropertyParams;

    //枚举类型属性参数
    struct FBytePropertyParams // : FPropertyParamsBaseWithOffset
    {
        EPropertyClass   Type;
        const char*      NameUTF8;
        EObjectFlags     ObjectFlags;
        uint64           PropertyFlags;
        int32            ArrayDim;
        const char*      RepNotifyFuncUTF8;
        int32            Offset;
        UEnum*         (*EnumFunc)();   //定义的枚举对象回调
#if WITH_METADATA
        const FMetaDataPairParam*           MetaDataArray;
        int32                               NumMetaData;
#endif
    };
    //...省略一些定义，可自行去UObjectGlobals.h查看
    //对象引用类型属性参数
    struct FObjectPropertyParams // : FPropertyParamsBaseWithOffset
    {
        EPropertyClass   Type;
        const char*      NameUTF8;
        EObjectFlags     ObjectFlags;
        uint64           PropertyFlags;
        int32            ArrayDim;
        const char*      RepNotifyFuncUTF8;
        int32            Offset;
        UClass*        (*ClassFunc)();  //用于获取该属性定义类型的函数指针回调
#if WITH_METADATA
        const FMetaDataPairParam*           MetaDataArray;
        int32                               NumMetaData;
#endif
    };

    struct FStructParams    //结构参数
    {
        UObject*                          (*OuterFunc)();   //所属于的Package
        UScriptStruct*                    (*SuperFunc)();   //该结构的基类，没有的话为nullptr
        void*                             (*StructOpsFunc)(); // really returns UScriptStruct::ICppStructOps*，结构的构造分配的辅助操作类
        const char*                         NameUTF8;   //结构名字
        EObjectFlags                        ObjectFlags;    //结构UScriptStruct*的对象特征
        uint32                              StructFlags; // EStructFlags该结构的本来特征
        SIZE_T                              SizeOf;     //结构的大小，就是sizeof(FMyStruct)，用以后续分配内存时候用
        SIZE_T                              AlignOf;//结构的内存对齐，就是alignof(FMyStruct)，用以后续分配内存时候用
        const FPropertyParamsBase* const*   PropertyArray;  //包含的属性数组
        int32                               NumProperties;
    #if WITH_METADATA
        const FMetaDataPairParam*           MetaDataArray;  //元数据数组
        int32                               NumMetaData;
    #endif
    };
}

//MyStruct.gen.cpp生成代码：
#if WITH_METADATA
static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[] = { //结构的元数据
    { "BlueprintType", "true" },
    { "ModuleRelativePath", "MyStruct.h" },
};
#endif
auto NewStructOpsLambda = []() -&gt; void* { return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps&lt;FMyStruct&gt;(); };   //一个获取操作类的回调
#if WITH_METADATA
//属性的元数据
static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Score_MetaData[] = {
    { "Category", "MyStruct" },
    { "ModuleRelativePath", "MyStruct.h" },
};
#endif
static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Score = { UE4CodeGen_Private::EPropertyClass::Float, "Score", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000004, 1, nullptr, STRUCT_OFFSET(FMyStruct, Score), METADATA_PARAMS(NewProp_Score_MetaData, ARRAY_COUNT(NewProp_Score_MetaData)) };//Score属性的信息
//属性的数组
static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
    (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_Score,
};
//结构的参数信息
static const UE4CodeGen_Private::FStructParams ReturnStructParams = {
    (UObject* (*)())Z_Construct_UPackage__Script_Hello,
    nullptr,
    &amp;UE4CodeGen_Private::TNewCppStructOpsWrapper&lt;decltype(NewStructOpsLambda)&gt;::NewCppStructOps,
    "MyStruct",
    RF_Public|RF_Transient|RF_MarkAsNative,
    EStructFlags(0x00000201),
    sizeof(FMyStruct),
    alignof(FMyStruct),
    PropPointers, ARRAY_COUNT(PropPointers),
    METADATA_PARAMS(Struct_MetaDataParams, ARRAY_COUNT(Struct_MetaDataParams))
};
UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, ReturnStructParams);//构造UScriptStruct*到ReturnStruct里去</code></pre></div><p data-pid="8CBIGUHK">代码比较简单，上下对照和看看注释就能大概明白。就是收集一个个属性的信息整合成数组，然后合并到结构参数里去，最后传给ConstructUScriptStruct来构造。</p><p data-pid="tmSe_Uql"><b>思考：FPropertyParamsBaseWithOffset以及后续为何不继承于FPropertyParamsBase？</b><br>我们在FPropertyParamsBase和FPropertyParamsBaseWithOffset等后续的注释后面以及属性成员的相似性上来看，很容易就看到这些F*PropertyParams其实是用了继承语义的，那为何不直接继承而是费劲的再写一遍呢？<br>虽然官方在FPropertyParamsBase上已经写了注释，但是有些朋友可能还是依然比较懵懂。其实这里涉及到一个C++的Aggregate类型的<a href="https://link.zhihu.com/?target=http%3A//en.cppreference.com/w/cpp/language/aggregate_initialization" class=" wrap external" target="_blank" rel="nofollow noreferrer">aggregate initialization</a>规则。具体的C++语法规则请自行去补充学习。简单来说，<b>一个Aggregate是一个数组或者一个没有用户声明构造函数，没有私有或保护类型的非静态数据成员，没有父类和虚函数的类型。</b> Aggregatel类型就可以用形如 <i>T object = {arg1, arg2, ...}</i> 的初始化列表来初始化。我们在上文中见到的：</p><div class="highlight"><pre><code class="language-text">static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Score = { UE4CodeGen_Private::EPropertyClass::Float, "Score", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000004, 1, nullptr, STRUCT_OFFSET(FMyStruct, Score), METADATA_PARAMS(NewProp_Score_MetaData, ARRAY_COUNT(NewProp_Score_MetaData)) };</code></pre></div><p data-pid="gkmlAL1A">后面的={}就是初始化列表。这么写当然是为了简洁的目的，否则一个个参数的字段设置过去，那也太麻烦了。<br>那如果用继承会怎么样呢？我们可以来做个测试：</p><div class="highlight"><pre><code class="language-text">struct Point2
{
    float X;
    float Y;
};

struct Point3 :public Point2    //这不是个Aggregate类型，因为有父类
{
    float Z;
};

struct Point3_Aggregate //这是个Aggregate类型
{
    float X;
    float Y;
    float Z;
};
const static Point3 pos{ 1.f,2.f,3.f }; // error C2440:'initializing': cannot convert from 'initializer list' to 'Point3'
const static Point3_Aggregate pos2{ 1.f,2.f,3.f };</code></pre></div><p data-pid="O46hvIdg">因
此UE选择不继承，宁愿每个重复写一遍字段声明，就是为了可以简单用{}初始化列表来构造对象。但是我们也观察到，在PropPointers数组里，也
依然把一个个元素都转为FPropertyParamsBase*。因为根据C/C++的对象内存模型，继承的时候，基类成员排在派生类成员之前的内存地
址上。又因为F*PropertyParams是如此的POD，所以只要保证内存地址和属性成员顺序一致，就可以保证转为另一个结构指针后依然可以正确的
使用。</p><p data-pid="GTeLiYiY">虽然看起来这么解释的通，但还是感觉很麻烦，本来应该用继承的语义却偏偏为了初始化列表妥协了。对完美主义者来说还是不能忍，那么有没有一种既可以用继承又可以用初始化列表的解决方案呢？<br>其实加上构造函数就可以了。不用Aggregate类型，放宽限制，改用POD类型（<b>POD类型就是没有非静态类型的non-POD类型 （或者这些类型的数组）和引用类型的数据成员，也没有用户定义的赋值操作符和析构函数的类型。</b>）。如：</p><div class="highlight"><pre><code class="language-text">struct Point2
{
    float X;
    float Y;
    Point2(float x, float y) :X(x), Y(y) {} //构造函数
};

struct Point3_POD :public Point2
{
    float Z;
    Point3_POD(float x, float y, float z) :Point2(x, y), Z(z) {}//构造函数
};

struct Point3_Aggregate
{
    float X;
    float Y;
    float Z;
};
const static Point3_POD pos{ 1.f,2.f,3.f };     //works happy ^_^
const static Point3_Aggregate pos2{ 1.f,2.f,3.f };  //works happy ^_^</code></pre></div><p data-pid="QS33o1cl">所以只要把F*PropertyParams加上构造函数就可以了。至于为啥UE不这么做？问Epic的人去，摊手~</p><h2>UFunction和UClass的Params和生成：</h2><p data-pid="kTdpLO99">为了测试UClass里的函数输入输出参数，所以增加一个AddHP函数。</p><div class="highlight"><pre><code class="language-text">//测试文件：
UCLASS()
class HELLO_API UMyClass :public UObject
{
    GENERATED_BODY()
public:
    UPROPERTY(BlueprintReadWrite)
    float Score;
public:
    UFUNCTION(BlueprintCallable, Category = "Hello")
    float AddHP(float HP);

    UFUNCTION(BlueprintCallable, Category = "Hello")
    void CallableFunc();    //C++实现，蓝图调用

    UFUNCTION(BlueprintNativeEvent, Category = "Hello")
    void NativeFunc();  //C++实现默认版本，蓝图可重载实现

    UFUNCTION(BlueprintImplementableEvent, Category = "Hello")
    void ImplementableFunc();   //C++不实现，蓝图实现
};

//Class.h
//类里的函数链接信息，一个函数名字对应一个UFunction对象
struct FClassFunctionLinkInfo 
{
    UFunction* (*CreateFuncPtr)();  //获得UFunction对象的函数指针回调
    const char* FuncNameUTF8;       //函数的名字
};
//类在Cpp里的类型信息，用一个结构是为了将来也许还会添加别的字段
struct FCppClassTypeInfoStatic
{
    bool bIsAbstract;   //是否抽象类
};

//UObjectGlobals.h
namespace UE4CodeGen_Private
{
    //函数参数
    struct FFunctionParams
    {
        UObject*                          (*OuterFunc)();   //所属于的外部对象，一般是外部的UClass*对象
        const char*                         NameUTF8;   //函数的名字
        EObjectFlags                        ObjectFlags;    //UFunction对象的特征
        UFunction*                        (*SuperFunc)();   //UFunction的基类，一般为nullptr
        EFunctionFlags                      FunctionFlags;  //函数本身的特征
        SIZE_T                              StructureSize;  //函数的参数返回值包结构的大小
        const FPropertyParamsBase* const*   PropertyArray;  //函数的参数和返回值字段数组
        int32                               NumProperties;  //函数的参数和返回值字段数组大小
        uint16                              RPCId;          //网络间的RPC Id
        uint16                              RPCResponseId;  //网络间的RPC Response Id
    #if WITH_METADATA
        const FMetaDataPairParam*           MetaDataArray;  //元数据数组
        int32                               NumMetaData;
    #endif
    };

    //实现的接口参数，篇幅所限，接口的内容可以自行分析
    struct FImplementedInterfaceParams
    {
        UClass* (*ClassFunc)();     //外部所属于的UInterface对象
        int32     Offset;           //在UMyClass里的实现的IMyInterface的虚函数表地址偏移
        bool      bImplementedByK2; //是否在蓝图中实现
    };

    //类参数
    struct FClassParams
    {
        UClass*                                   (*ClassNoRegisterFunc)(); //获得UClass*对象的函数指针
        UObject*                           (*const *DependencySingletonFuncArray)();    //获取依赖对象的函数指针数组，一般是需要前提构造的基类，模块UPackage对象
        int32                                       NumDependencySingletons;
        uint32                                      ClassFlags; // EClassFlags，类特征
        const FClassFunctionLinkInfo*               FunctionLinkArray;  //链接的函数数组
        int32                                       NumFunctions;
        const FPropertyParamsBase* const*           PropertyArray;  //类里定义的成员变量数组
        int32                                       NumProperties;
        const char*                                 ClassConfigNameUTF8;    //配置文件名字，有些类可以从配置文件从加载数据
        const FCppClassTypeInfoStatic*              CppClassInfo;   //Cpp里定义的信息
        const FImplementedInterfaceParams*          ImplementedInterfaceArray;  //实现的接口信息数组
        int32                                       NumImplementedInterfaces;
    #if WITH_METADATA           //类的元数据
        const FMetaDataPairParam*                   MetaDataArray;
        int32                                       NumMetaData;
    #endif
    };
}

//MyClass.gen.cpp
//构造AddHp函数的UFunction对象
UFunction* Z_Construct_UFunction_UMyClass_AddHP()
{
    struct MyClass_eventAddHP_Parms     //函数的参数和返回值包
    {
        float HP;
        float ReturnValue;
    };
    static UFunction* ReturnFunction = nullptr;
    if (!ReturnFunction)
    {
        //定义两个属性用来传递信息
        static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(MyClass_eventAddHP_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };

        static const UE4CodeGen_Private::FFloatPropertyParams NewProp_HP = { UE4CodeGen_Private::EPropertyClass::Float, "HP", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(MyClass_eventAddHP_Parms, HP), METADATA_PARAMS(nullptr, 0) };

        static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
            (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_ReturnValue,
            (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_HP,
        };

#if WITH_METADATA
        static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
            { "Category", "Hello" },
            { "ModuleRelativePath", "MyClass.h" },
        };
#endif
        static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UMyClass, "AddHP", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04020401, sizeof(MyClass_eventAddHP_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };

        UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams); //构造函数
    }
    return ReturnFunction;
}
//...构造其他的函数
//该类依赖的对象列表，用函数指针来获取。
static UObject* (*const DependentSingletons[])() = {
                (UObject* (*)())Z_Construct_UClass_UObject,
                (UObject* (*)())Z_Construct_UPackage__Script_Hello,
            };
//函数链接信息
static const FClassFunctionLinkInfo FuncInfo[] = {
    { &amp;Z_Construct_UFunction_UMyClass_CallableFunc, "CallableFunc" }, // 1841300010
    { &amp;Z_Construct_UFunction_UMyClass_ImplementableFunc, "ImplementableFunc" }, // 2010696670
    { &amp;Z_Construct_UFunction_UMyClass_NativeFunc, "NativeFunc" }, // 2593520329
};
#if WITH_METADATA
static const UE4CodeGen_Private::FMetaDataPairParam Class_MetaDataParams[] = {
    { "IncludePath", "MyClass.h" },
    { "ModuleRelativePath", "MyClass.h" },
};
#endif
#if WITH_METADATA
static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Score_MetaData[] = {
    { "Category", "MyClass" },
    { "ModuleRelativePath", "MyClass.h" },
};
#endif
static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Score = { UE4CodeGen_Private::EPropertyClass::Float, "Score", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000004, 1, nullptr, STRUCT_OFFSET(UMyClass, Score), METADATA_PARAMS(NewProp_Score_MetaData, ARRAY_COUNT(NewProp_Score_MetaData)) };

static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
    (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_Score,
};
static const FCppClassTypeInfoStatic StaticCppClassTypeInfo = {
    TCppClassTypeTraits&lt;UMyClass&gt;::IsAbstract,
};
static const UE4CodeGen_Private::FClassParams ClassParams = {
    &amp;UMyClass::StaticClass,
    DependentSingletons, ARRAY_COUNT(DependentSingletons),
    0x00100080u,
    FuncInfo, ARRAY_COUNT(FuncInfo),
    PropPointers, ARRAY_COUNT(PropPointers),
    nullptr,
    &amp;StaticCppClassTypeInfo,
    nullptr, 0,
    METADATA_PARAMS(Class_MetaDataParams, ARRAY_COUNT(Class_MetaDataParams))
};
UE4CodeGen_Private::ConstructUClass(OuterClass, ClassParams);   //构造UClass对象</code></pre></div><p data-pid="i9tX2jG5">注
意，对于一个函数来说，参数和返回值都可以算是函数内部定义的属性，只不过其有不同的特征和用途。类里包含属性和函数，而函数又包含属性。属性的构造和
Struct里的规则一样，就不赘述了。不同的是，因为Class里可以包含Function，所以构造UClass之前必须先构造出所有的
UFunction。所以整理下，其实上述的那些构造就是结构套结构，加上一些数组整合出来的信息集合而已。</p><p data-pid="-p3xMEyg"><b>思考：为什么生成的代码里大量用了函数指针来返回对象？</b><br>如
UClass* (*ClassNoRegisterFunc)()或UFunction* 
(*CreateFuncPtr)()都用函数指针来获取定义的UClass*对象和前提依赖的UFunction*对象。为什么不直接用个
UClass*或UFunction*指针呢？<br>答案很简单，因为构造顺序的不确定。<br>在一个类型系统中，类型的依赖管理是项很麻烦但又非常
重要的事，你必须保证当前类型的所有前置类型都已经定义完毕，才能开始本类型的构造。针对此问题，当然你可以小心翼翼的理清定义顺序，确保所有的顺序都是
由底向上的。可是理想很美好，现实很骨感，这一步骤很难实现，是人都会犯错，更何况面对UE4当前的1572个UClass、1039个UStruct、
588个Enum……你真的相信有人能管理好这些？所以在类型系统里想人工整理好类型的依赖定义顺序基本不现实，你几乎很难在构造本类型的时候，恰好的取
得前置类型的对象。<br>那怎么办？也简单，就如同C++里处理static单件对象的依赖顺序一样，既然处理不了，那就不处理！采用懒惰求值的思想，
在需要前置类型的时候，先判断有没有构造出来，如果有就立即返回，如果没有就构造后再返回——一个简易版的单件模式。因为这个套路是如此的普遍，所以这一
些判断加上构造的逻辑封装一下就成了一个个函数，为了获得那些对象，就变成了先获得那些函数指针了。生成的代码里都是大概这种套路：</p><div class="highlight"><pre><code class="language-text">UClass* Z_Construct_UClass_UMyClass()   //用以获取UMyClass所对应的UClass的函数
{
    static UClass* OuterClass = nullptr;    //一个函数局部静态指针
    if (!OuterClass)    //反正都是单线程执行，所以不需要线程安全的保护
    {
        //...一些构造代码
        UE4CodeGen_Private::ConstructUClass(OuterClass, ClassParams);
    }
    return OuterClass;
}</code></pre></div><p data-pid="I22yFE2s">利用此法，就在代码中形成了一个可自动上溯的前置对象获取链条。任何时候，想得到某一个类的UClass*对象，我们不需要去操心是否已经构造完成，也不需要担心它的依赖项是否已经全部构造了，因为代码的机制保证了前置项的按需构造。</p><h2>UPackage的Params和生成：</h2><p data-pid="92WP50LJ">对于Hello模块而言，按照UE4的Module规则，我们需要定义一个Hello UPackage来存放该模块里定义的类型。<br>之前的4.15的代码形式为：</p><div class="highlight"><pre><code class="language-text">UPackage* Z_Construct_UPackage__Script_Hello()
{
    static UPackage* ReturnPackage = NULL;
    if (!ReturnPackage)
    {
        ReturnPackage = CastChecked&lt;UPackage&gt;(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Hello")), false, false));
        ReturnPackage-&gt;SetPackageFlags(PKG_CompiledIn | 0x00000000);
        FGuid Guid;
        Guid.A = 0x79A097CD;
        Guid.B = 0xB58D8B48;
        Guid.C = 0x00000000;
        Guid.D = 0x00000000;
        ReturnPackage-&gt;SetGuid(Guid);
    }
    return ReturnPackage;
}</code></pre></div><p data-pid="6YvurSpS">在4.17之后改为：</p><div class="highlight"><pre><code class="language-text">//UObjectGlobals.h
namespace UE4CodeGen_Private
{
    //包参数
    struct FPackageParams
    {
        const char*                        NameUTF8;    //名字
        uint32                             PackageFlags; // EPackageFlags包的特征
        uint32                             BodyCRC; //内容的CRC,CRC的部分后续介绍
        uint32                             DeclarationsCRC; //声明部分的CRC
        UObject*                  (*const *SingletonFuncArray)();   //依赖的对象列表
        int32                              NumSingletons;
#if WITH_METADATA
        const FMetaDataPairParam*          MetaDataArray;//元数据数组
        int32                              NumMetaData;
#endif
    };
}
//Hello.init.gen.cpp
UPackage* Z_Construct_UPackage__Script_Hello()
{
    static UPackage* ReturnPackage = nullptr;
    if (!ReturnPackage)
    {
        static const UE4CodeGen_Private::FPackageParams PackageParams = {
            "/Script/Hello",    //包名字
            PKG_CompiledIn | 0x00000000,
            0xA1EAFF6A,
            0x41CF0543,
            nullptr, 0,
            METADATA_PARAMS(nullptr, 0)
        };
        UE4CodeGen_Private::ConstructUPackage(ReturnPackage, PackageParams);
    }
    return ReturnPackage;
}</code></pre></div><p data-pid="1mxbJqF_">本块内容比较简单，能坚持看到此处的朋友，对上文的代码应该是
一目了然的。有一点需要知道的是，在Hello模块里的定义的类型数据，都是放在"/Script/Hello"Package里的，所以Hello 
Package是第一个首先构造出来的，因为它被后续的其他类型都依赖着。</p><h2>总结</h2><p data-pid="bl7aFfsV">对比了前后两版本的代码，我们不难看出重构了之后，生成的代码更加的紧致，语法的噪音减少了很多，代码的信息量密度大大提高了。但要注意，本文关注的类型系统阶段是对之前<a href="https://zhuanlan.zhihu.com/p/25098685" class="internal" target="_blank">《InsideUE4》UObject（四）类型系统代码生成</a>的补充，后续依然是接着<a href="https://zhuanlan.zhihu.com/p/26019216" class="internal" target="_blank">《InsideUE4》UObject（五）类型系统收集</a>章节的内容进行开始收集，所以前文的那些static静态收集机制并没有改变。<br>至于UE4CodeGen_Private::ConstructXXX构造的具体实现，我们在后续章节讲到类型系统的结构组织时候再详细讲解，我保证，那天不会太久远。当前阶段你可以简单的理解为都是通过一个个参数构造出一个个类型对象。</p><p data-pid="eDqj83Ht"><b>思考：生成的代码能否做得更加的清晰高效？</b><br>虽然通过此次重构，代码的可读性上升了许多。但平心而论，现在的代码生成依然远远算不上优雅。那么在程序化代码生成的时候一般有哪些手段可以继续提升呢？<br>追
其本质，让代码变得简洁的手段其实都是在提升信息密度。把代码比作文件的话，重构就像压缩软件一样，把代码的信息量压缩到无所压就算是到了极致了。但是当
然这中间当然也要权衡平台移植性（否则直接存一个二进制文件好了）、可读性、编译效率等问题。提升信息密度的手段就只有一个：同样的信息不要书写两遍。因
此带来的方式就是封装！而封装，在代码生成的时候，我们其实可以用到：</p><ol><li data-pid="r8f0CswP">宏，UE4里其实已经用了一些宏来缩减代码，比如ARRAY<i>COUNT、VTABLE</i>OFFSET、IMPLEMENT_CLASS等。但目前的生成代码里依然有大量的长名字，套路化数组拼接，可以用宏来拼接。过度用宏当然也会降低可读性可调试性，但恰当的地方使用可以如同开挂一般优化掉巨量的代码。宏一直是代码拼接的最强大利器。</li><li data-pid="nWi8PeAF">函
数，把相似的逻辑封装成函数可以优化掉大量的操作，只对外提供最简洁的信息输入接口。本文介绍的UE4优化方式就是用了函数来优化。我个人的倾向是宁愿在
核心层多定义一些方便的辅助函数来接收多种输入，而不是在代码生成的时候去一个个拼函数的实体，这样可以大大减小生成代码的体积。函数的实现上巧用不定参
数、数组和循环，可以使你的函数吞吐能力惊人。</li><li data-pid="JryK6azM">模板，更深层次的挖掘编译器提供的信息，压榨
每个字段提供的信息量，利用它，从而自动推导出你所需要的其他信息。比如属性的类型就可以用模板根据字段的c++类型自动推导出来，而不需要手动分析注入
了。UE4的生成代码里模板用的不多，是因为模板也有其很大的缺点：编译慢和难理解。在已经有了UHT分析代码的基础上，再用模板推导一遍，好像意义就不
是那么大了，所以编译消耗还是能省一点是一点吧。至于模板的难理解，一款开源面向大众的引擎，在技术的选型实现上不应该过分的炫技，因为从业人员的技术水
平，初中级的才是占绝大多数。考虑到受众问题和推广，有时候还是应该用一些朴实无华的实现比较能广为接受，同时也能有更大概率争取到重构维护者。否则，你
写的代码，是很厉害，但是只有你自己能改得动改得明白，那叫社区里的人怎么为你贡献维护升级。</li><li data-pid="VPrvQCuQ">扩
展性，同时建议尽量把类型系统的构造逻辑放到Runtime里去，而不是在生成代码里（之前UE4就是在生成代码里直接new出一个个UXXX类型对象。
放到Runtime，对外提供函数API接口，这样的好处是可测试性大大增长，不需要依赖UHT就可以手动构造出想要的类型进行测试。另外对于一些有在运
行时动态Emit创建类型的需求来说，脱离UHT，保持自身功能的完备性也是必需的。</li></ol><p data-pid="87_g1c0b">上述的讨论不限于UE4引擎，只是对于有兴趣实现一个类型系统的人来说，在每个阶段其实都有很多技术选择，但设计就是权衡的艺术，清楚了解你的受众，清晰你的设计目的愿景，对可用的各种手段信手拈来，最后才能组合出优雅的设计。</p><h2>后记</h2><p data-pid="20R1cmLz">在
我们阅读UE4源码的过程中，也要时刻认识到UE4的源码不是完美的。有很多时候，在阅读一段具体代码时，我们可能会去使劲猜测这段代码的用意，琢磨当初
是怎么的设计理念却不可得。其实，现实的情况是这些代码往往只是一时的修复，且不是所有代码的编写者技术都是那么高超。他会出错，另一个他会修复，然后再
犯错修复，周而复始。如同生物的进化一样，一次次重构优化，最终得到的往往并不是最优解，就像人眼睛的盲点和人的智齿都不是最正确的设计，而是会留下进化
的痕迹。但是尽管如此，我们也并不需要感到沮丧，因为接受不完美，接受最后的这个可接受解，适当的懂得妥协和接受缺陷，也许也是一个技术人成熟的标志之一
吧。</p><p data-pid="V_nzLFKC">有一个有趣的现象，对于大工程量的项目（如UE4)来说，越是底层的模块越是缺乏推动力去重
构，越底层的代码其改动的阻力也越大。牵一发而动全身，在一些时候，重构底层模块其实也是最能产生巨量效益的时候，因为其影响会层层放大到最上层上去。但
是代码毕竟是人在写，在一个公司里，一个团队里，形成的开发氛围往往是只要底层代码能工作，就不会有人去改，也不会有人敢改。拿UE4的
CoreUObject模块来说，是UE4的对象系统模块，可以说是最底层核心的模块了，但是根据我这么一大段时间的研读来说，代码里充斥着各种历史痕迹
和小修小补，一些代码结构也是让人无可奈何，but it 
works，所以这块代码从UE3过来，到UE4里，相信有生之年也是会继续追随到UE5的。CoreUObject代码模块目前能工作，虽然有时也会有
点BUG，但是到时小修补就好了，那些代码的优雅追求和结构的设计，改的好了效益不太明显；改过之后出了Bug是不是都算你的？所以正是因为这种效益和责
任的担负，导致往往最需要重视的模块，最得不到升级改造。但历史的规律也表明了，代码的小缺陷积累多了，开发者的怨气积攒足够了，再适逢一个不动底层不能
开工的功能需求的刺激，到时候才能下得了决心大改，或者干脆另起炉灶重新设计了。说这些，是希望同读UE4源码的朋友，在遇到代码里莫名其妙的设计，抓耳
挠腮苦思冥想的时候，可以放宽心态，稍安勿躁，休息一下，我们继续前行。</p><p data-pid="aQZuDraR">上篇：</p><div class="RichText-LinkCardContainer"><a target="_blank" href="https://zhuanlan.zhihu.com/p/26019216" data-draft-node="block" data-draft-type="link-card" data-text="大钊：《InsideUE4》UObject（五）类型系统信息收集" class="LinkCard new css-1vqsdx1" data-image="https://pic2.zhimg.com/v2-c97670efb986368009cfd86804d32245_180x120.jpg" data-image-width="1362" data-image-height="1080"><span class="LinkCard-contents"><span class="LinkCard-title loading" data-text="true"></span><span class="LinkCard-desc loading"></span></span><span class="LinkCard-image LinkCard-image--default"></span></a></div><p data-pid="G8Fs9kKC">下篇：</p><div class="RichText-LinkCardContainer"><a target="_blank" href="https://zhuanlan.zhihu.com/p/57005310" data-draft-node="block" data-draft-type="link-card" data-text="大钊：《InsideUE4》UObject（七）类型系统注册-第一个UClass" class="LinkCard new css-1vqsdx1" data-image="https://pic4.zhimg.com/v2-5d94dda12e0a9c4b361409742bd61a07_180x120.jpg" data-image-width="1400" data-image-height="788"><span class="LinkCard-contents"><span class="LinkCard-title loading" data-text="true"></span><span class="LinkCard-desc loading"></span></span><span class="LinkCard-image LinkCard-image--default"></span></a></div><p data-pid="y0NGq5OJ"><i>UE4.18.3</i></p><p data-pid="EfoRjWqb">知乎专栏：<a href="https://zhuanlan.zhihu.com/insideue4" class="internal" target="_blank">InsideUE4</a><br>UE4深入学习QQ群：<b>456247757</b>(非新手入门群，请先学习完官方文档和视频教程，回答正确验证问题才能进入)<br><b>个人原创，未经授权，谢绝转载！</b></p></div></div></div></div><div role="button" tabindex="0" class="ContentItem-time">编辑于 2019-02-18 13:05</div><div class="Reward"><div><button class="Reward-rewardBtn">送礼物</button></div><div class="css-1l47vs"><div class="css-1b2tw1j"><div class="Reward-User-avatar css-1bm0oju"><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l_002.jpg" alt="送礼物用户" class="css-ckdoo7"></div></div><div class="css-1gcpdyv">1 人已送礼物<svg width="14px" height="14px" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRight16 css-eg4v4b" fill="currentColor"><path fill-rule="evenodd" d="M6.252 2.328a.75.75 0 0 1 1.04.213l3.334 5.05a.75.75 0 0 1 0 .826L7.292 13.46a.75.75 0 0 1-1.251-.828L9.1 8.004 6.04 3.367a.75.75 0 0 1 .212-1.039Z" clip-rule="evenodd"></path></svg></div></div></div><div class="PostIndex-Contributions"><h3 class="BlockTitle">内容所属专栏</h3><ul class="css-zein01"><div><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="https://www.zhihu.com/column/insideue4"><div class="css-1gomreu"><img class="Avatar css-1u7r5c9" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c11ce6a243a272cdab4264de925654cd_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c11ce6a243a272cdab4264de925654cd_l.jpg 2x" alt="InsideUE5"></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="https://www.zhihu.com/column/insideue4"><div class="css-1gomreu">InsideUE5</div></a></span></h2><div class="ContentItem-meta">深入UE5剖析源码，浅出游戏引擎架构理念</div></div><div class="ContentItem-extra"><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG">订阅专栏</button></div></div></div></div></ul></div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19553361&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19553361" target="_blank"><div class="css-1gomreu">游戏开发</div></a></span></div><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19556258&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19556258" target="_blank"><div class="css-1gomreu">游戏引擎</div></a></span></div><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19824201&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19824201" target="_blank"><div class="css-1gomreu">虚幻引擎</div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-fixed is-bottom" style="width: 1280px; bottom: 0px; left: 286.333px;"><div class="ContentItem-actions" data-za-detail-view-path-module="BottomBar" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;id&quot;:&quot;34059049&quot;,&quot;token&quot;:&quot;34059049&quot;}}}"><span><button aria-label="赞同 143 " aria-live="polite" type="button" class="Button VoteButton VoteButton--up FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor"><path fill-rule="evenodd" d="M13.792 3.681c-.781-1.406-2.803-1.406-3.584 0l-7.79 14.023c-.76 1.367.228 3.046 1.791 3.046h15.582c1.563 0 2.55-1.68 1.791-3.046l-7.79-14.023Z" clip-rule="evenodd"></path></svg></span>赞同 143</button><button aria-label="反对" aria-live="polite" type="button" class="Button VoteButton VoteButton--down FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleDown" fill="currentColor"><path fill-rule="evenodd" d="M13.792 20.319c-.781 1.406-2.803 1.406-3.584 0L2.418 6.296c-.76-1.367.228-3.046 1.791-3.046h15.582c1.563 0 2.55 1.68 1.791 3.046l-7.79 14.023Z" clip-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button BottomActions-CommentBtn FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Comment Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>14 条评论</button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover2-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Share Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M19.47 1.914a.8.8 0 0 1 1.204.778l-1.872 16.386a.9.9 0 0 1-1.204.743l-4.615-1.692a.7.7 0 0 0-.831.28l-1.927 3.02c-.43.674-1.474.369-1.474-.43v-3.865a.8.8 0 0 1 .179-.504l5.808-7.148a.595.595 0 0 0-.897-.781l-5.93 6.354a1.1 1.1 0 0 1-1.258.252L2.57 13.46a.8.8 0 0 1-.08-1.415l16.98-10.13Z"></path></svg></span>分享</button></div></div><button aria-live="polite" type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Heart Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Star Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Deliver Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><g fill-rule="evenodd" clip-rule="evenodd"><path d="M7.821 12a.75.75 0 0 1 .75-.75h6.857a.75.75 0 0 1 0 1.5H8.571a.75.75 0 0 1-.75-.75ZM8.965 8a.75.75 0 0 1 .75-.75h4.571a.75.75 0 0 1 0 1.5H9.715a.75.75 0 0 1-.75-.75Z"></path><path d="M7.527 3.15a2.35 2.35 0 0 0-2.309 1.91L3.165 15.84a.85.85 0 0 0-.015.16v2.5a2.35 2.35 0 0 0 2.35 2.35h13a2.35 2.35 0 0 0 2.35-2.35V16a.848.848 0 0 0-.015-.16L18.78 5.06a2.35 2.35 0 0 0-2.308-1.91H7.527Zm0 1.7a.65.65 0 0 0-.639.528l-1.88 9.872h13.984l-1.88-9.872a.65.65 0 0 0-.64-.528H7.528Z"></path></g></svg></span>申请转载</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="Popover3-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--iconOnly fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY hIwDV_tcL6XN1HprrnAq"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Dots Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></span></button></div></div></div></div></div><div class="Sticky--holder" style="position: static; inset: auto auto 0px 0px; display: block; float: none; margin: 0px 0px 10px; height: 53.3333px;"></div></div></article><div class="Post-Sub Post-NormalSub"><div style="overflow: unset;" data-za-detail-view-path-module="CommentList" data-za-extra-module="{}"><div class="Comments-container css-plbgu"><div class="css-79elbk"><div><div class="css-1fo89v5"><img class="Avatar css-m4psdq" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x"><div class="css-14zbeoe"><div class="css-i6bazn"><div class="css-0"><div class="InputLike css-1rl4wxv Editable"><div style="min-height: 38px;" class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-4hr3r" style="white-space: pre-wrap;">理性发言，友善互动</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-4hr3r" class="notranslate public-DraftEditor-content" contenteditable="true" spellcheck="true" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;" tabindex="0" role="textbox"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="4hr3r" data-offset-key="bt9bh-0-0"><div data-offset-key="bt9bh-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="bt9bh-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><div></div><input multiple="" type="file" style="display: none;" accept="image/webp,image/jpg,image/jpeg,image/png,image/gif"></div></div></div></div></div></div><div class="css-u76jt1"><div class="css-1onritu"><div class="css-r4op92"><div class="css-1k10w8f">14 条评论</div></div><div class="css-59erns"></div><div class="css-97fdvh"><div class="css-m0zh86">默认</div><div class="css-1fjr6cy">最新</div></div></div><div class="css-840pn3"><div class="css-18ld3w0"><div data-id="4713102021"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/8811ead8c42538b26bf387717317c61b" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-591f82cca9da8d0932ab0e987048de1d_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-591f82cca9da8d0932ab0e987048de1d_l.png 2x" alt="DarkFlameMaster" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/8811ead8c42538b26bf387717317c61b" target="_blank" class="css-10u695f">DarkFlameMaster</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-57fe7feb4813331d5eca02ef731e12c9.png" alt="知乎知识会员" class="css-1pj8qrb"></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">通篇看完，对于在前两篇中留下的疑惑，和自己阅读分析源码时的不解，一下就消去了许多。谢谢博主的这篇文章。</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2021-09-21</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>1</button></div></div></div></div></div><div data-id="408609752"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e42a09998028d62675d2e441e9227757" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-1537bb205bb96ae299ba9c41071874c5_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-1537bb205bb96ae299ba9c41071874c5_l.png 2x" alt="瓶子" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e42a09998028d62675d2e441e9227757" target="_blank" class="css-10u695f">瓶子</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>好东西</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-02-27</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>1</button></div></div></div></div></div><div data-id="408610016"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/05ace399eb66706eb20d21d3349ef6ee" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/0fea8664a7e27a3e0ec90cb98eb59888_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/0fea8664a7e27a3e0ec90cb98eb59888_l.png 2x" alt="白梦" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/05ace399eb66706eb20d21d3349ef6ee" target="_blank" class="css-10u695f">白梦</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">终于更新了</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-02-27</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>2</button></div></div></div></div></div><div data-id="999004457"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/b72bc7444acbafc7c7594ac7b49cfd0d" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2dc52b68fd8c24590a8d5dcc8872bd4f_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2dc52b68fd8c24590a8d5dcc8872bd4f_l.jpg 2x" alt="WilliamsG" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/b72bc7444acbafc7c7594ac7b49cfd0d" target="_blank" class="css-10u695f">WilliamsG</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>你好，写的很好，我想请教一下关于C++ POD的问题。</p><p><br></p><p>我看POD类型要求是Standard Layout Type,  <a href="http://link.zhihu.com/?target=https%3A//en.cppreference.com/w/cpp/named_req/PODType" class=" external css-2ietpx" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">en.cppreference.com/w/c</span><span class="invisible">pp/named_req/PODType</span><span class="ellipsis"></span></a></p><p><br></p><p>而Standard Layout Type里要求在类层级不能同时在子类和父类定义非静态数据成员，为什么文中举的POD例子加上了Constructor就是POD类型了？</p><p><a href="http://link.zhihu.com/?target=https%3A//en.cppreference.com/w/cpp/named_req/StandardLayoutType" class=" external css-2ietpx" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">en.cppreference.com/w/c</span><span class="invisible">pp/named_req/StandardLayoutType</span><span class="ellipsis"></span></a></p><p><br></p><p>Has all non-static data members and bit-fields declared in the same class (either all in the derived or all in some base)<br>struct B { int i; };         // standard-layout class<br>struct C : B { };            // standard-layout class<br>struct D : C { };            // standard-layout class<br>struct E : D { char : 4; };  // not a standard-layout class</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2020-07-17</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div><div data-id="10220537451"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/b72bc7444acbafc7c7594ac7b49cfd0d" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2dc52b68fd8c24590a8d5dcc8872bd4f_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2dc52b68fd8c24590a8d5dcc8872bd4f_l.jpg 2x" alt="WilliamsG" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/b72bc7444acbafc7c7594ac7b49cfd0d" target="_blank" class="css-10u695f">WilliamsG</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div><svg width="12" height="12" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRightAlt16 css-gx7lzm" fill="currentColor"><path d="M10.727 7.48a.63.63 0 0 1 0 1.039l-4.299 2.88c-.399.268-.926-.028-.926-.519V5.12c0-.491.527-.787.926-.52l4.299 2.881Z"></path></svg><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/f3461684300848f95e8c6fe88c752dc9" target="_blank" class="css-10u695f">hfybird</a></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>多谢</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2022-07-19</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="10215984393"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/f3461684300848f95e8c6fe88c752dc9" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg 2x" alt="hfybird" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/f3461684300848f95e8c6fe88c752dc9" target="_blank" class="css-10u695f">hfybird</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4812630bc27d642f7cafcd6cdeca3d7a.png" class="css-1pj8qrb"></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>测试了一下，不是POD。</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2022-07-15</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div></div><div data-id="414939018"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/87a18ad71a0976b0720fc0d017065251" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/0b9535451eb75736a512604e917ae787_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/0b9535451eb75736a512604e917ae787_l.jpg 2x" alt="一刀9999" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/87a18ad71a0976b0720fc0d017065251" target="_blank" class="css-10u695f">一刀9999</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>哈哈，等的我头发都白了</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-03-12</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="410339411"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/440bdab5e34b501ecbf2b308c1d55ef2" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-ee231016ea29df67fca89d6f55ccbbeb_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-ee231016ea29df67fca89d6f55ccbbeb_l.png 2x" alt="井九" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/440bdab5e34b501ecbf2b308c1d55ef2" target="_blank" class="css-10u695f">井九</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>喜大普奔</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-03-02</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="409345299"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2c0b93e67ab0f701dfe59c17d02ccdaf" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-33d94ec24f9fd819b277d231444f8067_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-33d94ec24f9fd819b277d231444f8067_l.png 2x" alt="图灵的烟头" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2c0b93e67ab0f701dfe59c17d02ccdaf" target="_blank" class="css-10u695f">图灵的烟头</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>有生之年~</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-02-28</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="408950475"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/c379ed1787150ed1a16124d279d1aeed" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4186c4b216b8b4ce5c53b814f66ab233_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4186c4b216b8b4ce5c53b814f66ab233_l.jpg 2x" alt="Zhao Zhang" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/c379ed1787150ed1a16124d279d1aeed" target="_blank" class="css-10u695f">Zhao Zhang</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">不光是构造的问题，有继承就不“如此的POD”了啊！</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-02-28</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="408639233"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/4c1eee2b05aeb1c3a1bb47c0f7fc0c4e" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg 2x" alt="SPACETIME" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/4c1eee2b05aeb1c3a1bb47c0f7fc0c4e" target="_blank" class="css-10u695f">SPACETIME</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">哇  更新了</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-02-27</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="408624804"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2ada9a6803e5a37c098919715d6b3d24" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/c76c721c70cfc47d550c446ae88884f0_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/c76c721c70cfc47d550c446ae88884f0_l.jpg 2x" alt="一坨铁" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2ada9a6803e5a37c098919715d6b3d24" target="_blank" class="css-10u695f">一坨铁</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>终于更新了</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2018-02-27</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div></div></div></div><div class="css-wu78cf"><div class="css-vurnku">点击查看全部评论</div><svg width="24" height="24" viewBox="0 0 24 24" class="ZDI ZDI--ArrowRightSmall24" fill="currentColor"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></div></div><div class="css-l8iyjs"></div><div class="css-kt4t4n" style="position: relative; box-shadow: 0px 0px;"><div><div class="css-59erns"><img class="Avatar css-m4psdq" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x"><div class="css-14zbeoe"><div class="css-i6bazn"><div class="css-1ryozpy"><div class="InputLike css-1rl4wxv Editable"><div style="min-height: 38px;" class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-6dk58" style="white-space: pre-wrap;">理性发言，友善互动</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-6dk58" class="notranslate public-DraftEditor-content" contenteditable="true" role="textbox" spellcheck="true" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;" tabindex="0"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="6dk58" data-offset-key="4jikt-0-0"><div data-offset-key="4jikt-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="4jikt-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><div></div><input multiple="" type="file" style="display: none;" accept="image/webp,image/jpg,image/jpeg,image/png,image/gif"></div></div></div></div></div></div></div><div></div></div></div></div><div role="complementary" aria-label="推荐阅读" class="Recommendations-Main" style="width: 1263px;"><h3 class="BlockTitle Recommendations-BlockTitle">推荐阅读</h3><ul class="Recommendations-List"><button class="PagingButton PagingButton-Previous" disabled="disabled" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowLeft"><path fill-rule="evenodd" d="M14.609 6.322c.349.335.36.889.026 1.237l-4.253 4.438 4.254 4.444a.875.875 0 1 1-1.264 1.21l-4.834-5.05a.875.875 0 0 1 0-1.21l4.834-5.043a.875.875 0 0 1 1.237-.026Z" clip-rule="evenodd"></path></svg></button><a href="https://zhuanlan.zhihu.com/p/163455527" class="PostItem"><div><h1 class="PostItem-Title">自回归语言模型 VS 自编码语言模型</h1><p class="PostItem-Summary">1. XLNet和Bert 首先讲讲我对XLNet和Bert比，有什么异同？有什么模型方面的改进？的理解 1.1 自回归语言模型 第一次听到自回归语言模型（Autoregressive LM）这个词。我们知道一般的语言模…</p><div class="PostItem-Footer"><span>石疯</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/383945098" class="PostItem"><div><h1 class="PostItem-Title">SuperGLUE：一个用于通用语言理解系统的更强基准</h1><p class="PostItem-Summary">原
文：SuperGLUE: A Stickier Benchmark for General-Purpose Language 
Understanding Systems 发表时间：2020.2.13 纽约大学 一、简介二、相关工作三、SuperGLUE概述---- 
3.1 设计过程----…</p><div class="PostItem-Footer"><span>aniu</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/463648199" class="PostItem"><div><h1 class="PostItem-Title">folly::ProducerConsumerQueue学习笔记</h1><p class="PostItem-Summary">简介无锁编程在追求极致性能的场景非常重要，而单生产者、单消费者的无锁队列实现简单 且性能最好，用来入门非常合适。folly代码质量有保证且注释详细，是用来学习的好资料。 当然，我这篇…</p><div class="PostItem-Footer"><span>王林汉</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/682551974" class="PostItem"><div><h1 class="PostItem-Title">人类偏好优化算法哪家强？跟着高手一文学懂DPO、IPO和KTO</h1><p class="PostItem-Summary">选自 http://huggingface.co/blog，作者：Kashif Rasul 等，机器之心编译，编辑：赵阳。尽管收集人类对模型生成内容的相对质量的标签，并通过强化学习从人类反馈（RLHF）来微调无监督大语言…</p><div class="PostItem-Footer"><span>机器之心</span><span class="PostItem-FooterTitle">发表于机器之心</span></div></div></a><button class="PagingButton PagingButton-Next" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowRight"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></button></ul></div></div></div></main><div role="complementary"><div class="CornerButtons"><div class="CornerAnimayedFlex CornerAnimayedFlex--hidden"><button data-tooltip="回到顶部" data-tooltip-position="left" data-tooltip-will-hide-on-click="true" aria-label="回到顶部" type="button" class="Button CornerButton Button--plain css-4lspwd"><svg width="24" height="24" viewBox="0 0 24 24" aria-hidden="true" class="Zi Zi--BackToTop" fill="currentColor"><path fill-rule="evenodd" d="M13.204 3.107a1.75 1.75 0 0 0-2.408 0L3.806 9.73c-1.148 1.088-.378 3.02 1.204 3.02h2.24V20c0 .966.784 1.75 1.75 1.75h6A1.75 1.75 0 0 0 16.75 20v-7.25h2.24c1.582 0 2.353-1.932 1.204-3.02l-6.99-6.623Z" clip-rule="evenodd"></path></svg></button></div></div></div></div></div><script id="js-clientConfig" type="text/json">{"fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","lens":"https:\u002F\u002Flens.zhihu.com","zhida":"https:\u002F\u002Fzhida.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fapi\u002F","walletpay":"https:\u002F\u002Fwalletpay.zhihu.com","captcha":"https:\u002F\u002Fcaptcha.zhihu.com","vzuu":"https:\u002F\u002Fv.vzuu.com","openapi":"https:\u002F\u002Fopenapi.zhihu.com","svip":"https:\u002F\u002Fsvip.zhihu.com","event":"https:\u002F\u002Fevent.zhihu.com"},"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","videoHost":"video.zhihu.com","zhuanlanHost":"zhuanlan.zhihu.com","allowSignUp":true,"refreshValidityPeriod":"30","release":"2208-77d63458","currentEntry":"column","isMobileEntry":false,"apollo":{"env":"prod","globalSilence":"","ncgModeSign":"3f8e56febda4fb3bbea72e379d76de1e","logMobileUnAuth":"1","topstory_rec_adp":"1","topstory_hot_adp":"1","editor_adapt_native":"0","editor_auto_rotate":"0","enable_request_filter":"1","balanceModalSign":"ChYHAcB5ihJECkAFnhDAYmdhsTWVJoNc","reportBackendPublishError":"1","dynamic_font_schema":"1","enable_vzuu_login":"office","za_zse_ck_refer":"1","gamekeeper_office":"blue","gamekeeper_production":"blue","enable_utm_id_0":"0","test_canary":"member|0-100,1-0","use_new_player":"member|0-100,1-0","player_vendor":"member|0-100,1-0,2-0","use_hevc":"member|0-0,1-100","upload_use_signature":"member|0-0,1-100","use_backdrop_blur":"member|0-0,1-100","article_title_imagex":"member|0-0,1-100","play_station":"member|0-0,1-100","use_cached_supported_countries":"device|1-100,0-0","contentItem_cover_imagex":"member|0-0,1-100","use_qrcode_login_v2":"device|1-100,0-0"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{},"cities":{"cityData":[]}},"loading":{"global":{"count":0},"local":{"env\u002FgetIpinfo\u002F":false,"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false,"article\u002FloadPostSearchEntity\u002F":false}},"entities":{"users":{"ffde95bc6a24b298d237f46e35a3eb71":{"uid":1614187562792312800,"userType":"people","id":"ffde95bc6a24b298d237f46e35a3eb71"},"fjz13":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","kvipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae"},"targetUrl":"https:\u002F\u002Fwww.zhihu.com\u002Fkvip\u002Fpurchase"},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_l.png?source=172ae18b","description":"被 10000 个人关注","medalAvatarFrame":""}}},"questions":{},"answers":{},"articles":{"34059049":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fcontent_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=BiBUKF0xBSkqGGNWBWN0CV92AHMZes6RjR0PoA==&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__&zid=__ZONEID__"],"entityWords":[{"name":"UEnum","mention":"UEnum","matchorder":1,"begin":623,"end":628,"entityid":8895184299730351000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=5813180&content_type=Article&match_order=1&q=UEnum&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJYCgVVRW51bRIHVW5rbm93bhjvBCD0BCgBNQAA8EA6B2FydGljbGVA7ee86N7fgrl7SApSJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZfICwgEKJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZRoHYXJ0aWNsZSIHNTgxMzE4MDoFVUVudW1A7ee86N7fgrl7SAFSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJYCgVVRW51bRIHVW5rbm93bhjvBCD0BCgBNQAA8EA6B2FydGljbGVA7ee86N7fgrl7SApSJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZQ==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"FMetaDataPairParam","mention":"FMetaDataPairParam","matchorder":1,"begin":7609,"end":7627,"entityid":5324743011818194000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=5813180&content_type=Article&match_order=1&q=FMetaDataPairParam&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJlChJGTWV0YURhdGFQYWlyUGFyYW0SB1Vua25vd24YuTsgyzsoATUAAPBAOgdhcnRpY2xlQPSIq93rsdLySUgKUiRjNmFlZDI4My1hZTU4LTQ0NjgtYjMzMi0zNDA2YTU0OWQ4M2XyAtwBCiRjNmFlZDI4My1hZTU4LTQ0NjgtYjMzMi0zNDA2YTU0OWQ4M2UaB2FydGljbGUiBzU4MTMxODA6EkZNZXRhRGF0YVBhaXJQYXJhbUD0iKvd67HS8klIA1IWYWlfZW50aXR5X2xsbV9yZWNhbGxlcl0AAPBAYmUKEkZNZXRhRGF0YVBhaXJQYXJhbRIHVW5rbm93bhi5OyDLOygBNQAA8EA6B2FydGljbGVA9Iir3eux0vJJSApSJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZQ==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"FEnumeratorParam","mention":"FEnumeratorParam","matchorder":1,"begin":8325,"end":8341,"entityid":1955803825258198000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=5813180&content_type=Article&match_order=1&q=FEnumeratorParam&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJjChBGRW51bWVyYXRvclBhcmFtEgdVbmtub3duGIVBIJVBKAE1AADwQDoHYXJ0aWNsZUDE6PX296aakhtIClIkYzZhZWQyODMtYWU1OC00NDY4LWIzMzItMzQwNmE1NDlkODNl8gLYAQokYzZhZWQyODMtYWU1OC00NDY4LWIzMzItMzQwNmE1NDlkODNlGgdhcnRpY2xlIgc1ODEzMTgwOhBGRW51bWVyYXRvclBhcmFtQMTo9fb3ppqSG0gEUhZhaV9lbnRpdHlfbGxtX3JlY2FsbGVyXQAA8EBiYwoQRkVudW1lcmF0b3JQYXJhbRIHVW5rbm93bhiFQSCVQSgBNQAA8EA6B2FydGljbGVAxOj19vemmpIbSApSJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZQ==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"FEnumParams","mention":"FEnumParams","matchorder":1,"begin":7044,"end":7055,"entityid":8808662542964311000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=5813180&content_type=Article&match_order=1&q=FEnumParams&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJeCgtGRW51bVBhcmFtcxIHVW5rbm93bhiENyCPNygBNQAA8EA6B2FydGljbGVAv4i13Zn9qZ96SApSJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZfICzgEKJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZRoHYXJ0aWNsZSIHNTgxMzE4MDoLRkVudW1QYXJhbXNAv4i13Zn9qZ96SAVSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJeCgtGRW51bVBhcmFtcxIHVW5rbm93bhiENyCPNygBNQAA8EA6B2FydGljbGVAv4i13Zn9qZ96SApSJGM2YWVkMjgzLWFlNTgtNDQ2OC1iMzMyLTM0MDZhNTQ5ZDgzZQ==","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""}],"id":"34059049","title":"《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private","type":"article","articleType":"normal","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F34059049","imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-769549c0de13c0a0a66d078f776103e0_720w.jpg?source=172ae18b","titleImage":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-769549c0de13c0a0a66d078f776103e0_720w.jpg?source=172ae18b","excerpt":"读的不如写的快引言在之前的 \u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F25098685\" class=\"internal\" target=\"_blank\"\u003E《InsideUE4》UObject（四）类型系统代码生成\u003C\u002Fa\u003E和\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F26019216\" class=\"internal\" target=\"_blank\"\u003E《InsideUE4》UObject（五）类型系统收集\u003C\u002Fa\u003E章节里，我们介绍了UE4是如何根据我们的代码和元标记生成反射代码，并在Main函数调用之前，利用静态变量的初始化来收集类型的元数据信息。…","created":1519709715,"updated":1550466328,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","kvipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae"},"targetUrl":"https:\u002F\u002Fwww.zhihu.com\u002Fkvip\u002Fpurchase"},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_l.png?source=172ae18b","description":"被 10000 个人关注","medalAvatarFrame":""}},"commentPermission":"all","copyrightPermission":"need_review","state":"published","ipInfo":"","imageWidth":1920,"imageHeight":1080,"content":"\u003Cp\u003E\u003C\u002Fp\u003E\u003Cblockquote data-pid=\"6bddEZ6d\"\u003E读的不如写的快\u003C\u002Fblockquote\u003E\u003Ch2\u003E引言\u003C\u002Fh2\u003E\u003Cp data-pid=\"URGKSx-2\"\u003E在之前的\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F25098685\" class=\"internal\" target=\"_blank\"\u003E《InsideUE4》UObject（四）类型系统代码生成\u003C\u002Fa\u003E和\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F26019216\" class=\"internal\" target=\"_blank\"\u003E《InsideUE4》UObject（五）类型系统收集\u003C\u002Fa\u003E章节里，我们介绍了UE4是如何根据我们的代码和元标记生成反射代码，并在Main函数调用之前，利用静态变量的初始化来收集类型的元数据信息。经过了我这么长时间的拖更……也经过了Epic这么长时间的版本更替，把UE从4.15.1进化到了4.18.3，自然的，CoreUObject模块也进行了一些改进。本文就先补上一个关于代码生成的改进：在UE4.17（20170722）的时候进行的UObjectGlobals.h.cpp重构，优化了代码生成的内容和组织形式。\u003C\u002Fp\u003E\u003Ch2\u003E旧版本代码生成\u003C\u002Fh2\u003E\u003Cp data-pid=\"mpbBZct0\"\u003E首先来看一下之前的版本的代码元数据生成：\u003C\u002Fp\u003E\u003Ch2\u003EUEnum的生成：\u003C\u002Fh2\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002F测试代码\n#pragma once\n#include &#34;UObject\u002FNoExportTypes.h&#34;\n#include &#34;MyEnum.generated.h&#34;\nUENUM(BlueprintType)\nenum class EMyEnum : uint8\n{\n    MY_Dance    UMETA(DisplayName = &#34;Dance&#34;),\n    MY_Rain     UMETA(DisplayName = &#34;Rain&#34;),\n    MY_Song     UMETA(DisplayName = &#34;Song&#34;)\n};\n\n\u002F\u002F生成代码节选(Hello.genrated.cpp)：\nReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT(&#34;EMyEnum&#34;), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());\u002F\u002F直接创建该UEnum对象\nTArray&lt;TPair&lt;FName, uint8&gt;&gt; EnumNames;\u002F\u002F设置枚举里的名字和值\nEnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT(&#34;EMyEnum::MY_Dance&#34;)), 0));\nEnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT(&#34;EMyEnum::MY_Rain&#34;)), 1));\nEnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT(&#34;EMyEnum::MY_Song&#34;)), 2));\nEnumNames.Add(TPairInitializer&lt;FName, uint8&gt;(FName(TEXT(&#34;EMyEnum::MY_MAX&#34;)), 3));   \u002F\u002F添加一个默认的MAX字段\nReturnEnum-&gt;SetEnums(EnumNames, UEnum::ECppForm::EnumClass);\nReturnEnum-&gt;CppType = TEXT(&#34;EMyEnum&#34;);\n#if WITH_METADATA   \u002F\u002F设置元数据\nUMetaData* MetaData = ReturnEnum-&gt;GetOutermost()-&gt;GetMetaData();\nMetaData-&gt;SetValue(ReturnEnum, TEXT(&#34;BlueprintType&#34;), TEXT(&#34;true&#34;));\nMetaData-&gt;SetValue(ReturnEnum, TEXT(&#34;ModuleRelativePath&#34;), TEXT(&#34;MyEnum.h&#34;));\nMetaData-&gt;SetValue(ReturnEnum, TEXT(&#34;MY_Dance.DisplayName&#34;), TEXT(&#34;Dance&#34;));\nMetaData-&gt;SetValue(ReturnEnum, TEXT(&#34;MY_Rain.DisplayName&#34;), TEXT(&#34;Rain&#34;));\nMetaData-&gt;SetValue(ReturnEnum, TEXT(&#34;MY_Song.DisplayName&#34;), TEXT(&#34;Song&#34;));\n#endif\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2\u003EUStruct的生成：\u003C\u002Fh2\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002F测试代码：\n#pragma once\n#include &#34;UObject\u002FNoExportTypes.h&#34;\n#include &#34;MyStruct.generated.h&#34;\nUSTRUCT(BlueprintType)\nstruct HELLO_API FMyStruct\n{\n    GENERATED_USTRUCT_BODY()\n    UPROPERTY(BlueprintReadWrite)\n    float Score;\n};\n\u002F\u002F生成代码节选(Hello.genrated.cpp)：\nReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT(&#34;MyStruct&#34;), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps&lt;FMyStruct&gt;, EStructFlags(0x00000201));\u002F\u002F直接创建UScriptStruct对象\nUProperty* NewProp_Score = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT(&#34;Score&#34;), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Score, FMyStruct), 0x0010000000000004);\u002F\u002F直接关联相应的Property信息\nReturnStruct-&gt;StaticLink(); \u002F\u002F链接\n#if WITH_METADATA   \u002F\u002F元数据\nUMetaData* MetaData = ReturnStruct-&gt;GetOutermost()-&gt;GetMetaData();\nMetaData-&gt;SetValue(ReturnStruct, TEXT(&#34;BlueprintType&#34;), TEXT(&#34;true&#34;));\nMetaData-&gt;SetValue(ReturnStruct, TEXT(&#34;ModuleRelativePath&#34;), TEXT(&#34;MyStruct.h&#34;));\nMetaData-&gt;SetValue(NewProp_Score, TEXT(&#34;Category&#34;), TEXT(&#34;MyStruct&#34;));\nMetaData-&gt;SetValue(NewProp_Score, TEXT(&#34;ModuleRelativePath&#34;), TEXT(&#34;MyStruct.h&#34;));\n#endif\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2\u003EUClass的生成：\u003C\u002Fh2\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002F测试代码：\n#pragma once\n#include &#34;UObject\u002FNoExportTypes.h&#34;\n#include &#34;MyClass.generated.h&#34;\nUCLASS(BlueprintType)\nclass HELLO_API UMyClass : public UObject\n{\n    GENERATED_BODY()\npublic:\n    UPROPERTY(BlueprintReadWrite)\n    float Score;\npublic:\n    UFUNCTION(BlueprintCallable, Category = &#34;Hello&#34;)\n    void CallableFunc();    \u002F\u002FC++实现，蓝图调用\n    UFUNCTION(BlueprintNativeEvent, Category = &#34;Hello&#34;)\n    void NativeFunc();  \u002F\u002FC++实现默认版本，蓝图可重载实现\n    UFUNCTION(BlueprintImplementableEvent, Category = &#34;Hello&#34;)\n    void ImplementableFunc();   \u002F\u002FC++不实现，蓝图实现\n};\n\u002F\u002F生成代码节选(Hello.genrated.cpp)：\n\u002F\u002F添加子字段\nOuterClass-&gt;LinkChild(Z_Construct_UFunction_UMyClass_CallableFunc());\nOuterClass-&gt;LinkChild(Z_Construct_UFunction_UMyClass_ImplementableFunc());\nOuterClass-&gt;LinkChild(Z_Construct_UFunction_UMyClass_NativeFunc());\nPRAGMA_DISABLE_DEPRECATION_WARNINGS\nUProperty* NewProp_Score = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT(&#34;Score&#34;), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Score, UMyClass), 0x0010000000000004);\u002F\u002F添加属性\nPRAGMA_ENABLE_DEPRECATION_WARNINGS\n\u002F\u002F添加函数名字映射\nOuterClass-&gt;AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyClass_CallableFunc(), &#34;CallableFunc&#34;); \u002F\u002F 774395847\nOuterClass-&gt;AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyClass_ImplementableFunc(), &#34;ImplementableFunc&#34;); \u002F\u002F 615168156\nOuterClass-&gt;AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMyClass_NativeFunc(), &#34;NativeFunc&#34;); \u002F\u002F 3085959641\nOuterClass-&gt;StaticLink();\n#if WITH_METADATA   \u002F\u002F元数据\nUMetaData* MetaData = OuterClass-&gt;GetOutermost()-&gt;GetMetaData();\nMetaData-&gt;SetValue(OuterClass, TEXT(&#34;BlueprintType&#34;), TEXT(&#34;true&#34;));\nMetaData-&gt;SetValue(OuterClass, TEXT(&#34;IncludePath&#34;), TEXT(&#34;MyClass.h&#34;));\nMetaData-&gt;SetValue(OuterClass, TEXT(&#34;ModuleRelativePath&#34;), TEXT(&#34;MyClass.h&#34;));\nMetaData-&gt;SetValue(NewProp_Score, TEXT(&#34;Category&#34;), TEXT(&#34;MyClass&#34;));\nMetaData-&gt;SetValue(NewProp_Score, TEXT(&#34;ModuleRelativePath&#34;), TEXT(&#34;MyClass.h&#34;));\n#endif\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"MIkqkoTD\"\u003E可以见到，以往的方式在生成的代码里有很多的“套路化”的SetValue、Add段落，都是用来添加字段属性、函数和元数据的信息。虽然这些代码也是UHT程序化生成的，不用人手工操作，看起来也只能说是略有瑕疵，但要是从精益求精的角度上来说，缺点有：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"nitHVay7\"\u003E本着DRY(Don&#39;t Repeat Yourself)原则，这些模式化的代码在每一个反射文件里也都会重复N次，增大了代码的体积。\u003C\u002Fli\u003E\u003Cli data-pid=\"3cvwcoL5\"\u003E代码文件的膨胀，自然会增加编译的时间消耗。\u003C\u002Fli\u003E\u003Cli data-pid=\"UhDkVSta\"\u003E即使是程序生成的代码，有时也难免要阅读Debug，大量的模式代码噪音显然降低了关键代码的可读性和课调试性。\u003C\u002Fli\u003E\u003Cli data-pid=\"8uaz8oeb\"\u003EUHT的编写维护，更多的代码量生成，自然会带来UHT工具代码的编写量增长，增大了编写维护的成本；代码越多，Bug越多；UHT要输出更多的代码，自然效率会降低，从而导致总编译时间的消耗增长。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch2\u003EUE4CodeGen_Private\u003C\u002Fh2\u003E\u003Cp data-pid=\"jbQbQJbv\"\u003E改善方式是显然易得的，同一件事不要做两遍。既然到处都是这些胶水代码，那就把这些代码封装成函数；既然到处都散布着这些元数据信息数据，那就把这些数据封装成结构作为函数的参数。\u003Cbr\u002F\u003E所以，UE在4.17的时候，在UObjectGlobals.h.cpp里增加了一个UE4CodeGen_Private的命名空间，里面添加了一些生成函数：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002FUObjectGlobals.h\nnamespace UE4CodeGen_Private\n{\n    COREUOBJECT_API void ConstructUFunction(UFunction*&amp; OutFunction, const FFunctionParams&amp; Params);\n    COREUOBJECT_API void ConstructUEnum(UEnum*&amp; OutEnum, const FEnumParams&amp; Params);\n    COREUOBJECT_API void ConstructUScriptStruct(UScriptStruct*&amp; OutStruct, const FStructParams&amp; Params);\n    COREUOBJECT_API void ConstructUPackage(UPackage*&amp; OutPackage, const FPackageParams&amp; Params);\n    COREUOBJECT_API void ConstructUClass(UClass*&amp; OutClass, const FClassParams&amp; Params);\n}\n\n\u002F\u002FUObjectGlobals.cpp\nnamespace UE4CodeGen_Private\n{\n    void ConstructUProperty(UObject* Outer, const FPropertyParamsBase* const*&amp; PropertyArray, int32&amp; NumProperties);\n    void AddMetaData(UObject* Object, const FMetaDataPairParam* MetaDataArray, int32 NumMetaData);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"rYTljJ8w\"\u003E函数的名字含义显而易见，都是用来构造一些元数据结构：UEnum、UFunction、UProperty、UScriptStruct、UClass、UPackage和添加一些元数据（这些结构后续会详解）。第一个参数都是指针的引用，所以是用来向外构造一个对象用指针返回的；关键的是在第二个参数：都是一个个XXXParams参数，用来传进去信息的。\u003Cbr\u002F\u003E所以我们继续查看这些参数信息：\u003C\u002Fp\u003E\u003Ch2\u003EUEnum的Params和生成：\u003C\u002Fh2\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002FUObjectGlobals.h\nnamespace UE4CodeGen_Private\n{\n#if WITH_METADATA   \u002F\u002F只有在编辑器模式下，才保留元数据信息\n    struct FMetaDataPairParam   \u002F\u002F元数据对\n    {\n        \u002F\u002F例：MetaData-&gt;SetValue(ReturnEnum, TEXT(&#34;MY_Song.DisplayName&#34;), TEXT(&#34;Song&#34;));\n        const char* NameUTF8;   \u002F\u002F元数据的键值对信息\n        const char* ValueUTF8;\n    };\n#endif\n    struct FEnumeratorParam     \u002F\u002F枚举项\n    {\n        const char*               NameUTF8; \u002F\u002F枚举项的名字\n        int64                     Value;    \u002F\u002F枚举项的值\n#if WITH_METADATA\n        const FMetaDataPairParam* MetaDataArray;    \u002F\u002F一个枚举项依然可以包含多个元数据键值对\n        int32                     NumMetaData;\n#endif\n    };\n\n    struct FEnumParams  \u002F\u002F枚举参数\n    {\n        UObject*                  (*OuterFunc)();   \u002F\u002F获取Outer对象的函数指针回调，用于获取所属于的Package\n        EDynamicType                DynamicType;    \u002F\u002F是否动态，一般是非动态的\n        const char*                 NameUTF8;   \u002F\u002F枚举的名字\n        EObjectFlags                ObjectFlags;    \u002F\u002FUEnum对象的标志\n        FText                     (*DisplayNameFunc)(int32);    \u002F\u002F获取自定义显示名字的回调，一般是nullptr，就是默认规则生成的名字\n        uint8                       CppForm; \n        \u002F*CppForm指定这个枚举是怎么定义的，用来在之后做更细的处理。\n        enum class ECppForm\n        {\n            Regular,    \u002F\u002F常规的enum MyEnum{}这样定义\n            Namespaced, \u002F\u002FMyEnum之外套一层namespace的定义\n            EnumClass   \u002F\u002Fenum class定义的\n        };\n        *\u002F\n        const char*                 CppTypeUTF8;    \u002F\u002FC++里的类型名字，一般是等同于NameUTF8的，但有时定义名字和反射的名字可以不一样\n        const FEnumeratorParam*     EnumeratorParams;   \u002F\u002F枚举项数组\n        int32                       NumEnumerators;\n#if WITH_METADATA\n        const FMetaDataPairParam*   MetaDataArray;  \u002F\u002F元数据数组\n        int32                       NumMetaData;\n#endif\n    };\n}\n\n\u002F\u002FMyEnum.gen.cpp生成代码：\nstatic const UE4CodeGen_Private::FEnumeratorParam Enumerators[] = { \u002F\u002F所有的枚举项\n            { &#34;MyEnum::MY_Dance&#34;, (int64)MyEnum::MY_Dance },\n            { &#34;MyEnum::MY_Rain&#34;, (int64)MyEnum::MY_Rain },\n            { &#34;MyEnum::MY_Song&#34;, (int64)MyEnum::MY_Song },\n        };\n#if WITH_METADATA\nstatic const UE4CodeGen_Private::FMetaDataPairParam Enum_MetaDataParams[] = {   \u002F\u002F枚举的元数据\n    { &#34;BlueprintType&#34;, &#34;true&#34; },\n    { &#34;IsBlueprintBase&#34;, &#34;true&#34; },\n    { &#34;ModuleRelativePath&#34;, &#34;MyEnum.h&#34; },\n    { &#34;MY_Dance.DisplayName&#34;, &#34;Dance&#34; },\n    { &#34;MY_Rain.DisplayName&#34;, &#34;Rain&#34; },\n    { &#34;MY_Song.DisplayName&#34;, &#34;Song&#34; },\n};\n#endif\nstatic const UE4CodeGen_Private::FEnumParams EnumParams = { \u002F\u002F枚举的元数据参数信息\n    (UObject*(*)())Z_Construct_UPackage__Script_Hello,\n    UE4CodeGen_Private::EDynamicType::NotDynamic,\n    &#34;MyEnum&#34;,\n    RF_Public|RF_Transient|RF_MarkAsNative,\n    nullptr,\n    (uint8)UEnum::ECppForm::EnumClass,\n    &#34;MyEnum&#34;,\n    Enumerators, \u002F\u002F枚举项数组\n    ARRAY_COUNT(Enumerators),  \n    METADATA_PARAMS(Enum_MetaDataParams, ARRAY_COUNT(Enum_MetaDataParams))\u002F\u002F枚举元数据数组\n};\nUE4CodeGen_Private::ConstructUEnum(ReturnEnum, EnumParams); \u002F\u002F利用枚举参数构造UEnum*对象到ReturnEnum\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"3D8DJeUN\"\u003E先挑最软的椰子开始捏，枚举的构造比较简单，就只是包含枚举项（字符串-整形)，所以只要依次添加进去就可以。元数据对指的就是那些UMETA等宏标记里面那些的内容，可以在很多地方上使用来添加额外的信息。\u003C\u002Fp\u003E\u003Ch2\u003EUStruct的Params和生成：\u003C\u002Fh2\u003E\u003Cp data-pid=\"QpYqv1sN\"\u003E因为UStruct里只能包含属性，所以我们在这里着重关注属性信息是怎么生成的。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002FUObjectGlobals.h\n\u002F\u002FPS:为了阅读方便，与源码有一定的代码位置微调，但不影响功能正确性\nnamespace UE4CodeGen_Private\n{\n    enum class EPropertyClass   \u002F\u002F属性的类型\n    {\n        Byte,\n        Int8,\n        Int16,\n        Int,\n        Int64,\n        UInt16,\n        UInt32,\n        UInt64,\n        UnsizedInt,\n        UnsizedUInt,\n        Float,\n        Double,\n        Bool,\n        SoftClass,\n        WeakObject,\n        LazyObject,\n        SoftObject,\n        Class,\n        Object,\n        Interface,\n        Name,\n        Str,\n        Array,\n        Map,\n        Set,\n        Struct,\n        Delegate,\n        MulticastDelegate,\n        Text,\n        Enum,\n    };\n\n    \u002F\u002F This is not a base class but is just a common initial sequence of all of the F*PropertyParams types below.\n    \u002F\u002F We don&#39;t want to use actual inheritance because we want to construct aggregated compile-time tables of these things.\n    struct FPropertyParamsBase  \u002F\u002F属性参数基类\n    {\n        EPropertyClass Type;    \u002F\u002F属性的类型\n        const char*    NameUTF8;     \u002F\u002F属性的名字\n        EObjectFlags   ObjectFlags;  \u002F\u002F属性生成的UProperty对象标志，标识这个UProperty对象的特征，RF_XXX那些宏\n        uint64         PropertyFlags;    \u002F\u002F属性生成的UProperty属性标志，标识这个属性的特征，CPF_XXX那些宏\n        int32          ArrayDim;        \u002F\u002F属性有可能是个数组，数组的长度，默认是1\n        const char*    RepNotifyFuncUTF8;   \u002F\u002F属性的网络复制通知函数名字\n    };\n\n    struct FPropertyParamsBaseWithOffset \u002F\u002F : FPropertyParamsBase\n    {\n        EPropertyClass Type;\n        const char*    NameUTF8;\n        EObjectFlags   ObjectFlags;\n        uint64         PropertyFlags;\n        int32          ArrayDim;\n        const char*    RepNotifyFuncUTF8;\n        int32          Offset;  \u002F\u002F在结构或类中的内存偏移，可以理解为成员变量指针（成员变量指针其实本质上就是从对象内存起始位置的偏移）\n    };\n    \u002F\u002F通用的属性参数\n    struct FGenericPropertyParams \u002F\u002F : FPropertyParamsBaseWithOffset\n    {\n        EPropertyClass   Type;\n        const char*      NameUTF8;\n        EObjectFlags     ObjectFlags;\n        uint64           PropertyFlags;\n        int32            ArrayDim;\n        const char*      RepNotifyFuncUTF8;\n        int32            Offset;\n#if WITH_METADATA\n        const FMetaDataPairParam*           MetaDataArray;\n        int32                               NumMetaData;\n#endif\n    };\n\n    \u002F\u002F一些普通常用的数值类型就通过这个类型定义别名了\n    \u002F\u002F These property types don&#39;t add new any construction parameters to their base property\n    typedef FGenericPropertyParams FInt8PropertyParams;\n    typedef FGenericPropertyParams FInt16PropertyParams;\n\n    \u002F\u002F枚举类型属性参数\n    struct FBytePropertyParams \u002F\u002F : FPropertyParamsBaseWithOffset\n    {\n        EPropertyClass   Type;\n        const char*      NameUTF8;\n        EObjectFlags     ObjectFlags;\n        uint64           PropertyFlags;\n        int32            ArrayDim;\n        const char*      RepNotifyFuncUTF8;\n        int32            Offset;\n        UEnum*         (*EnumFunc)();   \u002F\u002F定义的枚举对象回调\n#if WITH_METADATA\n        const FMetaDataPairParam*           MetaDataArray;\n        int32                               NumMetaData;\n#endif\n    };\n    \u002F\u002F...省略一些定义，可自行去UObjectGlobals.h查看\n    \u002F\u002F对象引用类型属性参数\n    struct FObjectPropertyParams \u002F\u002F : FPropertyParamsBaseWithOffset\n    {\n        EPropertyClass   Type;\n        const char*      NameUTF8;\n        EObjectFlags     ObjectFlags;\n        uint64           PropertyFlags;\n        int32            ArrayDim;\n        const char*      RepNotifyFuncUTF8;\n        int32            Offset;\n        UClass*        (*ClassFunc)();  \u002F\u002F用于获取该属性定义类型的函数指针回调\n#if WITH_METADATA\n        const FMetaDataPairParam*           MetaDataArray;\n        int32                               NumMetaData;\n#endif\n    };\n\n    struct FStructParams    \u002F\u002F结构参数\n    {\n        UObject*                          (*OuterFunc)();   \u002F\u002F所属于的Package\n        UScriptStruct*                    (*SuperFunc)();   \u002F\u002F该结构的基类，没有的话为nullptr\n        void*                             (*StructOpsFunc)(); \u002F\u002F really returns UScriptStruct::ICppStructOps*，结构的构造分配的辅助操作类\n        const char*                         NameUTF8;   \u002F\u002F结构名字\n        EObjectFlags                        ObjectFlags;    \u002F\u002F结构UScriptStruct*的对象特征\n        uint32                              StructFlags; \u002F\u002F EStructFlags该结构的本来特征\n        SIZE_T                              SizeOf;     \u002F\u002F结构的大小，就是sizeof(FMyStruct)，用以后续分配内存时候用\n        SIZE_T                              AlignOf;\u002F\u002F结构的内存对齐，就是alignof(FMyStruct)，用以后续分配内存时候用\n        const FPropertyParamsBase* const*   PropertyArray;  \u002F\u002F包含的属性数组\n        int32                               NumProperties;\n    #if WITH_METADATA\n        const FMetaDataPairParam*           MetaDataArray;  \u002F\u002F元数据数组\n        int32                               NumMetaData;\n    #endif\n    };\n}\n\n\u002F\u002FMyStruct.gen.cpp生成代码：\n#if WITH_METADATA\nstatic const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[] = { \u002F\u002F结构的元数据\n    { &#34;BlueprintType&#34;, &#34;true&#34; },\n    { &#34;ModuleRelativePath&#34;, &#34;MyStruct.h&#34; },\n};\n#endif\nauto NewStructOpsLambda = []() -&gt; void* { return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps&lt;FMyStruct&gt;(); };   \u002F\u002F一个获取操作类的回调\n#if WITH_METADATA\n\u002F\u002F属性的元数据\nstatic const UE4CodeGen_Private::FMetaDataPairParam NewProp_Score_MetaData[] = {\n    { &#34;Category&#34;, &#34;MyStruct&#34; },\n    { &#34;ModuleRelativePath&#34;, &#34;MyStruct.h&#34; },\n};\n#endif\nstatic const UE4CodeGen_Private::FFloatPropertyParams NewProp_Score = { UE4CodeGen_Private::EPropertyClass::Float, &#34;Score&#34;, RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000004, 1, nullptr, STRUCT_OFFSET(FMyStruct, Score), METADATA_PARAMS(NewProp_Score_MetaData, ARRAY_COUNT(NewProp_Score_MetaData)) };\u002F\u002FScore属性的信息\n\u002F\u002F属性的数组\nstatic const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {\n    (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_Score,\n};\n\u002F\u002F结构的参数信息\nstatic const UE4CodeGen_Private::FStructParams ReturnStructParams = {\n    (UObject* (*)())Z_Construct_UPackage__Script_Hello,\n    nullptr,\n    &amp;UE4CodeGen_Private::TNewCppStructOpsWrapper&lt;decltype(NewStructOpsLambda)&gt;::NewCppStructOps,\n    &#34;MyStruct&#34;,\n    RF_Public|RF_Transient|RF_MarkAsNative,\n    EStructFlags(0x00000201),\n    sizeof(FMyStruct),\n    alignof(FMyStruct),\n    PropPointers, ARRAY_COUNT(PropPointers),\n    METADATA_PARAMS(Struct_MetaDataParams, ARRAY_COUNT(Struct_MetaDataParams))\n};\nUE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, ReturnStructParams);\u002F\u002F构造UScriptStruct*到ReturnStruct里去\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"8CBIGUHK\"\u003E代码比较简单，上下对照和看看注释就能大概明白。就是收集一个个属性的信息整合成数组，然后合并到结构参数里去，最后传给ConstructUScriptStruct来构造。\u003C\u002Fp\u003E\u003Cp data-pid=\"tmSe_Uql\"\u003E\u003Cb\u003E思考：FPropertyParamsBaseWithOffset以及后续为何不继承于FPropertyParamsBase？\u003C\u002Fb\u003E\u003Cbr\u002F\u003E我们在FPropertyParamsBase和FPropertyParamsBaseWithOffset等后续的注释后面以及属性成员的相似性上来看，很容易就看到这些F*PropertyParams其实是用了继承语义的，那为何不直接继承而是费劲的再写一遍呢？\u003Cbr\u002F\u003E虽然官方在FPropertyParamsBase上已经写了注释，但是有些朋友可能还是依然比较懵懂。其实这里涉及到一个C++的Aggregate类型的\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=http%3A\u002F\u002Fen.cppreference.com\u002Fw\u002Fcpp\u002Flanguage\u002Faggregate_initialization\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003Eaggregate initialization\u003C\u002Fa\u003E规则。具体的C++语法规则请自行去补充学习。简单来说，\u003Cb\u003E一个Aggregate是一个数组或者一个没有用户声明构造函数，没有私有或保护类型的非静态数据成员，没有父类和虚函数的类型。\u003C\u002Fb\u003E Aggregatel类型就可以用形如 \u003Ci\u003ET object = {arg1, arg2, ...}\u003C\u002Fi\u003E 的初始化列表来初始化。我们在上文中见到的：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Estatic const UE4CodeGen_Private::FFloatPropertyParams NewProp_Score = { UE4CodeGen_Private::EPropertyClass::Float, &#34;Score&#34;, RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000004, 1, nullptr, STRUCT_OFFSET(FMyStruct, Score), METADATA_PARAMS(NewProp_Score_MetaData, ARRAY_COUNT(NewProp_Score_MetaData)) };\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"gkmlAL1A\"\u003E后面的={}就是初始化列表。这么写当然是为了简洁的目的，否则一个个参数的字段设置过去，那也太麻烦了。\u003Cbr\u002F\u003E那如果用继承会怎么样呢？我们可以来做个测试：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Estruct Point2\n{\n    float X;\n    float Y;\n};\n\nstruct Point3 :public Point2    \u002F\u002F这不是个Aggregate类型，因为有父类\n{\n    float Z;\n};\n\nstruct Point3_Aggregate \u002F\u002F这是个Aggregate类型\n{\n    float X;\n    float Y;\n    float Z;\n};\nconst static Point3 pos{ 1.f,2.f,3.f }; \u002F\u002F error C2440:&#39;initializing&#39;: cannot convert from &#39;initializer list&#39; to &#39;Point3&#39;\nconst static Point3_Aggregate pos2{ 1.f,2.f,3.f };\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"O46hvIdg\"\u003E因此UE选择不继承，宁愿每个重复写一遍字段声明，就是为了可以简单用{}初始化列表来构造对象。但是我们也观察到，在PropPointers数组里，也依然把一个个元素都转为FPropertyParamsBase*。因为根据C\u002FC++的对象内存模型，继承的时候，基类成员排在派生类成员之前的内存地址上。又因为F*PropertyParams是如此的POD，所以只要保证内存地址和属性成员顺序一致，就可以保证转为另一个结构指针后依然可以正确的使用。\u003C\u002Fp\u003E\u003Cp data-pid=\"GTeLiYiY\"\u003E虽然看起来这么解释的通，但还是感觉很麻烦，本来应该用继承的语义却偏偏为了初始化列表妥协了。对完美主义者来说还是不能忍，那么有没有一种既可以用继承又可以用初始化列表的解决方案呢？\u003Cbr\u002F\u003E其实加上构造函数就可以了。不用Aggregate类型，放宽限制，改用POD类型（\u003Cb\u003EPOD类型就是没有非静态类型的non-POD类型 （或者这些类型的数组）和引用类型的数据成员，也没有用户定义的赋值操作符和析构函数的类型。\u003C\u002Fb\u003E）。如：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Estruct Point2\n{\n    float X;\n    float Y;\n    Point2(float x, float y) :X(x), Y(y) {} \u002F\u002F构造函数\n};\n\nstruct Point3_POD :public Point2\n{\n    float Z;\n    Point3_POD(float x, float y, float z) :Point2(x, y), Z(z) {}\u002F\u002F构造函数\n};\n\nstruct Point3_Aggregate\n{\n    float X;\n    float Y;\n    float Z;\n};\nconst static Point3_POD pos{ 1.f,2.f,3.f };     \u002F\u002Fworks happy ^_^\nconst static Point3_Aggregate pos2{ 1.f,2.f,3.f };  \u002F\u002Fworks happy ^_^\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"QS33o1cl\"\u003E所以只要把F*PropertyParams加上构造函数就可以了。至于为啥UE不这么做？问Epic的人去，摊手~\u003C\u002Fp\u003E\u003Ch2\u003EUFunction和UClass的Params和生成：\u003C\u002Fh2\u003E\u003Cp data-pid=\"kTdpLO99\"\u003E为了测试UClass里的函数输入输出参数，所以增加一个AddHP函数。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002F测试文件：\nUCLASS()\nclass HELLO_API UMyClass :public UObject\n{\n    GENERATED_BODY()\npublic:\n    UPROPERTY(BlueprintReadWrite)\n    float Score;\npublic:\n    UFUNCTION(BlueprintCallable, Category = &#34;Hello&#34;)\n    float AddHP(float HP);\n\n    UFUNCTION(BlueprintCallable, Category = &#34;Hello&#34;)\n    void CallableFunc();    \u002F\u002FC++实现，蓝图调用\n\n    UFUNCTION(BlueprintNativeEvent, Category = &#34;Hello&#34;)\n    void NativeFunc();  \u002F\u002FC++实现默认版本，蓝图可重载实现\n\n    UFUNCTION(BlueprintImplementableEvent, Category = &#34;Hello&#34;)\n    void ImplementableFunc();   \u002F\u002FC++不实现，蓝图实现\n};\n\n\u002F\u002FClass.h\n\u002F\u002F类里的函数链接信息，一个函数名字对应一个UFunction对象\nstruct FClassFunctionLinkInfo \n{\n    UFunction* (*CreateFuncPtr)();  \u002F\u002F获得UFunction对象的函数指针回调\n    const char* FuncNameUTF8;       \u002F\u002F函数的名字\n};\n\u002F\u002F类在Cpp里的类型信息，用一个结构是为了将来也许还会添加别的字段\nstruct FCppClassTypeInfoStatic\n{\n    bool bIsAbstract;   \u002F\u002F是否抽象类\n};\n\n\u002F\u002FUObjectGlobals.h\nnamespace UE4CodeGen_Private\n{\n    \u002F\u002F函数参数\n    struct FFunctionParams\n    {\n        UObject*                          (*OuterFunc)();   \u002F\u002F所属于的外部对象，一般是外部的UClass*对象\n        const char*                         NameUTF8;   \u002F\u002F函数的名字\n        EObjectFlags                        ObjectFlags;    \u002F\u002FUFunction对象的特征\n        UFunction*                        (*SuperFunc)();   \u002F\u002FUFunction的基类，一般为nullptr\n        EFunctionFlags                      FunctionFlags;  \u002F\u002F函数本身的特征\n        SIZE_T                              StructureSize;  \u002F\u002F函数的参数返回值包结构的大小\n        const FPropertyParamsBase* const*   PropertyArray;  \u002F\u002F函数的参数和返回值字段数组\n        int32                               NumProperties;  \u002F\u002F函数的参数和返回值字段数组大小\n        uint16                              RPCId;          \u002F\u002F网络间的RPC Id\n        uint16                              RPCResponseId;  \u002F\u002F网络间的RPC Response Id\n    #if WITH_METADATA\n        const FMetaDataPairParam*           MetaDataArray;  \u002F\u002F元数据数组\n        int32                               NumMetaData;\n    #endif\n    };\n\n    \u002F\u002F实现的接口参数，篇幅所限，接口的内容可以自行分析\n    struct FImplementedInterfaceParams\n    {\n        UClass* (*ClassFunc)();     \u002F\u002F外部所属于的UInterface对象\n        int32     Offset;           \u002F\u002F在UMyClass里的实现的IMyInterface的虚函数表地址偏移\n        bool      bImplementedByK2; \u002F\u002F是否在蓝图中实现\n    };\n\n    \u002F\u002F类参数\n    struct FClassParams\n    {\n        UClass*                                   (*ClassNoRegisterFunc)(); \u002F\u002F获得UClass*对象的函数指针\n        UObject*                           (*const *DependencySingletonFuncArray)();    \u002F\u002F获取依赖对象的函数指针数组，一般是需要前提构造的基类，模块UPackage对象\n        int32                                       NumDependencySingletons;\n        uint32                                      ClassFlags; \u002F\u002F EClassFlags，类特征\n        const FClassFunctionLinkInfo*               FunctionLinkArray;  \u002F\u002F链接的函数数组\n        int32                                       NumFunctions;\n        const FPropertyParamsBase* const*           PropertyArray;  \u002F\u002F类里定义的成员变量数组\n        int32                                       NumProperties;\n        const char*                                 ClassConfigNameUTF8;    \u002F\u002F配置文件名字，有些类可以从配置文件从加载数据\n        const FCppClassTypeInfoStatic*              CppClassInfo;   \u002F\u002FCpp里定义的信息\n        const FImplementedInterfaceParams*          ImplementedInterfaceArray;  \u002F\u002F实现的接口信息数组\n        int32                                       NumImplementedInterfaces;\n    #if WITH_METADATA           \u002F\u002F类的元数据\n        const FMetaDataPairParam*                   MetaDataArray;\n        int32                                       NumMetaData;\n    #endif\n    };\n}\n\n\u002F\u002FMyClass.gen.cpp\n\u002F\u002F构造AddHp函数的UFunction对象\nUFunction* Z_Construct_UFunction_UMyClass_AddHP()\n{\n    struct MyClass_eventAddHP_Parms     \u002F\u002F函数的参数和返回值包\n    {\n        float HP;\n        float ReturnValue;\n    };\n    static UFunction* ReturnFunction = nullptr;\n    if (!ReturnFunction)\n    {\n        \u002F\u002F定义两个属性用来传递信息\n        static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, &#34;ReturnValue&#34;, RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(MyClass_eventAddHP_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };\n\n        static const UE4CodeGen_Private::FFloatPropertyParams NewProp_HP = { UE4CodeGen_Private::EPropertyClass::Float, &#34;HP&#34;, RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(MyClass_eventAddHP_Parms, HP), METADATA_PARAMS(nullptr, 0) };\n\n        static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {\n            (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_ReturnValue,\n            (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_HP,\n        };\n\n#if WITH_METADATA\n        static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {\n            { &#34;Category&#34;, &#34;Hello&#34; },\n            { &#34;ModuleRelativePath&#34;, &#34;MyClass.h&#34; },\n        };\n#endif\n        static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UMyClass, &#34;AddHP&#34;, RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04020401, sizeof(MyClass_eventAddHP_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };\n\n        UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams); \u002F\u002F构造函数\n    }\n    return ReturnFunction;\n}\n\u002F\u002F...构造其他的函数\n\u002F\u002F该类依赖的对象列表，用函数指针来获取。\nstatic UObject* (*const DependentSingletons[])() = {\n                (UObject* (*)())Z_Construct_UClass_UObject,\n                (UObject* (*)())Z_Construct_UPackage__Script_Hello,\n            };\n\u002F\u002F函数链接信息\nstatic const FClassFunctionLinkInfo FuncInfo[] = {\n    { &amp;Z_Construct_UFunction_UMyClass_CallableFunc, &#34;CallableFunc&#34; }, \u002F\u002F 1841300010\n    { &amp;Z_Construct_UFunction_UMyClass_ImplementableFunc, &#34;ImplementableFunc&#34; }, \u002F\u002F 2010696670\n    { &amp;Z_Construct_UFunction_UMyClass_NativeFunc, &#34;NativeFunc&#34; }, \u002F\u002F 2593520329\n};\n#if WITH_METADATA\nstatic const UE4CodeGen_Private::FMetaDataPairParam Class_MetaDataParams[] = {\n    { &#34;IncludePath&#34;, &#34;MyClass.h&#34; },\n    { &#34;ModuleRelativePath&#34;, &#34;MyClass.h&#34; },\n};\n#endif\n#if WITH_METADATA\nstatic const UE4CodeGen_Private::FMetaDataPairParam NewProp_Score_MetaData[] = {\n    { &#34;Category&#34;, &#34;MyClass&#34; },\n    { &#34;ModuleRelativePath&#34;, &#34;MyClass.h&#34; },\n};\n#endif\nstatic const UE4CodeGen_Private::FFloatPropertyParams NewProp_Score = { UE4CodeGen_Private::EPropertyClass::Float, &#34;Score&#34;, RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000004, 1, nullptr, STRUCT_OFFSET(UMyClass, Score), METADATA_PARAMS(NewProp_Score_MetaData, ARRAY_COUNT(NewProp_Score_MetaData)) };\n\nstatic const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {\n    (const UE4CodeGen_Private::FPropertyParamsBase*)&amp;NewProp_Score,\n};\nstatic const FCppClassTypeInfoStatic StaticCppClassTypeInfo = {\n    TCppClassTypeTraits&lt;UMyClass&gt;::IsAbstract,\n};\nstatic const UE4CodeGen_Private::FClassParams ClassParams = {\n    &amp;UMyClass::StaticClass,\n    DependentSingletons, ARRAY_COUNT(DependentSingletons),\n    0x00100080u,\n    FuncInfo, ARRAY_COUNT(FuncInfo),\n    PropPointers, ARRAY_COUNT(PropPointers),\n    nullptr,\n    &amp;StaticCppClassTypeInfo,\n    nullptr, 0,\n    METADATA_PARAMS(Class_MetaDataParams, ARRAY_COUNT(Class_MetaDataParams))\n};\nUE4CodeGen_Private::ConstructUClass(OuterClass, ClassParams);   \u002F\u002F构造UClass对象\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"i9tX2jG5\"\u003E注意，对于一个函数来说，参数和返回值都可以算是函数内部定义的属性，只不过其有不同的特征和用途。类里包含属性和函数，而函数又包含属性。属性的构造和Struct里的规则一样，就不赘述了。不同的是，因为Class里可以包含Function，所以构造UClass之前必须先构造出所有的UFunction。所以整理下，其实上述的那些构造就是结构套结构，加上一些数组整合出来的信息集合而已。\u003C\u002Fp\u003E\u003Cp data-pid=\"-p3xMEyg\"\u003E\u003Cb\u003E思考：为什么生成的代码里大量用了函数指针来返回对象？\u003C\u002Fb\u003E\u003Cbr\u002F\u003E如UClass* (*ClassNoRegisterFunc)()或UFunction* (*CreateFuncPtr)()都用函数指针来获取定义的UClass*对象和前提依赖的UFunction*对象。为什么不直接用个UClass*或UFunction*指针呢？\u003Cbr\u002F\u003E答案很简单，因为构造顺序的不确定。\u003Cbr\u002F\u003E在一个类型系统中，类型的依赖管理是项很麻烦但又非常重要的事，你必须保证当前类型的所有前置类型都已经定义完毕，才能开始本类型的构造。针对此问题，当然你可以小心翼翼的理清定义顺序，确保所有的顺序都是由底向上的。可是理想很美好，现实很骨感，这一步骤很难实现，是人都会犯错，更何况面对UE4当前的1572个UClass、1039个UStruct、588个Enum……你真的相信有人能管理好这些？所以在类型系统里想人工整理好类型的依赖定义顺序基本不现实，你几乎很难在构造本类型的时候，恰好的取得前置类型的对象。\u003Cbr\u002F\u003E那怎么办？也简单，就如同C++里处理static单件对象的依赖顺序一样，既然处理不了，那就不处理！采用懒惰求值的思想，在需要前置类型的时候，先判断有没有构造出来，如果有就立即返回，如果没有就构造后再返回——一个简易版的单件模式。因为这个套路是如此的普遍，所以这一些判断加上构造的逻辑封装一下就成了一个个函数，为了获得那些对象，就变成了先获得那些函数指针了。生成的代码里都是大概这种套路：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003EUClass* Z_Construct_UClass_UMyClass()   \u002F\u002F用以获取UMyClass所对应的UClass的函数\n{\n    static UClass* OuterClass = nullptr;    \u002F\u002F一个函数局部静态指针\n    if (!OuterClass)    \u002F\u002F反正都是单线程执行，所以不需要线程安全的保护\n    {\n        \u002F\u002F...一些构造代码\n        UE4CodeGen_Private::ConstructUClass(OuterClass, ClassParams);\n    }\n    return OuterClass;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"I22yFE2s\"\u003E利用此法，就在代码中形成了一个可自动上溯的前置对象获取链条。任何时候，想得到某一个类的UClass*对象，我们不需要去操心是否已经构造完成，也不需要担心它的依赖项是否已经全部构造了，因为代码的机制保证了前置项的按需构造。\u003C\u002Fp\u003E\u003Ch2\u003EUPackage的Params和生成：\u003C\u002Fh2\u003E\u003Cp data-pid=\"92WP50LJ\"\u003E对于Hello模块而言，按照UE4的Module规则，我们需要定义一个Hello UPackage来存放该模块里定义的类型。\u003Cbr\u002F\u003E之前的4.15的代码形式为：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003EUPackage* Z_Construct_UPackage__Script_Hello()\n{\n    static UPackage* ReturnPackage = NULL;\n    if (!ReturnPackage)\n    {\n        ReturnPackage = CastChecked&lt;UPackage&gt;(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT(&#34;\u002FScript\u002FHello&#34;)), false, false));\n        ReturnPackage-&gt;SetPackageFlags(PKG_CompiledIn | 0x00000000);\n        FGuid Guid;\n        Guid.A = 0x79A097CD;\n        Guid.B = 0xB58D8B48;\n        Guid.C = 0x00000000;\n        Guid.D = 0x00000000;\n        ReturnPackage-&gt;SetGuid(Guid);\n    }\n    return ReturnPackage;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"6YvurSpS\"\u003E在4.17之后改为：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E\u002F\u002FUObjectGlobals.h\nnamespace UE4CodeGen_Private\n{\n    \u002F\u002F包参数\n    struct FPackageParams\n    {\n        const char*                        NameUTF8;    \u002F\u002F名字\n        uint32                             PackageFlags; \u002F\u002F EPackageFlags包的特征\n        uint32                             BodyCRC; \u002F\u002F内容的CRC,CRC的部分后续介绍\n        uint32                             DeclarationsCRC; \u002F\u002F声明部分的CRC\n        UObject*                  (*const *SingletonFuncArray)();   \u002F\u002F依赖的对象列表\n        int32                              NumSingletons;\n#if WITH_METADATA\n        const FMetaDataPairParam*          MetaDataArray;\u002F\u002F元数据数组\n        int32                              NumMetaData;\n#endif\n    };\n}\n\u002F\u002FHello.init.gen.cpp\nUPackage* Z_Construct_UPackage__Script_Hello()\n{\n    static UPackage* ReturnPackage = nullptr;\n    if (!ReturnPackage)\n    {\n        static const UE4CodeGen_Private::FPackageParams PackageParams = {\n            &#34;\u002FScript\u002FHello&#34;,    \u002F\u002F包名字\n            PKG_CompiledIn | 0x00000000,\n            0xA1EAFF6A,\n            0x41CF0543,\n            nullptr, 0,\n            METADATA_PARAMS(nullptr, 0)\n        };\n        UE4CodeGen_Private::ConstructUPackage(ReturnPackage, PackageParams);\n    }\n    return ReturnPackage;\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"1mxbJqF_\"\u003E本块内容比较简单，能坚持看到此处的朋友，对上文的代码应该是一目了然的。有一点需要知道的是，在Hello模块里的定义的类型数据，都是放在&#34;\u002FScript\u002FHello&#34;Package里的，所以Hello Package是第一个首先构造出来的，因为它被后续的其他类型都依赖着。\u003C\u002Fp\u003E\u003Ch2\u003E总结\u003C\u002Fh2\u003E\u003Cp data-pid=\"bl7aFfsV\"\u003E对比了前后两版本的代码，我们不难看出重构了之后，生成的代码更加的紧致，语法的噪音减少了很多，代码的信息量密度大大提高了。但要注意，本文关注的类型系统阶段是对之前\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F25098685\" class=\"internal\" target=\"_blank\"\u003E《InsideUE4》UObject（四）类型系统代码生成\u003C\u002Fa\u003E的补充，后续依然是接着\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F26019216\" class=\"internal\" target=\"_blank\"\u003E《InsideUE4》UObject（五）类型系统收集\u003C\u002Fa\u003E章节的内容进行开始收集，所以前文的那些static静态收集机制并没有改变。\u003Cbr\u002F\u003E至于UE4CodeGen_Private::ConstructXXX构造的具体实现，我们在后续章节讲到类型系统的结构组织时候再详细讲解，我保证，那天不会太久远。当前阶段你可以简单的理解为都是通过一个个参数构造出一个个类型对象。\u003C\u002Fp\u003E\u003Cp data-pid=\"eDqj83Ht\"\u003E\u003Cb\u003E思考：生成的代码能否做得更加的清晰高效？\u003C\u002Fb\u003E\u003Cbr\u002F\u003E虽然通过此次重构，代码的可读性上升了许多。但平心而论，现在的代码生成依然远远算不上优雅。那么在程序化代码生成的时候一般有哪些手段可以继续提升呢？\u003Cbr\u002F\u003E追其本质，让代码变得简洁的手段其实都是在提升信息密度。把代码比作文件的话，重构就像压缩软件一样，把代码的信息量压缩到无所压就算是到了极致了。但是当然这中间当然也要权衡平台移植性（否则直接存一个二进制文件好了）、可读性、编译效率等问题。提升信息密度的手段就只有一个：同样的信息不要书写两遍。因此带来的方式就是封装！而封装，在代码生成的时候，我们其实可以用到：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"r8f0CswP\"\u003E宏，UE4里其实已经用了一些宏来缩减代码，比如ARRAY\u003Ci\u003ECOUNT、VTABLE\u003C\u002Fi\u003EOFFSET、IMPLEMENT_CLASS等。但目前的生成代码里依然有大量的长名字，套路化数组拼接，可以用宏来拼接。过度用宏当然也会降低可读性可调试性，但恰当的地方使用可以如同开挂一般优化掉巨量的代码。宏一直是代码拼接的最强大利器。\u003C\u002Fli\u003E\u003Cli data-pid=\"nWi8PeAF\"\u003E函数，把相似的逻辑封装成函数可以优化掉大量的操作，只对外提供最简洁的信息输入接口。本文介绍的UE4优化方式就是用了函数来优化。我个人的倾向是宁愿在核心层多定义一些方便的辅助函数来接收多种输入，而不是在代码生成的时候去一个个拼函数的实体，这样可以大大减小生成代码的体积。函数的实现上巧用不定参数、数组和循环，可以使你的函数吞吐能力惊人。\u003C\u002Fli\u003E\u003Cli data-pid=\"JryK6azM\"\u003E模板，更深层次的挖掘编译器提供的信息，压榨每个字段提供的信息量，利用它，从而自动推导出你所需要的其他信息。比如属性的类型就可以用模板根据字段的c++类型自动推导出来，而不需要手动分析注入了。UE4的生成代码里模板用的不多，是因为模板也有其很大的缺点：编译慢和难理解。在已经有了UHT分析代码的基础上，再用模板推导一遍，好像意义就不是那么大了，所以编译消耗还是能省一点是一点吧。至于模板的难理解，一款开源面向大众的引擎，在技术的选型实现上不应该过分的炫技，因为从业人员的技术水平，初中级的才是占绝大多数。考虑到受众问题和推广，有时候还是应该用一些朴实无华的实现比较能广为接受，同时也能有更大概率争取到重构维护者。否则，你写的代码，是很厉害，但是只有你自己能改得动改得明白，那叫社区里的人怎么为你贡献维护升级。\u003C\u002Fli\u003E\u003Cli data-pid=\"VPrvQCuQ\"\u003E扩展性，同时建议尽量把类型系统的构造逻辑放到Runtime里去，而不是在生成代码里（之前UE4就是在生成代码里直接new出一个个UXXX类型对象。放到Runtime，对外提供函数API接口，这样的好处是可测试性大大增长，不需要依赖UHT就可以手动构造出想要的类型进行测试。另外对于一些有在运行时动态Emit创建类型的需求来说，脱离UHT，保持自身功能的完备性也是必需的。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"87_g1c0b\"\u003E上述的讨论不限于UE4引擎，只是对于有兴趣实现一个类型系统的人来说，在每个阶段其实都有很多技术选择，但设计就是权衡的艺术，清楚了解你的受众，清晰你的设计目的愿景，对可用的各种手段信手拈来，最后才能组合出优雅的设计。\u003C\u002Fp\u003E\u003Ch2\u003E后记\u003C\u002Fh2\u003E\u003Cp data-pid=\"20R1cmLz\"\u003E在我们阅读UE4源码的过程中，也要时刻认识到UE4的源码不是完美的。有很多时候，在阅读一段具体代码时，我们可能会去使劲猜测这段代码的用意，琢磨当初是怎么的设计理念却不可得。其实，现实的情况是这些代码往往只是一时的修复，且不是所有代码的编写者技术都是那么高超。他会出错，另一个他会修复，然后再犯错修复，周而复始。如同生物的进化一样，一次次重构优化，最终得到的往往并不是最优解，就像人眼睛的盲点和人的智齿都不是最正确的设计，而是会留下进化的痕迹。但是尽管如此，我们也并不需要感到沮丧，因为接受不完美，接受最后的这个可接受解，适当的懂得妥协和接受缺陷，也许也是一个技术人成熟的标志之一吧。\u003C\u002Fp\u003E\u003Cp data-pid=\"V_nzLFKC\"\u003E有一个有趣的现象，对于大工程量的项目（如UE4)来说，越是底层的模块越是缺乏推动力去重构，越底层的代码其改动的阻力也越大。牵一发而动全身，在一些时候，重构底层模块其实也是最能产生巨量效益的时候，因为其影响会层层放大到最上层上去。但是代码毕竟是人在写，在一个公司里，一个团队里，形成的开发氛围往往是只要底层代码能工作，就不会有人去改，也不会有人敢改。拿UE4的CoreUObject模块来说，是UE4的对象系统模块，可以说是最底层核心的模块了，但是根据我这么一大段时间的研读来说，代码里充斥着各种历史痕迹和小修小补，一些代码结构也是让人无可奈何，but it works，所以这块代码从UE3过来，到UE4里，相信有生之年也是会继续追随到UE5的。CoreUObject代码模块目前能工作，虽然有时也会有点BUG，但是到时小修补就好了，那些代码的优雅追求和结构的设计，改的好了效益不太明显；改过之后出了Bug是不是都算你的？所以正是因为这种效益和责任的担负，导致往往最需要重视的模块，最得不到升级改造。但历史的规律也表明了，代码的小缺陷积累多了，开发者的怨气积攒足够了，再适逢一个不动底层不能开工的功能需求的刺激，到时候才能下得了决心大改，或者干脆另起炉灶重新设计了。说这些，是希望同读UE4源码的朋友，在遇到代码里莫名其妙的设计，抓耳挠腮苦思冥想的时候，可以放宽心态，稍安勿躁，休息一下，我们继续前行。\u003C\u002Fp\u003E\u003Cp data-pid=\"aQZuDraR\"\u003E上篇：\u003C\u002Fp\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F26019216\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-c97670efb986368009cfd86804d32245_180x120.jpg\" data-image-width=\"1362\" data-image-height=\"1080\" class=\"internal\"\u003E大钊：《InsideUE4》UObject（五）类型系统信息收集\u003C\u002Fa\u003E\u003Cp data-pid=\"G8Fs9kKC\"\u003E下篇：\u003C\u002Fp\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F57005310\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-5d94dda12e0a9c4b361409742bd61a07_180x120.jpg\" data-image-width=\"1400\" data-image-height=\"788\" class=\"internal\"\u003E大钊：《InsideUE4》UObject（七）类型系统注册-第一个UClass\u003C\u002Fa\u003E\u003Cp data-pid=\"y0NGq5OJ\"\u003E\u003Ci\u003EUE4.18.3\u003C\u002Fi\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"EfoRjWqb\"\u003E知乎专栏：\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4\" class=\"internal\" target=\"_blank\"\u003EInsideUE4\u003C\u002Fa\u003E\u003Cbr\u002F\u003EUE4深入学习QQ群：\u003Cb\u003E456247757\u003C\u002Fb\u003E(非新手入门群，请先学习完官方文档和视频教程，回答正确验证问题才能进入)\u003Cbr\u002F\u003E\u003Cb\u003E个人原创，未经授权，谢绝转载！\u003C\u002Fb\u003E\u003C\u002Fp\u003E","contentNeedTruncated":false,"forceLoginWhenClickReadMore":false,"adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19553361","type":"topic","id":"19553361","name":"游戏开发"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19556258","type":"topic","id":"19556258","name":"游戏引擎"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19824201","type":"topic","id":"19824201","name":"虚幻引擎"}],"voteupCount":143,"voting":0,"heavyUpStatus":"allow_heavy_up","column":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"},"commentCount":14,"contributions":[{"id":1124781,"state":"accepted","type":"first_publish","column":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":true,"tipjarorsCount":1,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"favlistsCount":72,"isNormal":true,"status":0,"activityToppingInfo":{"state":"untopped"},"shareText":"《InsideUE4》UObject（六）类型系统代码生成重构-UE4CodeGen_Private - 来自知乎专栏「InsideUE5」，作者: 大钊 https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F34059049 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":10,"hasColumn":true,"republishers":[],"isNewLinkCard":true,"emojiReaction":{"likeCount":10,"likeHasSet":false},"abParam":{"qaFotoolbar":"0","qaHiddenVoteup":"","qaNewdownvote":"1","rsInterest1":"","zpZhiStyle":""},"attachedInfo":"kgIhCgc1ODEzMTgwEggzNDA1OTA0ORgHIgpJTUFHRV9URVhU","shareGuide":{"hasPositiveBubble":false,"hasTimeBubble":false,"hitShareGuideCluster":false},"settings":{"tableOfContents":{"enabled":false}},"canReference":false,"reactionInstruction":{},"reaction":{"statistics":{"upVoteCount":143,"downVoteCount":5,"likeCount":10,"commentCount":14,"shareCount":0,"playCount":0,"interestPlayCount":0,"favorites":72,"pvCount":0,"bulletCount":0,"applaudCount":0,"questionFollowerCount":0,"questionAnswerCount":0,"plaincontentVoteUpCount":0,"plaincontentLikeCount":0,"imgLikeCount":{"v2769549c0de13c0a0a66d078f776103e0":0}},"relation":{"isAuthor":false,"vote":"Neutral","liked":false,"imgLiked":{"v2769549c0de13c0a0a66d078f776103e0":false},"faved":false,"following":false},"imageReactions":{"v2769549c0de13c0a0a66d078f776103e0":{"likeCount":0,"isLiked":false}}},"interactionBarPlugins":[{"type":"comment","comment":{"enable":true,"placeholder":"发条带图评论"}}],"barPluginsFlipTime":3000,"podcastAudioEnter":{"text":"听内容","textColor":"MapBrand","textSize":13,"actionUrl":"zhihu:\u002F\u002Fpodcast\u002Faudio_player\u002F0?contentId=34059049&contentType=article"}}},"columns":{"insideue4":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"zvideos":{},"eduCourses":{}},"currentUser":"ffde95bc6a24b298d237f46e35a3eb71","account":{"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false},"cardUserInfo":{"vipInfo":{}},"handleWidget":{},"widgetList":[],"userWidgetId":""},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{},"infinity":{},"batchUsers":{},"profileInfinity":null},"env":{"abV2":{"config":{"paramMap":{"ws_pop_activate":{"value":"1","abId":"pop_activate-1"},"ws_zhishiku":{"value":"1","abId":"rl-zhishiku1-1"},"pc_mou_cre_remove":{"value":"1","abId":"rl-mou_create_remove-1"},"ws_new_call":{"value":"1","abId":"rl-mobileweb_call-1"},"ws_hot_activate":{"value":"0","abId":"hot_activate-0"}},"abMap":{"pop_activate-1":{"abId":"pop_activate-1","layerId":"pop_activate_layer"},"rl-zhishiku1-1":{"abId":"rl-zhishiku1-1","layerId":"rl-zhishiku1","diversionType":2},"rl-mou_create_remove-1":{"abId":"rl-mou_create_remove-1","layerId":"rl-mou_create_remove","diversionType":2},"rl-mobileweb_call-1":{"abId":"rl-mobileweb_call-1","layerId":"rl-mobileweb_call"},"hot_activate-0":{"abId":"hot_activate-0","layerId":"web_standard_domain_layer8"}}},"triggers":{}},"userAgent":{"Edge":false,"IE":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"HarmonyOS":false,"iOS":false,"isAppleDevice":false,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Quark":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"WxMiniProgram":false,"BaiduMiniProgram":false,"QQMiniProgram":false,"JDMiniProgram":false,"isWebView":false,"isMiniProgram":false,"origin":"Mozilla\u002F5.0 (Windows NT 10.0; Win64; x64; rv:135.0) Gecko\u002F20100101 Firefox\u002F135.0"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F34059049","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F34059049","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"oppoSearch":false,"baiduSearch":false,"googleSearch":false,"shenma":false,"miniProgram":false,"xiaomi":false,"huaweiSearch":false},"theme":"light","appHeaderTheme":{"current":"normal","disable":true,"normal":{"bgColor":"GBK99A"},"custom":{"bgColor":"GBK99A"}},"enableShortcut":true,"referer":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F26019216","xUDId":"AYDYfc1uQxiPTrrDN2Oi3_z1TueANaNaDu4=","mode":"ssr","conf":{},"xTrafficFreeOrigin":"","ipInfo":{"cityName":"武汉","countryName":"中国","regionName":"湖北","countryCode":"CN"},"logged":true,"query":{},"vars":{"passThroughHeaders":{}}},"me":{"columnContributions":[]},"label":{},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0}},"recommend":{"recommendTimes":{}}},"explore":{},"levelUpperLimit":10,"mcn":{},"mcnManage":{},"tasks":{},"announcement":{},"creatorsRecommendInfo":{}},"creators":{"common":{"applyStatus":{},"rightsStatus":{}},"bayesDomains":{"status":{},"options":{"topDomains":null,"allDomains":null,"editable":0},"contents":null},"school":{"tabs":[],"contents":[],"banner":null,"entities":{}},"faq":{"tabs":[],"article":{}},"knowledgeIncome":{},"safeguardRights":{},"analytics":{"all":{},"answer":{},"zvideo":{},"article":{},"pin":{},"singleContent":{}},"account":{"growthLevel":{}},"KMResource":{},"training":{},"ToolsQuestion":{"goodatTopics":[]},"ToolsHotspot":{"domains":[]},"ToolsRecommend":{},"ToolsCustomPromotion":{"itemLists":{},"baseInfo":{}},"ToolsSearchQuestion":{},"editorSetting":{},"MCNManage":{},"knowledgeTasks":{},"incomeAnalysis":{"income":{"aggregation":{}}},"creationManage":{"editModal":{"status":false}},"activity":{},"announcement":{},"home":{"currentCreatorUrlToken":null,"rights":[],"newRights":[],"scoreInfo":{},"menusShowControlByServer":{"bVipRecomend":false,"creationRelationship":false},"newTasks":{"creatorTask":{"tasks":[],"des":[]}},"bannerList":[],"recentlyCreated":[],"homecard":{},"homeData":{}},"videoSupport":{"textBenefit":{}},"videoDistribution":{},"profilePoster":{"creatorPosterConfig":{},"creatorPosterData":{}}},"answers":{"voters":{},"upvoters":{},"copyrightApplicants":{},"favlists":{},"newAnswer":{},"entityWords":{},"paidContent":{},"settings":{},"relationEndorsement":{},"growthCardOrder":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{},"upvoters":{},"relationEndorsement":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotList":[],"hotListHeadZone":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]},"hotDaily":{"data":[],"paging":{}},"hotHighlight":{"isFetching":false,"isDrained":false,"data":[],"paging":{}},"banner":{},"commercialBanner":{"show":false,"banner":{},"trackData":{}},"video":{"items":[],"next":null,"isLoading":false,"isDrained":false}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"insideue4"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[]},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":null,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"userProfit":{"permission":{"permissionStatus":{"zhiZixuan":0,"recommend":-1,"task":0,"plugin":0,"infinity":0},"visible":false},"linkCardLimit":0},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{},"banners":{},"protocolStatus":{"isAgreedNew":true,"isAgreedOld":true},"probationCountdownDays":0},"zvideos":{"campaignVideoList":{},"campaigns":{},"tagoreCategory":[],"recommendations":{},"insertable":{},"recruit":{"form":{"platform":"","nickname":"","followerCount":"","domain":"","contact":""},"submited":false,"ranking":[]},"qyActivityData":{},"talkActivityData":{},"party2022ActivityData":{},"batchVideos":{},"creationReferences":{},"zvideoCollection":{},"zvideoGrant":{},"collectData":{"isFetching":false,"list":[]},"videoSource":{"isLoaded":false},"paidColumnInfo":{}},"republish":{},"commentPermission":{},"creatorRightStatus":{"list":[]},"adPromotion":{"answer":{},"article":{}},"paidColumn":{"entities":{}},"followingColumns":{},"hotSpot":{}},"fetchHost":"www.zhihu.com","subAppName":"column","spanName":"Post","canaryConfig":{"test_canary":"0","use_new_player":"0","player_vendor":"0","use_hevc":"1","upload_use_signature":"1","use_backdrop_blur":"1","article_title_imagex":"1","play_station":"1","use_cached_supported_countries":"1"}}</script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/vendor.4d4559ddd761145da535.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/react.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom-server.browser.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/runtime.app.cb676f5b2d3a7d3d76a9.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-75fc9c18.app.3db651c252e14ef6658e.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-29107295.app.42d07f814b7b05187671.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-79b5cf47.app.8b6b6bf4b6d894db9b07.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-330004dc.app.7437cf54ac28fca0e302.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-f3572862.app.88776a5ab04556b70cc2.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-0e5ce61e.app.22c35ce7e8956cfacf07.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-83b0f42f.app.4af446e71092c79a4337.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-38cf5c11.app.c0ead2ce5c3ab6da63bd.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-2ec050f6.app.9d36ff4f103fb294ee49.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/lib-9b20c40c.app.3b5d3b2a0de64f6e01b9.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/7941.app.193a11c73b77ab856fbe.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/column.app.f306cd8a2baed3faa615.js"></script><script defer="defer" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/aria.js" id="ariascripts" wapforceoldfixed="false" loaddata="false"></script><script src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/hm.js" async=""></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/zap.js"></script><div><div style="display: none;"><i>想来知乎工作？请发送邮件到 jobs@zhihu.com</i></div></div><script src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/push.js"></script><div><div><div class="css-8pdeid"></div></div></div><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%85%AD%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E9%87%8D%E6%9E%84-UE4CodeGen_Private%20-%20%E7%9F%A5%E4%B9%8E_files/emoticon.js"></script><div><div><div style="left: -1179px; top: -999px;" class="Editable-languageSuggestions"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete7-0" id="Popover6-toggle" aria-haspopup="true" class="Input" placeholder="选择语言"><svg width="24" height="24" viewBox="0 0 24 24" fill="#afbdcf" class="Zi Zi--Select"><path fill-rule="evenodd" d="M12.53 3.47a.75.75 0 0 0-1.06 0l-5 5a.75.75 0 0 0 1.06 1.06L12 5.06l4.47 4.47a.75.75 0 1 0 1.06-1.06l-5-5Zm-5 11a.75.75 0 0 0-1.06 1.06l5 5a.75.75 0 0 0 1.06 0l5-5a.75.75 0 1 0-1.06-1.06L12 18.94l-4.47-4.47Z" clip-rule="evenodd"></path></svg></label></div></div></div></div></div><div><div><div style="left: -1179px; top: -999px;" class="Editable-languageSuggestions"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete9-0" id="Popover8-toggle" aria-haspopup="true" class="Input" placeholder="选择语言"><svg width="24" height="24" viewBox="0 0 24 24" fill="#afbdcf" class="Zi Zi--Select"><path fill-rule="evenodd" d="M12.53 3.47a.75.75 0 0 0-1.06 0l-5 5a.75.75 0 0 0 1.06 1.06L12 5.06l4.47 4.47a.75.75 0 1 0 1.06-1.06l-5-5Zm-5 11a.75.75 0 0 0-1.06 1.06l5 5a.75.75 0 0 0 1.06 0l5-5a.75.75 0 1 0-1.06-1.06L12 18.94l-4.47-4.47Z" clip-rule="evenodd"></path></svg></label></div></div></div></div></div></body></html>