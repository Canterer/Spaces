<!DOCTYPE html>
<html lang="zh" class="itcauecng" data-theme="light" data-rh="data-theme"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style class="ariareader ariareader--user-agent" media="screen" id="aria2eri20de65m" data-for="result" isaria="true">.ariafocus{outline:none;}body.useOldFixed [aria-fixedOldHidden=true],.ariaHide{display:none !important;}:focus{outline:none !important;}</style><meta charset="utf-8"><title>《InsideUE4》UObject（十一）类型系统构造-构造绑定链接 - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"><meta name="renderer" content="webkit"><meta name="force-rendering" content="webkit"><meta http-equiv="X-UA-Compatible" content="IE=10,chrome=1"><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"><meta data-rh="true" name="keywords" content="虚幻 4（游戏引擎）,游戏引擎,游戏开发"><meta data-rh="true" name="description" content="啊，你好长！引言UEnumUScriptStructICppStructOps的作用UClassUPackageUPropertyUFunction绑定链接BindLink总结引言在上篇介绍了类型注册的最后阶段，为每一个enum、struct、class都进行了一次RegisterFn调用（忘…"><meta data-rh="true" property="og:title" content="《InsideUE4》UObject（十一）类型系统构造-构造绑定链接"><meta data-rh="true" property="og:url" content="https://zhuanlan.zhihu.com/p/59553490"><meta data-rh="true" property="og:description" content="啊，你好长！引言UEnumUScriptStructICppStructOps的作用UClassUPackageUPropertyUFunction绑定链接BindLink总结引言在上篇介绍了类型注册的最后阶段，为每一个enum、struct、class都进行了一次RegisterFn调用（忘…"><meta data-rh="true" property="og:image" content="https://pic1.zhimg.com/v2-9f219e0558772f16d5a91174bb750a60_720w.jpg?source=172ae18b"><meta data-rh="true" property="og:type" content="article"><meta data-rh="true" property="og:site_name" content="知乎专栏"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png" sizes="152x152"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.d5793cac.png" sizes="120x120"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7abf3393.png" sizes="76x76"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.362a8eac.png" sizes="60x60"><link crossorigin="" rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/heifetz/favicon.ico"><link crossorigin="" rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/heifetz/search.xml" title="知乎"><link rel="dns-prefetch" href="https://static.zhimg.com/"><link rel="dns-prefetch" href="https://pica.zhimg.com/"><link rel="dns-prefetch" href="https://picx.zhimg.com/"><link rel="dns-prefetch" href="https://pic1.zhimg.com/"><link rel="dns-prefetch" href="https://pic2.zhimg.com/"><link rel="dns-prefetch" href="https://pic3.zhimg.com/"><link rel="dns-prefetch" href="https://pic4.zhimg.com/"><link rel="dns-prefetch" href="https://static.zhihu.com/"><style data-emotion-css="9mvwt1">:root{--zhc-padding-horizontal:20px;--zhc-padding-vertical:16px;--zhc-notification-top:75px;--app-padding:16px;--app-header-height:52px;--app-max-width:640px;--app-width:1000px;--app-font-size:15px;}</style><script nonce="" data-web-reporter-config="{&quot;platform&quot;:&quot;web&quot;,&quot;project&quot;:&quot;heifetz&quot;}">!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).webReporter={})}(this,function(e){"use strict";var t={},n=!1,o=function(){var e,o,r,a,i;return n||(e=document.querySelector("script[data-web-reporter-config]"),o=e&&e.dataset.webReporterConfig||"{}",r=JSON.parse(o),a=r.platform,i=r.project,t={platform:a,project:i},n=!0),t};function r(e){return a(function(){return localStorage.getItem(e)})()}function a(e){return function(){try{return e.apply(void 0,arguments)}catch(e){}}}var i=a(function(e,t){var n={platform:"web",project:o().project,clientTimestamp:+new Date};!function(e,t,n){"1"===r("weber:logenabled")&&console.log("[web-reporter]%o",{type:e,base:t,data:n})}(e,n,t),function(e,t){var n=btoa(JSON.stringify(t));if("undefined"!=typeof Blob&&window.navigator&&window.navigator.sendBeacon){var o=new Blob([n],{type:"text/plain"});navigator.sendBeacon(e,o)}else{var r=new XMLHttpRequest;r.open("POST",e),r.withCredentials=!1,r.setRequestHeader("Content-Type","text/plain;charset=UTF-8"),r.send(n)}}(r("weber:api")||"https://apm.zhihu.com/collector/web_json",{type:e,base:n,data:t})});e.report=i,Object.defineProperty(e,"__esModule",{value:!0})});
</script><link href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/7941.216a26f4.e07b5501c9707bef3df0.css" crossorigin="" rel="stylesheet"><link href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/column.216a26f4.65f86926949e6790f684.css" crossorigin="" rel="stylesheet"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/user-hover-card.216a26f4.abd617b43cb1ecfc3d93.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/GoodsRecommendGoodsCardList.216a26f4.d95ce79191cdf8d7ac28.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/report_modals.216a26f4.06f4ff608e9af861b520.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/9625.216a26f4.fab316e5d80ef71e9e23.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/ECommerceAd.216a26f4.cdbc0ed858e691df0a59.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/1468.216a26f4.101bb14a2c1d8d20b744.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/EditableV2.216a26f4.d180f7d6ef8bb7bb7c87.css" crossorigin="anonymous"><script nonce="">!function(){"use strict";!function(e,n){var r=[];function t(e){return function(){r.push([e,arguments])}}n.Raven={captureException:t("captureException"),captureMessage:t("captureMessage"),captureBreadcrumb:t("captureBreadcrumb")};var a,o,c,i,s,u="undefined"!=typeof DOMError;function d(e){var n=e instanceof Error||e instanceof ErrorEvent||u&&e instanceof DOMError||e instanceof DOMException;Raven.captureException(n?e:new Error(e.message||e.reason))}n.addEventListener("unhandledrejection",d),n.addEventListener("error",d,!0),a=e.src,o=e,c=function(){r.forEach(function(e){var n;(n=Raven)[e[0]].apply(n,e[1])}),n.removeEventListener("unhandledrejection",d),n.removeEventListener("error",d,!0)},i=document.head||document.getElementsByTagName("head")[0],(s=document.createElement("script")).crossOrigin=o.crossOrigin,s.dataset.sentryConfig=o["data-sentry-config"],s.onload=c,s.src=a,i.appendChild(s)}({"defer":true,"crossOrigin":"anonymous","src":"https://unpkg.zhimg.com/@cfe/sentry-script@1.3.1/dist/init.js","data-sentry-config":"{\"dsn\":\"https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224\",\"sampleRate\":0.1,\"release\":\"2208-77d63458\",\"ignoreErrorNames\":[\"NetworkError\",\"SecurityError\"],\"ignoreErrorsPreset\":\"ReactApp\",\"tags\":{\"app_name\":\"heifetz\"}}"},window)}();
</script><script crossorigin="anonymous" data-sentry-config="{&quot;dsn&quot;:&quot;https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224&quot;,&quot;sampleRate&quot;:0.1,&quot;release&quot;:&quot;2208-77d63458&quot;,&quot;ignoreErrorNames&quot;:[&quot;NetworkError&quot;,&quot;SecurityError&quot;],&quot;ignoreErrorsPreset&quot;:&quot;ReactApp&quot;,&quot;tags&quot;:{&quot;app_name&quot;:&quot;heifetz&quot;}}" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/init.js"></script><style data-emotion-css="55n9hh">.css-55n9hh{position:fixed;top:0;right:0;left:0;z-index:101;display:none;height:2px;pointer-events:none;background:#1772F6;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}</style><style data-emotion-css="1l12z7y">.css-1l12z7y{box-shadow:0px 16px 32px rgba(0,0,0,0.04);}</style><style data-emotion-css="1hlrcxk">.css-1hlrcxk{-webkit-transition-property:fill;transition-property:fill;-webkit-transition-duration:0.25s;transition-duration:0.25s;-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;}</style><style data-emotion-css="icip60">.css-icip60{border-radius:2px;}</style><style data-emotion-css="fnnb9l">.css-fnnb9l{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:30px;height:30px;border-radius:2px;}</style><style data-emotion-css="78p1r9">.css-78p1r9{box-sizing:border-box;margin:0;min-width:0;margin-left:auto;margin-right:auto;max-width:690px;margin-top:0;}@media screen and (min-width:40em){.css-78p1r9{margin-top:1em;}}</style><style data-emotion-css="m72bjh">.css-m72bjh{position:relative;padding-bottom:42.5%;height:0;border-radius:inherit;}</style><style data-emotion-css="1t3znrt">.css-1t3znrt{box-sizing:border-box;margin:0;min-width:0;position:relative;padding-bottom:42.5%;height:0;border-radius:inherit;}</style><style data-emotion-css="1ld0bim">.css-1ld0bim{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;}</style><style data-emotion-css="uodor8">.css-uodor8{border-radius:50%;}</style><style data-emotion-css="1syywx2">.css-1syywx2{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:38px;height:38px;border-radius:50%;}</style><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style><style data-emotion-css="2dtzk2">.css-2dtzk2{cursor:pointer;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:.3em;}</style><style data-emotion-css="1m3x3v9">.css-1m3x3v9{width:1em;height:1em;}</style><style data-emotion-css="z4ujak">.css-z4ujak{color:#8491a5;}</style><style data-emotion-css="1od93p9">.css-1od93p9{margin-top:16px;position:relative;}</style><style data-emotion-css="376mun">.css-376mun{position:relative;display:inline;}</style><style data-emotion-css="dg64xe">.css-dg64xe .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-dg64xe .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-dg64xe .FileLinkCard-info{margin-left:12px;}.css-dg64xe .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-dg64xe .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-dg64xe .FileLinkCard-source{white-space:pre;}.css-dg64xe img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-dg64xe img.content_image[data-size="normal"],.css-dg64xe img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-dg64xe img.content_image[data-size="small"],.css-dg64xe img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="1vqsdx1">.css-1vqsdx1 .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-1vqsdx1 .LinkCard.new,.css-1vqsdx1 .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1vqsdx1 .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-1vqsdx1 .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1vqsdx1 .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-1vqsdx1 .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1vqsdx1 .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1vqsdx1 .LinkCard.old,.css-1vqsdx1 .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}</style><style data-emotion-css="yxro2d">.css-yxro2d .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-yxro2d .LinkCard.old,.css-yxro2d .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-yxro2d .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-yxro2d .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-yxro2d .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-yxro2d .LinkCard.new,.css-yxro2d .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-yxro2d .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-yxro2d .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-yxro2d .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-yxro2d .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-yxro2d .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-yxro2d .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-yxro2d .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-yxro2d .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-yxro2d .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-yxro2d .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-yxro2d .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-yxro2d .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-yxro2d .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-yxro2d .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-yxro2d .FileLinkCard-info{margin-left:12px;}.css-yxro2d .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-yxro2d .FileLinkCard-source{white-space:pre;}.css-yxro2d img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-yxro2d img.content_image[data-size="normal"],.css-yxro2d img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-yxro2d img.content_image[data-size="small"],.css-yxro2d img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="ob6uua animation-1yvu044">.css-ob6uua{word-break:break-word;line-height:1.6;}.css-ob6uua > [data-first-child]{margin-top:0;}.css-ob6uua > :last-child{margin-bottom:0;}.css-ob6uua h1,.css-ob6uua h2{clear:left;margin-top:calc((1.4em * 2) / 1.2);margin-bottom:calc(1.4em / 1.2);font-size:1.2em;line-height:1.5;font-weight:600;}.css-ob6uua h3,.css-ob6uua h4,.css-ob6uua h5,.css-ob6uua h6{clear:left;margin-top:calc((1.4em * 1.5) / 1.1);margin-bottom:calc(1.4em / 1.1);font-size:1.1em;line-height:1.5;font-weight:600;}.css-ob6uua u{-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid #373a40;}.css-ob6uua b{font-weight:600;}.css-ob6uua sup{font-size:0.8em;}.css-ob6uua sup[data-draft-type='reference']{color:#09408e;}.css-ob6uua a:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}html[data-focus-visible] .css-ob6uua a:focus{box-shadow:0 0 0 2px #ffffff,0 0 0 4px rgba(23,114,246,0.3);}.css-ob6uua a.ztext-link,.css-ob6uua a.internal,.css-ob6uua a.external{-webkit-text-decoration:none;text-decoration:none;cursor:pointer;border-bottom:1px solid #81858f;}.css-ob6uua a.ztext-link:hover,.css-ob6uua a.internal:hover,.css-ob6uua a.external:hover{color:#09408e;border-bottom:1px solid #09408e;}.css-ob6uua a.ztext-link > .ellipsis::after,.css-ob6uua a.internal > .ellipsis::after,.css-ob6uua a.external > .ellipsis::after{content:'...';}.css-ob6uua a.ztext-link > .invisible,.css-ob6uua a.internal > .invisible,.css-ob6uua a.external > .invisible{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;}.css-ob6uua a.ztext-link u,.css-ob6uua a.internal u,.css-ob6uua a.external u{border:none;}.css-ob6uua a.member_mention{color:#09408e;}.css-ob6uua a.member_mention:hover{border-bottom:1px solid #09408e;}.css-ob6uua a.UserLink-link{color:#09408e;}.css-ob6uua a.UserLink-link:hover{border-bottom:1px solid #09408e;}.css-ob6uua p{margin:1.4em 0;}.css-ob6uua p.ztext-empty-paragraph{margin:calc((2.8em- (1.4em * 2 + 1.6em)) / 2) 0;}.css-ob6uua p.ztext-empty-paragraph + .ztext-empty-paragraph{margin:1.4em 0;}.css-ob6uua hr{margin:4em auto;width:240px;max-width:100%;border:none;border-top:1px solid #c4c7ce;}.css-ob6uua img[eeimg]{max-width:100%;vertical-align:middle;}.css-ob6uua img[eeimg="1"]{margin:0 3px;max-width:calc(100% - 6px);display:inline-block;}.css-ob6uua img[eeimg="2"]{margin:1.4em auto;display:block;}.css-ob6uua blockquote{margin:1.4em 0;padding-left:1em;color:#535861;border-left:3px solid #c4c7ce;}.css-ob6uua ol,.css-ob6uua ul{margin:1.4em 0;padding:0;width:100%;}.css-ob6uua ol ol,.css-ob6uua ul ol,.css-ob6uua ol ul,.css-ob6uua ul ul{margin:0;}.css-ob6uua ol li::before,.css-ob6uua ul li::before{width:1em;}.css-ob6uua ol > ol,.css-ob6uua ul > ol,.css-ob6uua ol > ul,.css-ob6uua ul > ul{padding-left:1em;box-sizing:border-box;}.css-ob6uua ul>li{display:table;width:100%;list-style:none;}.css-ob6uua ul>li::before{display:table-cell;content:'•  ';white-space:pre;}.css-ob6uua ol{counter-reset:ol;}.css-ob6uua ol > li{display:table;width:100%;list-style:none;}.css-ob6uua ol > li::before{display:table-cell;text-align:right;counter-increment:ol;content:counter(ol) '. ';white-space:pre;}.css-ob6uua ol ol{counter-reset:ol2;}.css-ob6uua ol ol li::before{counter-increment:ol2;content:counter(ol2) '. ';}.css-ob6uua ol ol ol{counter-reset:ol3;}.css-ob6uua ol ol ol li::before{counter-increment:ol3;content:counter(ol3) '. ';}.css-ob6uua ol ol ol ol{counter-reset:ol4;}.css-ob6uua ol ol ol ol li::before{counter-increment:ol4;content:counter(ol4) '. ';}.css-ob6uua figure{margin:1.4em 0;}.css-ob6uua figure .content_image,.css-ob6uua figure .origin_image{margin:0 auto;}.css-ob6uua figure figcaption{margin-top:calc(0.6em / 0.9);padding:0 1em;font-size:0.9em;line-height:1.5;text-align:center;color:#9196a1;}.css-ob6uua figure + figure{margin-top:calc(1.4em * 1.6);}.css-ob6uua figure[data-size='small'],.css-ob6uua figure:not([data-size]) > [data-size='small']{clear:both;}.css-ob6uua figure[data-size='left'],.css-ob6uua figure:not([data-size]) > [data-size='left']{float:left;margin:0 20px 20px 0;max-width:33%;}.css-ob6uua figure[data-size='right'],.css-ob6uua figure:not([data-size]) > [data-size='right']{float:right;margin:0 0 20px 20px;max-width:33%;}.css-ob6uua figure[data-size='collapse']{margin-bottom:0;}.css-ob6uua figure[data-size='collapse'] + figure{margin-top:0;}.css-ob6uua .content_image,.css-ob6uua .origin_image{display:block;max-width:100%;height:auto;margin:1.4em auto;background-color:#fff;}.css-ob6uua .content_image[data-size='small'],.css-ob6uua .origin_image[data-size='small']{max-width:40%;}.css-ob6uua .content_image.zh-lightbox-thumb,.css-ob6uua .origin_image.zh-lightbox-thumb{cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in;}.css-ob6uua code{margin:0 2px;padding:3px 4px;border-radius:3px;font-family:Menlo,Monaco,Consolas,'Andale Mono','lucida console','Courier New',monospace;font-size:0.9em;background-color:#f8f8fa;}.css-ob6uua pre{margin:1.4em 0;padding:calc(0.8em / 0.9);font-size:0.9em;word-break:initial;word-wrap:initial;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;background:#f8f8fa;border-radius:4px;}.css-ob6uua pre code{margin:0;padding:0;font-size:inherit;border-radius:0;background-color:inherit;}.css-ob6uua li pre{white-space:pre-wrap;}.css-ob6uua table[data-draft-type='table']{border-collapse:collapse;font-size:15px;margin:1.4em auto;max-width:100%;table-layout:fixed;text-align:left;width:100%;}.css-ob6uua table[data-draft-type='table'][data-size='small']{min-width:260px;width:40%;}.css-ob6uua table[data-draft-type='table'][data-row-style='striped'] tr:nth-of-type(2n + 1){background:#f8f8fa;}.css-ob6uua table[data-draft-type='table'] td,.css-ob6uua table[data-draft-type='table'] th{border:1px solid #c4c7ce;line-height:24px;height:24px;padding:3px 12px;}.css-ob6uua table[data-draft-type='table'] th{background:#ebeced;color:#191B1F;font-weight:500;}.css-ob6uua .video-box,.css-ob6uua .link-box{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:1.4em 0;overflow:auto;white-space:normal;cursor:pointer;border:solid 1px #ebeced;border-radius:4px;}.css-ob6uua .lazy[data-lazy-status]{background-color:#f8f8fa;}.css-ob6uua .lazy[data-lazy-status="ok"]{background-color:#fff;-webkit-animation:animation-1yvu044 0.5s ease-in;animation:animation-1yvu044 0.5s ease-in;}.css-ob6uua .highlight{margin:1em 0;}.css-ob6uua .highlight pre{margin:0;}.css-ob6uua .highlight .hll{background-color:#f8f8fa;}.css-ob6uua .highlight .c{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .err{color:#D95350;}.css-ob6uua .highlight .k{font-weight:600;}.css-ob6uua .highlight .o{font-weight:600;}.css-ob6uua .highlight .cm{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cp{font-weight:600;color:#9196a1;}.css-ob6uua .highlight .c1{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cs{font-style:italic;font-weight:600;color:#9196a1;}.css-ob6uua .highlight .gd{color:#F05159;}.css-ob6uua .highlight .ge{font-style:italic;}.css-ob6uua .highlight .gr{color:#D95350;}.css-ob6uua .highlight .gh{color:#9196a1;}.css-ob6uua .highlight .gi{color:#12b370;}.css-ob6uua .highlight .go{color:#81858f;}.css-ob6uua .highlight .gp{color:#535861;}.css-ob6uua .highlight .gs{font-weight:600;}.css-ob6uua .highlight .gu{color:#9196a1;}.css-ob6uua .highlight .gt{color:#D95350;}.css-ob6uua .highlight .kc{font-weight:600;}.css-ob6uua .highlight .kd{font-weight:600;}.css-ob6uua .highlight .kn{font-weight:600;}.css-ob6uua .highlight .kp{font-weight:600;}.css-ob6uua .highlight .kr{font-weight:600;}.css-ob6uua .highlight .kt{font-weight:600;color:#09408e;}.css-ob6uua .highlight .m{color:#1772F6;}.css-ob6uua .highlight .s{color:#D95350;}.css-ob6uua .highlight .na{color:#1772F6;}.css-ob6uua .highlight .nb{color:#1772F6;}.css-ob6uua .highlight .nc{font-weight:600;color:#09408e;}.css-ob6uua .highlight .no{color:#1772F6;}.css-ob6uua .highlight .ni{color:#6A5FF3;}.css-ob6uua .highlight .ne{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nf{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nn{color:#535861;}.css-ob6uua .highlight .nt{color:#09408e;}.css-ob6uua .highlight .nv{color:#1772F6;}.css-ob6uua .highlight .ow{font-weight:600;}.css-ob6uua .highlight .w{color:#adb0b7;}.css-ob6uua .highlight .mf{color:#1772F6;}.css-ob6uua .highlight .mh{color:#1772F6;}.css-ob6uua .highlight .mi{color:#1772F6;}.css-ob6uua .highlight .mo{color:#1772F6;}.css-ob6uua .highlight .sb{color:#D95350;}.css-ob6uua .highlight .sc{color:#D95350;}.css-ob6uua .highlight .sd{color:#D95350;}.css-ob6uua .highlight .s2{color:#D95350;}.css-ob6uua .highlight .se{color:#D95350;}.css-ob6uua .highlight .sh{color:#D95350;}.css-ob6uua .highlight .si{color:#D95350;}.css-ob6uua .highlight .sx{color:#D95350;}.css-ob6uua .highlight .sr{color:#A5542F;}.css-ob6uua .highlight .s1{color:#D95350;}.css-ob6uua .highlight .ss{color:#D95350;}.css-ob6uua .highlight .bp{color:#9196a1;}.css-ob6uua .highlight .vc{color:#1772F6;}.css-ob6uua .highlight .vg{color:#1772F6;}.css-ob6uua .highlight .vi{color:#1772F6;}.css-ob6uua .highlight .il{color:#1772F6;}.css-ob6uua .highlight::-webkit-scrollbar{width:6px;height:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal{background-color:rgba(25,27,31,0.5);border-radius:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal:hover{background-color:rgba(25,27,31,0.6);}.css-ob6uua .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-ob6uua .LinkCard.old,.css-ob6uua .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-ob6uua .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-ob6uua .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-ob6uua .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-ob6uua .LinkCard.new,.css-ob6uua .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-ob6uua .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-ob6uua .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-ob6uua .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-ob6uua .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-ob6uua .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-ob6uua .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-ob6uua .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-ob6uua .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-ob6uua .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-ob6uua .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-ob6uua .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-ob6uua .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-ob6uua .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-ob6uua .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-ob6uua .FileLinkCard-info{margin-left:12px;}.css-ob6uua .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-ob6uua .FileLinkCard-source{white-space:pre;}.css-ob6uua img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-ob6uua img.content_image[data-size="normal"],.css-ob6uua img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-ob6uua img.content_image[data-size="small"],.css-ob6uua img.origin_image[data-size="small"]{width:320px;max-width:100%;}@-webkit-keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}@keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}</style><style data-emotion-css="1vbn52a">.css-1vbn52a{box-sizing:border-box;margin:0;min-width:0;margin-bottom:60px;line-height:19px;text-align:center;color:#adb0b7;font-size:13px;}</style><style data-emotion-css="1qckg6r">.css-1qckg6r{width:442px;}.css-1qckg6r .Modal-content{padding:16px 20px 32px;margin:0;}</style><style data-emotion-css="zein01">.css-zein01{border-radius:4px;padding:0 12px;border:1px solid #ebeced;}</style><style data-emotion-css="1xlfegr">.css-1xlfegr{background:transparent;box-shadow:none;}</style><style data-emotion-css="1gomreu">.css-1gomreu{position:relative;display:inline-block;}</style><style data-emotion-css="1u7r5c9">.css-1u7r5c9{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:40px;height:40px;border-radius:50%;}</style><style data-emotion-css="ch8ocw">.css-ch8ocw{position:relative;display:inline-block;height:30px;padding:0 12px;font-size:14px;line-height:30px;color:#1772F6;vertical-align:top;border-radius:100px;background:rgba(23,114,246,0.1);}.css-ch8ocw:hover{background-color:rgba(23,114,246,0.15);}</style><style type="text/css">/* toast 打包后 css 的有先层级有问题，自定义的样式会被覆盖，先加个 important 吧 */
.Toast_module_toast__e741a14e {
  top: 40px !important;
  border-radius: 34px !important;
  box-shadow: 0px 4px 16px #00000014 !important;
  background-color: #fff !important;
  padding: 11px 24px !important;
  font-weight: 500 !important;
  font-size: 14px !important;
  line-height: 22px !important;
  color: #121212 !important;
  transform: translate(-50%, 0%) !important;
}
</style><style type="text/css">.Marquee_module_marquee__218919a6 {
  overflow: hidden;
}

.Marquee_module_marqueeText__218919a6 {
  position: relative;
  transition: all 0.5s ease-in-out;
}
.Marquee_module_noAnimation__218919a6 {
  transition: none;
}

.Marquee_module_marqueeItem__218919a6 {
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  overflow: hidden;
  flex: 1;
}
</style><style data-emotion="css"></style></head><body class="WhiteBg-body PostIndex-body" aria-status="false" aria-ofstatus="false" aria-basefontsize="16" data-rh="class"><a id="ariaTipText" role="pagedescription" aria-label="欢迎进入 《InsideUE4》UObject（十一）类型系统构造-构造绑定链接 - 知乎,盲人用户使用操作智能引导，请按快捷键Ctrl+Alt+R；阅读详细操作说明请按快捷键Ctrl+Alt+问号键。" aria-atomic="true" href="javascript:void(0)" class="skipAutoFix" style="width: 1px; height: 1px;"><img src="" style="width:1px !important;height:1px !important;position:absolute;top:0;"></a><div id="root"><div class="App"><div class="LoadingBar  css-55n9hh"></div><div><span style="position:absolute;top:-10000px;left:-10000px" role="log" aria-live="assertive"></span></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;13-37-60-50-30&quot;}" data-zop="{&quot;authorName&quot;:&quot;大钊&quot;,&quot;itemId&quot;:&quot;59553490&quot;,&quot;title&quot;:&quot;《InsideUE4》UObject（十一）类型系统构造-构造绑定链接&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-detail-view-path-module="PostItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;59553490&quot;,&quot;id&quot;:&quot;59553490&quot;}}}"><div class="ColumnPageHeader-Wrapper"><div><div class="Sticky ColumnPageHeader css-1l12z7y"><div class="ColumnPageHeader-content"><a href="https://www.zhihu.com/" aria-label="知乎"><svg viewBox="0 0 64 30" fill="#1772F6" width="64" height="30" class="css-1hlrcxk"><path d="M29.05 4.582H16.733V25.94h3.018l.403 2.572 4.081-2.572h4.815V4.582zm-5.207 18.69l-2.396 1.509-.235-1.508h-1.724V7.233h6.78v16.04h-2.425zM14.46 14.191H9.982c0-.471.033-.954.039-1.458v-5.5h5.106V5.935a1.352 1.352 0 0 0-.404-.957 1.378 1.378 0 0 0-.968-.396H5.783c.028-.088.056-.177.084-.255.274-.82 1.153-3.326 1.153-3.326a4.262 4.262 0 0 0-2.413.698c-.57.4-.912.682-1.371 1.946-.532 1.453-.997 2.856-1.31 3.693C1.444 8.674.28 11.025.28 11.025a5.85 5.85 0 0 0 2.52-.61c1.119-.593 1.679-1.502 2.054-2.883l.09-.3h2.334v5.5c0 .5-.045.982-.073 1.46h-4.12c-.71 0-1.39.278-1.893.775a2.638 2.638 0 0 0-.783 1.874h6.527a17.717 17.717 0 0 1-.778 3.649 16.796 16.796 0 0 1-3.012 5.273A33.104 33.104 0 0 1 0 28.74s3.13 1.175 5.425-.954c1.388-1.292 2.631-3.814 3.23-5.727a28.09 28.09 0 0 0 1.12-5.229h5.967v-1.37a1.254 1.254 0 0 0-.373-.899 1.279 1.279 0 0 0-.909-.37z"></path><path d="M11.27 19.675l-2.312 1.491 5.038 7.458a6.905 6.905 0 0 0 .672-2.218 3.15 3.15 0 0 0-.28-2.168l-3.118-4.563zM51.449 15.195V5.842c4.181-.205 7.988-.405 9.438-.483l.851-.05c.387-.399.885-2.395.689-3.021-.073-.25-.213-.666-.638-.555a33.279 33.279 0 0 1-4.277.727c-2.766.321-3.97.404-7.804.682-6.718.487-12.709.72-12.709.72a2.518 2.518 0 0 0 .788 1.834 2.567 2.567 0 0 0 1.883.706c2.278-.095 5.598-.25 8.996-.41v9.203h-12.78c0 .703.281 1.377.783 1.874a2.69 2.69 0 0 0 1.892.777h10.105v7.075c0 .887-.464 1.192-1.231 1.214h-3.92a4.15 4.15 0 0 0 .837 1.544 4.2 4.2 0 0 0 1.403 1.067 6.215 6.215 0 0 0 2.71.277c1.36-.066 2.967-.826 2.967-3.57v-7.607h11.28c.342 0 .67-.135.91-.374.242-.239.378-.563.378-.902v-1.375H51.449z"></path><path d="M42.614 8.873a2.304 2.304 0 0 0-1.508-.926 2.334 2.334 0 0 0-1.727.405l-.376.272 4.255 5.85 2.24-1.62-2.884-3.98zM57.35 8.68l-3.125 4.097 2.24 1.663 4.517-5.927-.375-.277a2.32 2.32 0 0 0-1.722-.452 2.327 2.327 0 0 0-1.536.896z"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="https://www.zhihu.com/column/insideue4">InsideUE5</a></div></div><div class="ColumnPageHeader-Button"><div class="Popover"><button title="更多" id="Popover1-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button ColumnPageHeader-MenuToggler FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--Dots" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></button></div><button type="button" class="Button ColumnPageHeader-WriteButton FEfUrdfMIKpQDJDqkjte Button--blue JmYzaky7MEPMFcJDLNMG"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--EditSurround" fill="currentColor"><path d="M4.352 6.804A2.554 2.554 0 0 1 6.905 4.25h6.072a.875.875 0 0 0 0-1.75H6.905a4.304 4.304 0 0 0-4.303 4.304v10.142a4.304 4.304 0 0 0 4.303 4.304h10.143a4.304 4.304 0 0 0 4.304-4.304v-6.071a.875.875 0 0 0-1.75 0v6.071a2.554 2.554 0 0 1-2.554 2.554H6.905a2.554 2.554 0 0 1-2.553-2.554V6.804Z"></path><path d="M20.595 4.731a.875.875 0 1 0-1.237-1.237l-7.763 7.762a.875.875 0 1 0 1.238 1.238l7.762-7.763Z"></path></svg>写文章</button></div></div><div class="ColumnPageHeader-profile"><div class="Popover AppHeader-menu"><button id="Popover4-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button AppHeader-profileEntry FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><img class="Avatar AppHeader-profileAvatar css-fnnb9l" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x" alt="点击打开没有了想念的主页"></button></div><div class="Popover ddLajxN_Q0AuobBZjX9m AppHeaderProfileMenu-creatorHintPopover"><div class="AppHeaderProfileMenu-creatorHintToggler" id="Popover5-toggle" aria-haspopup="true" aria-expanded="false"></div></div></div></div></div></div><div class="css-78p1r9"><div class="css-1t3znrt"><div class="css-1ld0bim"><span style="box-sizing:border-box;display:block;overflow:hidden;width:initial;height:initial;background:none;opacity:1;border:0;margin:0;padding:0"><picture><source type="image/avif" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w.webp 1x, %E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w.webp 2x" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w.webp"><source type="image/webp" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w_002.webp 1x, %E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w_002.webp 2x" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w_002.webp"><img alt="《InsideUE4》UObject（十一）类型系统构造-构造绑定链接" decoding="async" style="position: absolute; inset: 0px; box-sizing: border-box; padding: 0px; border: medium; margin: auto; display: block; width: 0px; height: 0px; min-width: 100%; max-width: 100%; min-height: 100%; max-height: 100%;" width="100%" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w.jpg 1x, %E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9f219e0558772f16d5a91174bb750a60_1440w.jpg 2x"></picture></span></div></div></div><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">《InsideUE4》UObject（十一）类型系统构造-构造绑定链接</h1><div class="Post-Author"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><div class="AuthorInfo"><meta itemprop="name" content="大钊"><meta itemprop="image" content="https://pica.zhimg.com/v2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b"><meta itemprop="url" content="https://www.zhihu.com/people/fjz13"><meta itemprop="zhihu:followerCount"><span class="UserLink AuthorInfo-avatarWrapper"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/fjz13" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User"><img class="Avatar AuthorInfo-avatar css-1syywx2" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l.png 2x" alt="大钊"></a></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/fjz13" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User">大钊</a></div><a href="https://www.zhihu.com/kvip/purchase" rel="noopener noreferrer" class="css-2dtzk2">​<img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-57fe7feb4813331d5eca02ef731e12c9.png" alt="知乎知识会员" class="css-1m3x3v9"></a></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="ztext AuthorInfo-badgeText css-0">UE源码剖析，等编译的时候回答问题</div></div></div></div></div></div><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Plus FollowButton-icon" fill="currentColor"><path fill-rule="evenodd" d="M13.25 3.25a1.25 1.25 0 1 0-2.5 0v7.5h-7.5a1.25 1.25 0 1 0 0 2.5h7.5v7.5a1.25 1.25 0 1 0 2.5 0v-7.5h7.5a1.25 1.25 0 0 0 0-2.5h-7.5v-7.5Z" clip-rule="evenodd"></path></svg></span>关注他</button></div><div class="LabelContainer-wrapper"></div><div><div class="css-dvccr2"><div class="css-1lr85n">128 人赞同了该文章</div><svg width="14px" height="14px" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRight16 css-z4ujak" fill="currentColor"><path fill-rule="evenodd" d="M6.252 2.328a.75.75 0 0 1 1.04.213l3.334 5.05a.75.75 0 0 1 0 .826L7.292 13.46a.75.75 0 0 1-1.251-.828L9.1 8.004 6.04 3.367a.75.75 0 0 1 .212-1.039Z" clip-rule="evenodd"></path></svg></div></div><span class="css-z4ujak"></span></header><div class="Post-RichTextContainer"><div class="css-1od93p9"><div class="css-376mun"><div class="RichText ztext Post-RichText css-ob6uua" options="[object Object]"><blockquote data-first-child="" data-pid="a5BuCEI-"> 啊，你好长！</blockquote><ul><li data-pid="7epdm_9I"><a href="https://zhuanlan.zhihu.com/p/59553490#%E5%BC%95%E8%A8%80" class="internal" target="_blank" data-za-detail-view-id="1043">引言</a></li><li data-pid="jTUSMtDc"><a href="https://zhuanlan.zhihu.com/p/59553490#uenum" class="internal" target="_blank">UEnum</a></li><li data-pid="B77ce2fq"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#uscriptstruct" class="internal" target="_blank">UScriptStruct</a></li><ul><li data-pid="gFjux_2h"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#icppstructops%E7%9A%84%E4%BD%9C%E7%94%A8" class="internal" target="_blank">ICppStructOps的作用</a></li></ul><li data-pid="7JE30bdt"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#uclass" class="internal" target="_blank">UClass</a></li><li data-pid="KRffGcH0"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#upackage" class="internal" target="_blank">UPackage</a></li><li data-pid="u19dB5qC"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#uproperty" class="internal" target="_blank">UProperty</a></li><li data-pid="5vb5HmxF"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#ufunction" class="internal" target="_blank">UFunction</a></li><li data-pid="kaAFjVLu"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5" class="internal" target="_blank">绑定链接</a></li><ul><li data-pid="XB_M7eLY"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#bind" class="internal" target="_blank">Bind</a></li><li data-pid="UQ_bw7_j"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#link" class="internal" target="_blank">Link</a></li></ul><li data-pid="JkRuUQQv"><a href="https://zhuanlan.zhihu.com/p/59553490/edit#%E6%80%BB%E7%BB%93" class="internal" target="_blank">总结</a></li></ul><h2><b>引言</b></h2><p data-pid="AZv_KRzC">在上篇介绍了类型注册的最后阶段，为每一个enum、struct、class都进行了一次<span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=101363709&amp;content_type=Article&amp;match_order=1&amp;q=RegisterFn&amp;zhida_source=entity" target="_blank">RegisterFn<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>调用（忘了调用时机的请翻阅前文)，而这些RegisterFn其实都指向生成代码里的函数。本篇就来讲解这个里面的类型对象生成和构造。 按照生成顺序，也是调用顺序，一一讲解UEnum和UScriptStruct的生成，以及UClass的继续构造。 注意：</p><ol><li data-pid="hIf5ngFn">代码里去除掉HotReload和MetaData的部分（那只是给编辑器提供额外信息的）。</li><li data-pid="cxCgJxeU">代码里各Params的定义可到“代码生成重构”篇去查看，或者自己打开源码对照，都比较简单，就不列出来了。</li></ol><h2><b>UEnum</b></h2><p data-pid="56mmSAVR">先从软的开始捏，这是用来测试的MyEnum：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UENUM</span><span class="p">(</span><span class="n">Blueprintable</span><span class="p">,</span><span class="n">meta</span><span class="o">=</span><span class="p">(</span><span class="n">EnumDisplayNameFn</span><span class="o">=</span><span class="s">"GetMyEnumDisplayName"</span><span class="p">))</span>
<span class="k">enum</span> <span class="k">class</span> <span class="nc">MyEnum</span><span class="o">:</span><span class="n">uint8</span>
<span class="p">{</span>
    <span class="n">Dance</span>   <span class="nf">UMETA</span><span class="p">(</span><span class="n">DisplayName</span> <span class="o">=</span> <span class="s">"MyDance"</span><span class="p">),</span>
    <span class="n">Rain</span>    <span class="n">UMETA</span><span class="p">(</span><span class="n">DisplayName</span> <span class="o">=</span> <span class="s">"MyRain"</span><span class="p">),</span>
    <span class="n">Song</span>    <span class="n">UMETA</span><span class="p">(</span><span class="n">DisplayName</span> <span class="o">=</span> <span class="s">"MySong"</span><span class="p">)</span>
<span class="p">};</span>

<span class="n">FText</span> <span class="nf">GetMyEnumDisplayName</span><span class="p">(</span><span class="n">int32</span> <span class="n">val</span><span class="p">)</span>   <span class="c1">//可以提供一个自定义函数给枚举来额外显示
</span><span class="c1"></span><span class="p">{</span>
    <span class="n">MyEnum</span> <span class="n">enumValue</span> <span class="o">=</span> <span class="p">(</span><span class="n">MyEnum</span><span class="p">)</span><span class="n">val</span><span class="p">;</span>
    <span class="k">switch</span> <span class="p">(</span><span class="n">enumValue</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">case</span> <span class="n">MyEnum</span><span class="o">::</span><span class="nl">Dance</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">FText</span><span class="o">::</span><span class="n">FromString</span><span class="p">(</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"Hello_Dance"</span><span class="p">));</span>
    <span class="k">case</span> <span class="n">MyEnum</span><span class="o">::</span><span class="nl">Rain</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">FText</span><span class="o">::</span><span class="n">FromString</span><span class="p">(</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"Hello_Rain"</span><span class="p">));</span>
    <span class="k">case</span> <span class="n">MyEnum</span><span class="o">::</span><span class="nl">Song</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">FText</span><span class="o">::</span><span class="n">FromString</span><span class="p">(</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"Hello_Song"</span><span class="p">));</span>
    <span class="k">default</span><span class="o">:</span>
        <span class="k">return</span> <span class="n">FText</span><span class="o">::</span><span class="n">FromString</span><span class="p">(</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"Invalid MyEnum"</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="pw_vhF2L">生成代码的关键：</p><div class="highlight"><pre><code class="language-cpp"><span class="k">static</span> <span class="n">UEnum</span><span class="o">*</span> <span class="nf">MyEnum_StaticEnum</span><span class="p">()</span>   <span class="c1">//RegisterFn指向该函数
</span><span class="c1"></span><span class="p">{</span>
    <span class="k">static</span> <span class="n">UEnum</span><span class="o">*</span> <span class="n">Singleton</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">Singleton</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Singleton</span> <span class="o">=</span> <span class="n">GetStaticEnum</span><span class="p">(</span><span class="n">Z_Construct_UEnum_Hello_MyEnum</span><span class="p">,</span> <span class="n">Z_Construct_UPackage__Script_Hello</span><span class="p">(),</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"MyEnum"</span><span class="p">));</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">Singleton</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">static</span> <span class="n">FCompiledInDeferEnum</span> <span class="nf">Z_CompiledInDeferEnum_UEnum_MyEnum</span><span class="p">(</span><span class="n">MyEnum_StaticEnum</span><span class="p">,</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"/Script/Hello"</span><span class="p">),</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"MyEnum"</span><span class="p">),</span> <span class="nb">false</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">);</span>    <span class="c1">//收集点
</span><span class="c1"></span>
<span class="n">UEnum</span><span class="o">*</span> <span class="nf">Z_Construct_UEnum_Hello_MyEnum</span><span class="p">()</span> <span class="c1">//实际调用点
</span><span class="c1"></span><span class="p">{</span>
    <span class="k">static</span> <span class="n">UEnum</span><span class="o">*</span> <span class="n">ReturnEnum</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ReturnEnum</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FEnumeratorParam</span> <span class="n">Enumerators</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
            <span class="p">{</span> <span class="s">"MyEnum::Dance"</span><span class="p">,</span> <span class="p">(</span><span class="n">int64</span><span class="p">)</span><span class="n">MyEnum</span><span class="o">::</span><span class="n">Dance</span> <span class="p">},</span> <span class="c1">//注意枚举项的名字是以"枚举::"开头的
</span><span class="c1"></span>            <span class="p">{</span> <span class="s">"MyEnum::Rain"</span><span class="p">,</span> <span class="p">(</span><span class="n">int64</span><span class="p">)</span><span class="n">MyEnum</span><span class="o">::</span><span class="n">Rain</span> <span class="p">},</span>
            <span class="p">{</span> <span class="s">"MyEnum::Song"</span><span class="p">,</span> <span class="p">(</span><span class="n">int64</span><span class="p">)</span><span class="n">MyEnum</span><span class="o">::</span><span class="n">Song</span> <span class="p">},</span>
        <span class="p">};</span>

        <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FEnumParams</span> <span class="n">EnumParams</span> <span class="o">=</span> <span class="p">{</span>
            <span class="p">(</span><span class="n">UObject</span><span class="o">*</span><span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="n">Z_Construct_UPackage__Script_Hello</span><span class="p">,</span>
            <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">EDynamicType</span><span class="o">::</span><span class="n">NotDynamic</span><span class="p">,</span>
            <span class="s">"MyEnum"</span><span class="p">,</span>
            <span class="n">RF_Public</span><span class="o">|</span><span class="n">RF_Transient</span><span class="o">|</span><span class="n">RF_MarkAsNative</span><span class="p">,</span>
            <span class="n">GetMyEnumDisplayName</span><span class="p">,</span><span class="c1">//一般为nullptr，我们自定义了一个，所以这里才有
</span><span class="c1"></span>            <span class="p">(</span><span class="n">uint8</span><span class="p">)</span><span class="n">UEnum</span><span class="o">::</span><span class="n">ECppForm</span><span class="o">::</span><span class="n">EnumClass</span><span class="p">,</span>
            <span class="s">"MyEnum"</span><span class="p">,</span>
            <span class="n">Enumerators</span><span class="p">,</span>
            <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">Enumerators</span><span class="p">),</span>
            <span class="n">METADATA_PARAMS</span><span class="p">(</span><span class="n">Enum_MetaDataParams</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">Enum_MetaDataParams</span><span class="p">))</span>
        <span class="p">};</span>
        <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">ConstructUEnum</span><span class="p">(</span><span class="n">ReturnEnum</span><span class="p">,</span> <span class="n">EnumParams</span><span class="p">);</span><span class="c1">//最终生成点
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ReturnEnum</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p data-pid="CSSjlXOK">生成代码里的收集点，把MyEnum_StaticEnum注册
给了RegisterFn。调用的时候，内部的GetStaticEnum会调用参赛里的
Z_Construct_UEnum_Hello_MyEnum。而Z_Construct_UEnum_Hello_MyEnum内部其实比较简单，定
义了枚举项参数和枚举参数，最终发给UE4CodeGen_Private::ConstructUEnum调用。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="nf">ConstructUEnum</span><span class="p">(</span><span class="n">UEnum</span><span class="o">*&amp;</span> <span class="n">OutEnum</span><span class="p">,</span> <span class="k">const</span> <span class="n">FEnumParams</span><span class="o">&amp;</span> <span class="n">Params</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="n">OuterFunc</span><span class="p">)()</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">OuterFunc</span><span class="p">;</span>
    <span class="n">UObject</span><span class="o">*</span> <span class="n">Outer</span> <span class="o">=</span> <span class="n">OuterFunc</span> <span class="o">?</span> <span class="n">OuterFunc</span><span class="p">()</span> <span class="o">:</span> <span class="k">nullptr</span><span class="p">;</span> <span class="c1">//先确保创建Outer
</span><span class="c1"></span>    <span class="k">if</span> <span class="p">(</span><span class="n">OutEnum</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span><span class="p">;}</span>  <span class="c1">//防止重复构造
</span><span class="c1"></span>
    <span class="n">UEnum</span><span class="o">*</span> <span class="n">NewEnum</span> <span class="o">=</span> <span class="k">new</span> <span class="p">(</span><span class="n">EC_InternalUseOnlyConstructor</span><span class="p">,</span> <span class="n">Outer</span><span class="p">,</span> <span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NameUTF8</span><span class="p">),</span> <span class="n">Params</span><span class="p">.</span><span class="n">ObjectFlags</span><span class="p">)</span> <span class="n">UEnum</span><span class="p">(</span><span class="n">FObjectInitializer</span><span class="p">());</span>    <span class="c1">//创建一个UEnum
</span><span class="c1"></span>    <span class="n">OutEnum</span> <span class="o">=</span> <span class="n">NewEnum</span><span class="p">;</span>

    <span class="c1">//生成枚举名字值对数组
</span><span class="c1"></span>    <span class="n">TArray</span><span class="o">&lt;</span><span class="n">TPair</span><span class="o">&lt;</span><span class="n">FName</span><span class="p">,</span> <span class="n">int64</span><span class="o">&gt;&gt;</span> <span class="n">EnumNames</span><span class="p">;</span>
    <span class="n">EnumNames</span><span class="p">.</span><span class="n">Reserve</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NumEnumerators</span><span class="p">);</span>
    <span class="k">for</span> <span class="p">(</span><span class="k">const</span> <span class="n">FEnumeratorParam</span><span class="o">*</span> <span class="n">Enumerator</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">EnumeratorParams</span><span class="p">,</span> <span class="o">*</span><span class="n">EnumeratorEnd</span> <span class="o">=</span> <span class="n">Enumerator</span> <span class="o">+</span> <span class="n">Params</span><span class="p">.</span><span class="n">NumEnumerators</span><span class="p">;</span> <span class="n">Enumerator</span> <span class="o">!=</span> <span class="n">EnumeratorEnd</span><span class="p">;</span> <span class="o">++</span><span class="n">Enumerator</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">EnumNames</span><span class="p">.</span><span class="n">Emplace</span><span class="p">(</span><span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Enumerator</span><span class="o">-&gt;</span><span class="n">NameUTF8</span><span class="p">),</span> <span class="n">Enumerator</span><span class="o">-&gt;</span><span class="n">Value</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="c1">//设置枚举项数组
</span><span class="c1"></span>    <span class="n">NewEnum</span><span class="o">-&gt;</span><span class="n">SetEnums</span><span class="p">(</span><span class="n">EnumNames</span><span class="p">,</span> <span class="p">(</span><span class="n">UEnum</span><span class="o">::</span><span class="n">ECppForm</span><span class="p">)</span><span class="n">Params</span><span class="p">.</span><span class="n">CppForm</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">DynamicType</span> <span class="o">==</span> <span class="n">EDynamicType</span><span class="o">::</span><span class="n">NotDynamic</span><span class="p">);</span>
    <span class="n">NewEnum</span><span class="o">-&gt;</span><span class="n">CppType</span> <span class="o">=</span> <span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">CppTypeUTF8</span><span class="p">);</span>  <span class="c1">//cpp名字
</span><span class="c1"></span>
    <span class="k">if</span> <span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">DisplayNameFunc</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">NewEnum</span><span class="o">-&gt;</span><span class="n">SetEnumDisplayNameFn</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">DisplayNameFunc</span><span class="p">);</span>  <span class="c1">//设置自定义显示名字回调
</span><span class="c1"></span>    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="bLWEgdBW">基本上代码都是不言自明的，只有两处需要注意：一是OuterFunc()的调用是用来先确保外界所属于的UPackage存在。二是UEnum的构造，源码里用了重载new的方式，注意不是placement new。这个new的方式定义在<code>DECLARE_CLASS</code>宏中：</p><div class="highlight"><pre><code class="language-cpp"><span class="cm">/** For internal use only; use StaticConstructObject() to create new objects. */</span> 
<span class="kr">inline</span> <span class="kt">void</span><span class="o">*</span> <span class="k">operator</span> <span class="nf">new</span><span class="p">(</span><span class="k">const</span> <span class="n">size_t</span> <span class="n">InSize</span><span class="p">,</span> <span class="n">EInternal</span> <span class="n">InInternalOnly</span><span class="p">,</span> <span class="n">UObject</span><span class="o">*</span> <span class="n">InOuter</span> <span class="o">=</span> <span class="p">(</span><span class="n">UObject</span><span class="o">*</span><span class="p">)</span><span class="n">GetTransientPackage</span><span class="p">(),</span> <span class="n">FName</span> <span class="n">InName</span> <span class="o">=</span> <span class="n">NAME_None</span><span class="p">,</span> <span class="n">EObjectFlags</span> <span class="n">InSetFlags</span> <span class="o">=</span> <span class="n">RF_NoFlags</span><span class="p">)</span> 
<span class="p">{</span> 
    <span class="k">return</span> <span class="n">StaticAllocateObject</span><span class="p">(</span><span class="n">StaticClass</span><span class="p">(),</span> <span class="n">InOuter</span><span class="p">,</span> <span class="n">InName</span><span class="p">,</span> <span class="n">InSetFlags</span><span class="p">);</span> 
<span class="p">}</span> 
<span class="cm">/** For internal use only; use StaticConstructObject() to create new objects. */</span> 
<span class="kr">inline</span> <span class="kt">void</span><span class="o">*</span> <span class="k">operator</span> <span class="nf">new</span><span class="p">(</span> <span class="k">const</span> <span class="n">size_t</span> <span class="n">InSize</span><span class="p">,</span> <span class="n">EInternal</span><span class="o">*</span> <span class="n">InMem</span> <span class="p">)</span> 
<span class="p">{</span> 
    <span class="k">return</span> <span class="p">(</span><span class="kt">void</span><span class="o">*</span><span class="p">)</span><span class="n">InMem</span><span class="p">;</span> 
<span class="p">}</span>
</code></pre></div><p data-pid="Rpdk7bEQ">所以是会先触发StaticAllocateObject来分配出一块对象内存（简易初始化过的，后续对象分配章节再讲解），接着才会调用UEnum的构造函数，在构造完毕后再往里面填充枚举项。</p><p data-pid="6rrzUnrM"><b>思考：为什么不用我们常用的NewObject来创建UEnum呢？</b> </p><p data-pid="nQSiLOIE">实际上，这里如果换成<code>UEnum* NewEnum= NewObject&lt; UEnum&gt;(Outer, UTF8_TO_TCHAR(Params.NameUTF8), Params.ObjectFlags);</code>也是可行的。那么这二者差在哪呢？微乎其微。二者的流程大体都是一样的，只差在FObjectInitializer的值不一样，new构造会调用<code>FObjectInitializer()</code>默认构造函数，而NewObject会调用<code>FObjectInitializer(Result, InTemplate, bCopyTransientsFromClassDefaults, true, InInstanceGraph)</code>。其中差在第4个参数<code>bShouldInitializePropsFromArchetype</code>，前者默认为=false，会略过构造过程中的UClass里属性值初始化的过程。因为enum里也没有属性，所以略过该过程会稍微提高点性能，但也微乎其微啦。</p><p data-pid="k2eAl7HX">继续往里面看下SetEnums</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">bool</span> <span class="n">UEnum</span><span class="o">::</span><span class="n">SetEnums</span><span class="p">(</span><span class="n">TArray</span><span class="o">&lt;</span><span class="n">TPair</span><span class="o">&lt;</span><span class="n">FName</span><span class="p">,</span> <span class="n">int64</span><span class="o">&gt;&gt;&amp;</span> <span class="n">InNames</span><span class="p">,</span> <span class="n">UEnum</span><span class="o">::</span><span class="n">ECppForm</span> <span class="n">InCppForm</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bAddMaxKeyIfMissing</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">Names</span><span class="p">.</span><span class="n">Num</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">RemoveNamesFromMasterList</span><span class="p">();</span>   <span class="c1">//去除之前的名字
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="n">Names</span>   <span class="o">=</span> <span class="n">InNames</span><span class="p">;</span>
    <span class="n">CppForm</span> <span class="o">=</span> <span class="n">InCppForm</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">bAddMaxKeyIfMissing</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ContainsExistingMax</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="n">FName</span> <span class="n">MaxEnumItem</span> <span class="o">=</span> <span class="o">*</span><span class="n">GenerateFullEnumName</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">GenerateEnumPrefix</span><span class="p">()</span> <span class="o">+</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"_MAX"</span><span class="p">)));</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">LookupEnumName</span><span class="p">(</span><span class="n">MaxEnumItem</span><span class="p">)</span> <span class="o">!=</span> <span class="n">INDEX_NONE</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="c1">// the MAX identifier is already being used by another enum
</span><span class="c1"></span>                <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">Names</span><span class="p">.</span><span class="n">Emplace</span><span class="p">(</span><span class="n">MaxEnumItem</span><span class="p">,</span> <span class="n">GetMaxEnumValue</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">AddNamesToMasterList</span><span class="p">();</span>
    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p data-pid="5v5GaMQ1">代码也很简单，enum就是简单呀。有两个操作比较重要：</p><ol><li data-pid="w4_Z9kTv">RemoveNamesFromMasterList和AddNamesToMasterList一起维护UEnum里的<code>static TMap&lt;FName, UEnum*&gt; AllEnumNames;</code>，该数据结构可以允许我们通过一个枚举项名字来搜索到枚举类型。比如通过"MyEnum::Dance"用LookupEnumName来返回枚举的UEnum*。</li><li data-pid="gizjSTTY">bAddMaxKeyIfMissing在native的情况下为true，所以在C++里定义的枚举，其实是会自动添加一项形如<code>MyEnum::MyEnum_MAX=最大值+1</code>，方便蓝图中使用。</li></ol><p data-pid="Z7GX0TNN">然后就enum就结束啦！</p><h2><b>UScriptStruct</b></h2><p data-pid="cN4ELK8C">依然来先看下结构的测试代码：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">USTRUCT</span><span class="p">(</span><span class="n">BlueprintType</span><span class="p">)</span>
<span class="k">struct</span> <span class="nc">HELLO_API</span> <span class="n">FMyStruct</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">BlueprintReadWrite</span><span class="p">)</span>
    <span class="kt">float</span> <span class="n">Score</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div><p data-pid="MFrq6P6S">UE里的结构不可继承自c++ struct，但可以继承自USTRUCT标记的struct，里面也不可以添加UFUNCTION。以上的测试代码非常简单，生成代码(为了可读性进行了一些排版调整)：</p><div class="highlight"><pre><code class="language-cpp"><span class="k">class</span> <span class="nc">UScriptStruct</span><span class="o">*</span> <span class="n">FMyStruct</span><span class="o">::</span><span class="n">StaticStruct</span><span class="p">()</span>  <span class="c1">//RegisterFn指向该函数
</span><span class="c1"></span><span class="p">{</span>
    <span class="k">static</span> <span class="k">class</span> <span class="nc">UScriptStruct</span><span class="o">*</span> <span class="n">Singleton</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">Singleton</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Singleton</span> <span class="o">=</span> <span class="n">GetStaticStruct</span><span class="p">(</span><span class="n">Z_Construct_UScriptStruct_FMyStruct</span><span class="p">,</span> <span class="n">Z_Construct_UPackage__Script_Hello</span><span class="p">(),</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"MyStruct"</span><span class="p">),</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">FMyStruct</span><span class="p">),</span> <span class="n">Get_Z_Construct_UScriptStruct_FMyStruct_CRC</span><span class="p">());</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">Singleton</span><span class="p">;</span>
<span class="p">}</span>

<span class="k">static</span> <span class="n">FCompiledInDeferStruct</span> <span class="nf">Z_CompiledInDeferStruct_UScriptStruct_FMyStruct</span><span class="p">(</span><span class="n">FMyStruct</span><span class="o">::</span><span class="n">StaticStruct</span><span class="p">,</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"/Script/Hello"</span><span class="p">),</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"MyStruct"</span><span class="p">),</span> <span class="nb">false</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">);</span>     <span class="c1">//收集点
</span><span class="c1"></span>
<span class="k">static</span> <span class="k">struct</span> <span class="nc">FScriptStruct_Hello_StaticRegisterNativesFMyStruct</span>
<span class="p">{</span>
    <span class="n">FScriptStruct_Hello_StaticRegisterNativesFMyStruct</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="n">UScriptStruct</span><span class="o">::</span><span class="n">DeferCppStructOps</span><span class="p">(</span><span class="n">FName</span><span class="p">(</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"MyStruct"</span><span class="p">)),</span><span class="k">new</span> <span class="n">UScriptStruct</span><span class="o">::</span><span class="n">TCppStructOps</span><span class="o">&lt;</span><span class="n">FMyStruct</span><span class="o">&gt;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span> <span class="n">ScriptStruct_Hello_StaticRegisterNativesFMyStruct</span><span class="p">;</span> <span class="c1">//收集点
</span><span class="c1"></span>
<span class="k">struct</span> <span class="nc">Z_Construct_UScriptStruct_FMyStruct_Statics</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="kt">void</span><span class="o">*</span> <span class="nf">NewStructOps</span><span class="p">()</span> <span class="c1">//创建结构操作辅助类
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">UScriptStruct</span><span class="o">::</span><span class="n">ICppStructOps</span><span class="o">*</span><span class="p">)</span><span class="k">new</span> <span class="n">UScriptStruct</span><span class="o">::</span><span class="n">TCppStructOps</span><span class="o">&lt;</span><span class="n">FMyStruct</span><span class="o">&gt;</span><span class="p">();</span>
    <span class="p">}</span>
    <span class="c1">//属性参数...
</span><span class="c1"></span>    <span class="c1">//结构参数
</span><span class="c1"></span>    <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FStructParams</span> <span class="n">ReturnStructParams</span><span class="o">=</span> 
    <span class="p">{</span>
        <span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="n">Z_Construct_UPackage__Script_Hello</span><span class="p">,</span><span class="c1">//Outer
</span><span class="c1"></span>        <span class="k">nullptr</span><span class="p">,</span>    <span class="c1">//构造基类的函数指针
</span><span class="c1"></span>        <span class="o">&amp;</span><span class="n">NewStructOps</span><span class="p">,</span><span class="c1">//构造结构操作类的函数指针
</span><span class="c1"></span>        <span class="s">"MyStruct"</span><span class="p">,</span><span class="c1">//结构名字
</span><span class="c1"></span>        <span class="n">RF_Public</span><span class="o">|</span><span class="n">RF_Transient</span><span class="o">|</span><span class="n">RF_MarkAsNative</span><span class="p">,</span> <span class="c1">//对象标记
</span><span class="c1"></span>        <span class="n">EStructFlags</span><span class="p">(</span><span class="mh">0x00000201</span><span class="p">),</span>   <span class="c1">//结构标记
</span><span class="c1"></span>        <span class="k">sizeof</span><span class="p">(</span><span class="n">FMyStruct</span><span class="p">),</span><span class="c1">//结构大小
</span><span class="c1"></span>        <span class="k">alignof</span><span class="p">(</span><span class="n">FMyStruct</span><span class="p">),</span> <span class="c1">//结构内存对齐
</span><span class="c1"></span>        <span class="n">PropPointers</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">PropPointers</span><span class="p">)</span> <span class="c1">//属性列表
</span><span class="c1"></span>    <span class="p">};</span>
<span class="p">};</span>

<span class="n">UScriptStruct</span><span class="o">*</span> <span class="nf">Z_Construct_UScriptStruct_FMyStruct</span><span class="p">()</span> <span class="c1">//真正的构造实现
</span><span class="c1"></span><span class="p">{</span>
    <span class="k">static</span> <span class="n">UScriptStruct</span><span class="o">*</span> <span class="n">ReturnStruct</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ReturnStruct</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">ConstructUScriptStruct</span><span class="p">(</span><span class="n">ReturnStruct</span><span class="p">,</span> <span class="n">Z_Construct_UScriptStruct_FMyStruct_Statics</span><span class="o">::</span><span class="n">ReturnStructParams</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ReturnStruct</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p data-pid="a8KIn4ls">同Enum的套路一样，RegisterFn指向<code>FMyStruct::StaticStruct()</code>函数，其内部会继续调用<code>Z_Construct_UScriptStruct_FMyStruct</code>。最终还是用<code>ConstructUScriptStruct</code>来通过参数生成UScriptStruct。而那些参数我在代码里的注释一看也都明白，结构套结构而已。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="nf">ConstructUScriptStruct</span><span class="p">(</span><span class="n">UScriptStruct</span><span class="o">*&amp;</span> <span class="n">OutStruct</span><span class="p">,</span> <span class="k">const</span> <span class="n">FStructParams</span><span class="o">&amp;</span> <span class="n">Params</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">UObject</span><span class="o">*</span> <span class="n">Outer</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">OuterFunc</span> <span class="o">?</span> <span class="n">Params</span><span class="p">.</span><span class="n">OuterFunc</span><span class="p">()</span> <span class="o">:</span> <span class="k">nullptr</span><span class="p">;</span><span class="c1">//构造Outer
</span><span class="c1"></span>    <span class="n">UScriptStruct</span><span class="o">*</span> <span class="n">Super</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">SuperFunc</span> <span class="o">?</span> <span class="n">Params</span><span class="p">.</span><span class="n">SuperFunc</span><span class="p">()</span> <span class="o">:</span> <span class="k">nullptr</span><span class="p">;</span><span class="c1">//构造SuperStruct
</span><span class="c1"></span>    <span class="n">UScriptStruct</span><span class="o">::</span><span class="n">ICppStructOps</span><span class="o">*</span> <span class="n">StructOps</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">StructOpsFunc</span> <span class="o">?</span> <span class="n">Params</span><span class="p">.</span><span class="n">StructOpsFunc</span><span class="p">()</span> <span class="o">:</span> <span class="k">nullptr</span><span class="p">;</span><span class="c1">//构造结构操作类
</span><span class="c1"></span>
    <span class="k">if</span> <span class="p">(</span><span class="n">OutStruct</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span><span class="p">;}</span>
    <span class="c1">//构造UScriptStruct
</span><span class="c1"></span>    <span class="n">UScriptStruct</span><span class="o">*</span> <span class="n">NewStruct</span> <span class="o">=</span> <span class="k">new</span><span class="p">(</span><span class="n">EC_InternalUseOnlyConstructor</span><span class="p">,</span> <span class="n">Outer</span><span class="p">,</span> <span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NameUTF8</span><span class="p">),</span> <span class="n">Params</span><span class="p">.</span><span class="n">ObjectFlags</span><span class="p">)</span> <span class="n">UScriptStruct</span><span class="p">(</span><span class="n">FObjectInitializer</span><span class="p">(),</span> <span class="n">Super</span><span class="p">,</span> <span class="n">StructOps</span><span class="p">,</span> <span class="p">(</span><span class="n">EStructFlags</span><span class="p">)</span><span class="n">Params</span><span class="p">.</span><span class="n">StructFlags</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">SizeOf</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">AlignOf</span><span class="p">);</span>
    <span class="n">OutStruct</span> <span class="o">=</span> <span class="n">NewStruct</span><span class="p">;</span>
    <span class="c1">//构造属性集合
</span><span class="c1"></span>    <span class="n">ConstructUProperties</span><span class="p">(</span><span class="n">NewStruct</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">PropertyArray</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">NumProperties</span><span class="p">);</span>
    <span class="c1">//链接
</span><span class="c1"></span>    <span class="n">NewStruct</span><span class="o">-&gt;</span><span class="n">StaticLink</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div><p data-pid="xcEYfljS">和UEnum一样的模式调用，先依次构造出依赖的Outer、Super和CppStructOps。然后依然是overload new构造出UScriptStruct。但是UScriptStruct的构造函数里多了一步调用<code>PrepareCppStructOps</code>（比较简单提一下，主要是从CppStructOps提出特征然后存在StructFlags里）。 接着的<code>ConstructUProperties</code>是个从属性参数数组里构造出UProperty*数组，在后面构造UClass*的时候也会复用调用到。因此留待后文一起讲解。 所有复合类型（继承于UStruct）都会接着调用<code>StaticLink</code>来链接子属性。关于Link的作用在后文讲解。</p><h2><b>ICppStructOps的作用</b></h2><p data-pid="7UWnhOKD">很
多朋友在看源码的时候，可能会对UScriptStruct里定义的ICppStructOps类以及模板子类
TCppStructOps&lt;CPPSTRUCT&gt;感到疑惑。其实它们是C++的一种常见的架构模式，用一个虚函数基类定义一些公共操作，再
用一个具体模板子类来实现，从而既可以保存类型，又可以有公共操作接口。</p><p data-pid="eMPZLgZS">针对于UE4这里来说，
ICppStructOps就定义了这个结构的一些公共操作。而探测这个C++结构的一些特性就交给了
TCppStructOps&lt;CPPSTRUCT&gt;类里的TStructOpsTypeTraits&lt;CPPSTRUCT&gt;。一
些C++结构的信息不能通过模板探测出来的，就需要我们手动标记提供了，所以具体的代码是：</p><div class="highlight"><pre><code class="language-cpp"><span class="k">template</span> <span class="o">&lt;</span><span class="k">class</span> <span class="nc">CPPSTRUCT</span><span class="o">&gt;</span>
<span class="k">struct</span> <span class="nc">TStructOpsTypeTraitsBase2</span>
<span class="p">{</span>
    <span class="k">enum</span>
    <span class="p">{</span>
        <span class="n">WithZeroConstructor</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 0构造，内存清零后就可以了，说明这个结构的默认值就是0
</span><span class="c1"></span>        <span class="n">WithNoInitConstructor</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有个ForceInit的参数的构造，用来专门构造出0值结构来
</span><span class="c1"></span>        <span class="n">WithNoDestructor</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 是否没有结构有自定义的析构函数， 如果没有析构的话，DestroyStruct里面就可以省略调用析构函数了。默认是有的。结构如果是pod类型，则肯定没有析构。
</span><span class="c1"></span>        <span class="n">WithCopy</span> <span class="o">=</span> <span class="o">!</span><span class="n">TIsPODType</span><span class="o">&lt;</span><span class="n">CPPSTRUCT</span><span class="o">&gt;::</span><span class="n">Value</span><span class="p">,</span> <span class="c1">// 是否结构有自定义的=赋值函数。如果没有的话，在CopyScriptStruct的时候就只需要拷贝内存就可以了
</span><span class="c1"></span>        <span class="n">WithIdenticalViaEquality</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 用==来比较结构
</span><span class="c1"></span>        <span class="n">WithIdentical</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个自定义的Identical函数来专门用来比较，和WithIdenticalViaEquality互斥
</span><span class="c1"></span>        <span class="n">WithExportTextItem</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个ExportTextItem函数来把结构值导出为字符串
</span><span class="c1"></span>        <span class="n">WithImportTextItem</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个ImportTextItem函数把字符串导进结构值
</span><span class="c1"></span>        <span class="n">WithAddStructReferencedObjects</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个AddStructReferencedObjects函数用来添加结构额外的引用对象
</span><span class="c1"></span>        <span class="n">WithSerializer</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个Serialize函数用来序列化
</span><span class="c1"></span>        <span class="n">WithStructuredSerializer</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个结构结构Serialize函数用来序列化
</span><span class="c1"></span>        <span class="n">WithPostSerialize</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个PostSerialize回调用来在序列化后调用
</span><span class="c1"></span>        <span class="n">WithNetSerializer</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个NetSerialize函数用来在网络复制中序列化
</span><span class="c1"></span>        <span class="n">WithNetDeltaSerializer</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个NetDeltaSerialize函数用来在之前NetSerialize的基础上只序列化出差异来，一般用在TArray属性上进行优化
</span><span class="c1"></span>        <span class="n">WithSerializeFromMismatchedTag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 有一个SerializeFromMismatchedTag函数用来处理属性tag未匹配到的属性值，一般是在结构进行升级后，但值还是原来的值，这个时候用来把旧值升级到新结构时使用
</span><span class="c1"></span>        <span class="n">WithStructuredSerializeFromMismatchedTag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// SerializeFromMismatchedTag的结构版本
</span><span class="c1"></span>        <span class="n">WithPostScriptConstruct</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span><span class="c1">// 有一个PostScriptConstruct函数用在蓝图构造脚本后调用
</span><span class="c1"></span>        <span class="n">WithNetSharedSerialization</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="c1">// 指明结构的NetSerialize函数不需要用到UPackageMap
</span><span class="c1"></span>    <span class="p">};</span>
<span class="p">};</span>
<span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">CPPSTRUCT</span><span class="o">&gt;</span>
<span class="k">struct</span> <span class="nc">TStructOpsTypeTraits</span> <span class="o">:</span> <span class="k">public</span> <span class="n">TStructOpsTypeTraitsBase2</span><span class="o">&lt;</span><span class="n">CPPSTRUCT</span><span class="o">&gt;</span>
<span class="p">{</span>
<span class="p">};</span>
</code></pre></div><p data-pid="W_2tKfjl">这些枚举值定义了一个结构的特性，我已经在源码里一一解释了。 说回ICppStructOps里的接口，内部实现大部分都是通过TStructOpsTypeTraits&lt;CPPSTRUCT&gt;的结构来分别调用不同版本的函数。结构的操作可以分为：</p><ul><li data-pid="lHbPAPtg">构造：HasNoopConstructor、HasZeroConstructor、Construct、HasPostScriptConstruct、PostScriptConstruct、IsAbstract</li><li data-pid="J10Y6_UQ">析构：HasDestructor、Destruct</li><li data-pid="TDwt1JNR">拷贝：IsPlainOldData、HasCopy、Copy</li><li data-pid="QkqpXiG9">比较：HasIdentical、Identical</li><li data-pid="tL2YdwOu">导入导出：HasExportTextItem、ExportTextItem、HasImportTextItem、ImportTextItem</li><li data-pid="besOSZCU">GC：HasAddStructReferencedObjects、AddStructReferencedObjects</li><li data-pid="YjaxrYDB">序
列化：HasSerializer、HasStructuredSerializer、Serialize、HasPostSerialize、
PostSerialize、HasNetSerializer、HasNetSharedSerialization、NetSerialize、
HasNetDeltaSerializer、NetDeltaSerialize、HasSerializeFromMismatchedTag、
HasStructuredSerializeFromMismatchedTag、SerializeFromMismatchedTag、
StructuredSerializeFromMismatchedTag</li></ul><p data-pid="lcKzjt1V">有了
ICppStructOps的公共接口，和上面特化的信息，UE4在内部对结构进行构造析构或序列化的时候，就可以选择最优的步骤(比如拷贝的时候只需要
直接拷贝内存而不需要调用赋值函数)，在GC的时候，也可以告诉UE4这个结构内部有可能有额外的UObject*对象。从而让UE4实现对该结构实现出
更高的性能。</p><p data-pid="2Eu7W7F7">比如对于常见的FVector来说，源码里就定义了这么一个特化来描述其特性：</p><div class="highlight"><pre><code class="language-cpp"><span class="k">template</span><span class="o">&lt;&gt;</span>
<span class="k">struct</span> <span class="nc">TStructOpsTypeTraits</span><span class="o">&lt;</span><span class="n">FVector</span><span class="o">&gt;</span> <span class="o">:</span> <span class="k">public</span> <span class="n">TStructOpsTypeTraitsBase2</span><span class="o">&lt;</span><span class="n">FVector</span><span class="o">&gt;</span>
<span class="p">{</span>
    <span class="k">enum</span> 
    <span class="p">{</span>
        <span class="n">WithNoInitConstructor</span> <span class="o">=</span> <span class="nb">true</span><span class="p">,</span>
        <span class="n">WithZeroConstructor</span> <span class="o">=</span> <span class="nb">true</span><span class="p">,</span>
        <span class="n">WithNetSerializer</span> <span class="o">=</span> <span class="nb">true</span><span class="p">,</span>
        <span class="n">WithNetSharedSerialization</span> <span class="o">=</span> <span class="nb">true</span><span class="p">,</span>
        <span class="n">WithSerializer</span> <span class="o">=</span> <span class="nb">true</span><span class="p">,</span>
    <span class="p">};</span>
<span class="p">};</span>
</code></pre></div><p data-pid="JXQNuTLx">一看我们就知道FVector有个0值构造函数，和有Serializer函数。对于我们自己定义的UStruct，如果有需要，也可以定义这么一个模板特化，来更详细的提供结构信息。</p><h2><b>UClass</b></h2><p data-pid="e7wPm9pD">接着是我们自己最常用的Class和Interface，一起梭哈一把：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UINTERFACE</span><span class="p">(</span><span class="n">BlueprintType</span><span class="p">,</span> <span class="n">Blueprintable</span><span class="p">)</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyInterface</span><span class="p">:</span><span class="k">public</span> <span class="n">UInterface</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="p">};</span>
<span class="k">class</span> <span class="nc">IMyInterface</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">,</span> <span class="n">BlueprintNativeEvent</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">NativeInterfaceFunc</span><span class="p">();</span>

    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">,</span> <span class="n">BlueprintImplementableEvent</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">ImplementableInterfaceFunc</span><span class="p">();</span>
<span class="p">};</span>

<span class="n">UCLASS</span><span class="p">(</span><span class="n">BlueprintType</span><span class="p">,</span> <span class="n">Blueprintable</span><span class="p">)</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyClass</span> <span class="p">:</span><span class="k">public</span> <span class="n">UObject</span><span class="p">,</span> <span class="k">public</span> <span class="n">IMyInterface</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">BlueprintReadWrite</span><span class="p">)</span>
        <span class="kt">float</span> <span class="n">Score</span><span class="p">;</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">,</span> <span class="n">Category</span> <span class="o">=</span> <span class="s">"Hello"</span><span class="p">)</span>
        <span class="n">int32</span> <span class="n">Func</span><span class="p">(</span><span class="kt">float</span> <span class="n">param1</span><span class="p">);</span>    <span class="c1">//C++实现，蓝图调用
</span><span class="c1"></span>
    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintNativeEvent</span><span class="p">,</span> <span class="n">Category</span> <span class="o">=</span> <span class="s">"Hello"</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">NativeFunc</span><span class="p">();</span>  <span class="c1">//C++实现默认版本，蓝图可重载实现
</span><span class="c1"></span>
    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintImplementableEvent</span><span class="p">,</span> <span class="n">Category</span> <span class="o">=</span> <span class="s">"Hello"</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">ImplementableFunc</span><span class="p">();</span>   <span class="c1">//C++不实现，蓝图实现
</span><span class="c1"></span><span class="p">};</span>
</code></pre></div><p data-pid="yacQYMjq">生成的代码的关键部分（做了些排版调整）：</p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//函数参数...
</span><span class="c1"></span><span class="k">struct</span> <span class="nc">Z_Construct_UClass_UMyClass_Statics</span>
<span class="p">{</span>
    <span class="c1">//依赖项列表
</span><span class="c1"></span>    <span class="k">static</span> <span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="k">const</span> <span class="n">DependentSingletons</span><span class="p">[])()</span><span class="o">=</span>
    <span class="p">{</span>
        <span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="n">Z_Construct_UClass_UObject</span><span class="p">,</span><span class="c1">//依赖基类UObject
</span><span class="c1"></span>        <span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="n">Z_Construct_UPackage__Script_Hello</span><span class="p">,</span><span class="c1">//依赖所属于的Hello模块
</span><span class="c1"></span>    <span class="p">};</span>
    <span class="c1">//属性参数...
</span><span class="c1"></span>    <span class="c1">//函数参数...
</span><span class="c1"></span>    <span class="c1">//接口
</span><span class="c1"></span>    <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FImplementedInterfaceParams</span> <span class="n">InterfaceParams</span><span class="p">[]</span><span class="o">=</span> 
    <span class="p">{</span>
        <span class="p">{</span>
            <span class="n">Z_Construct_UClass_UMyInterface_NoRegister</span><span class="p">,</span><span class="c1">//构造UMyInterface所属的UClass*函数指针
</span><span class="c1"></span>            <span class="p">(</span><span class="n">int32</span><span class="p">)</span><span class="n">VTABLE_OFFSET</span><span class="p">(</span><span class="n">UMyClass</span><span class="p">,</span> <span class="n">IMyInterface</span><span class="p">),</span><span class="c1">//多重继承的指针偏移
</span><span class="c1"></span>            <span class="nb">false</span>   <span class="c1">//是否是在蓝图实现
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">};</span>

    <span class="k">static</span> <span class="k">const</span> <span class="n">FCppClassTypeInfoStatic</span> <span class="n">StaticCppClassTypeInfo</span><span class="o">=</span> <span class="p">{</span>
        <span class="n">TCppClassTypeTraits</span><span class="o">&lt;</span><span class="n">UMyClass</span><span class="o">&gt;::</span><span class="n">IsAbstract</span><span class="p">,</span><span class="c1">//c++类信息，是否是虚类
</span><span class="c1"></span>    <span class="p">};</span>

    <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FClassParams</span> <span class="n">ClassParams</span> <span class="o">=</span> 
    <span class="p">{</span>
        <span class="o">&amp;</span><span class="n">UMyClass</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">,</span><span class="c1">//取出UClass*的函数指针
</span><span class="c1"></span>        <span class="n">DependentSingletons</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">DependentSingletons</span><span class="p">),</span><span class="c1">//依赖项
</span><span class="c1"></span>        <span class="mh">0x001000A0u</span><span class="p">,</span><span class="c1">//类标志
</span><span class="c1"></span>        <span class="n">FuncInfo</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">FuncInfo</span><span class="p">),</span><span class="c1">//函数列表
</span><span class="c1"></span>        <span class="n">PropPointers</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">PropPointers</span><span class="p">),</span><span class="c1">//属性列表
</span><span class="c1"></span>        <span class="k">nullptr</span><span class="p">,</span><span class="c1">//Config文件名
</span><span class="c1"></span>        <span class="o">&amp;</span><span class="n">StaticCppClassTypeInfo</span><span class="p">,</span><span class="c1">//c++类信息
</span><span class="c1"></span>        <span class="n">InterfaceParams</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">InterfaceParams</span><span class="p">)</span><span class="c1">//接口列表
</span><span class="c1"></span>    <span class="p">};</span>
<span class="p">};</span>

<span class="n">UClass</span><span class="o">*</span> <span class="nf">Z_Construct_UClass_UMyClass</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="n">UClass</span><span class="o">*</span> <span class="n">OuterClass</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">OuterClass</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">ConstructUClass</span><span class="p">(</span><span class="n">OuterClass</span><span class="p">,</span> <span class="n">Z_Construct_UClass_UMyClass_Statics</span><span class="o">::</span><span class="n">ClassParams</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">OuterClass</span><span class="p">;</span>
<span class="p">}</span>

<span class="n">IMPLEMENT_CLASS</span><span class="p">(</span><span class="n">UMyClass</span><span class="p">,</span> <span class="mi">4008851639</span><span class="p">);</span> <span class="c1">//收集点
</span><span class="c1"></span><span class="k">static</span> <span class="n">FCompiledInDefer</span> <span class="nf">Z_CompiledInDefer_UClass_UMyClass</span><span class="p">(</span><span class="n">Z_Construct_UClass_UMyClass</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">UMyClass</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">,</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"/Script/Hello"</span><span class="p">),</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"UMyClass"</span><span class="p">),</span> <span class="nb">false</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">,</span> <span class="k">nullptr</span><span class="p">);</span> <span class="c1">//收集点
</span></code></pre></div><p data-pid="XcAKfimu">Class的信息就比较多了，可以拥有接口、属性
和函数。属性和函数在后文讲解，多出来的MyInterface，因为也是个UObject类，所以其实也会对UMyInterface生成一个
UClass*对象并添加函数，和UMyClass的模式是一样的，因此不再赘述。但UMyClass因为继承于IMyInterface，因此就要在
UMyClass的UClass*里添加额外的接口继承信息。C++里实现interface是用多继承，因此就有对象基类指针偏移的问题（不懂这个的同
学请自觉补C++基础的课），于是FImplementedInterfaceParams里每一项就有一个用VTABLE_OFFSET获取的指针偏
移，有了Offset就可以根据Obj+Offset来获取IMyInterface*地址，从而调用接口函数，这也是
GetInterfaceAddress的逻辑实现。</p><p data-pid="YDCN_yJS"><code>FCppClassTypeInfoStatic</code>的作用其实和结构的<code>ICppStructOps</code>差不多，都是识别原生C++里的类型信息，但UClass毕竟和UStruct的作用不一样，没有那些纯内存构造析构的操作，也都必然有序列化器，所以<code>FCppClassTypeInfoStatic</code>里目前只有一项bIsAbstract来判断是否该类是虚类。</p><p data-pid="PWPJmZs2">构造的代码（做了些排版和易读调整）：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="nf">ConstructUClass</span><span class="p">(</span><span class="n">UClass</span><span class="o">*&amp;</span> <span class="n">OutClass</span><span class="p">,</span> <span class="k">const</span> <span class="n">FClassParams</span><span class="o">&amp;</span> <span class="n">Params</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">OutClass</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">OutClass</span><span class="o">-&gt;</span><span class="n">ClassFlags</span> <span class="o">&amp;</span> <span class="n">CLASS_Constructed</span><span class="p">))</span> <span class="p">{</span><span class="k">return</span><span class="p">;}</span>  <span class="c1">//防止重复构造
</span><span class="c1"></span>    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">Params</span><span class="p">.</span><span class="n">NumDependencySingletons</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Params</span><span class="p">.</span><span class="n">DependencySingletonFuncArray</span><span class="p">[</span><span class="n">i</span><span class="p">]();</span>   <span class="c1">//构造依赖的对象
</span><span class="c1"></span>    <span class="p">}</span>

    <span class="n">UClass</span><span class="o">*</span> <span class="n">NewClass</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">ClassNoRegisterFunc</span><span class="p">();</span>    <span class="c1">//取得先前生成的UClass*，NoRegister是指没有经过DeferRegister
</span><span class="c1"></span>    <span class="n">OutClass</span> <span class="o">=</span> <span class="n">NewClass</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">ClassFlags</span> <span class="o">&amp;</span> <span class="n">CLASS_Constructed</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span><span class="p">;}</span><span class="c1">//防止重复构造
</span><span class="c1"></span>
    <span class="n">UObjectForceRegistration</span><span class="p">(</span><span class="n">NewClass</span><span class="p">);</span> <span class="c1">//确保此UClass*已经注册
</span><span class="c1"></span>
    <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">ClassFlags</span> <span class="o">|=</span> <span class="p">(</span><span class="n">EClassFlags</span><span class="p">)(</span><span class="n">Params</span><span class="p">.</span><span class="n">ClassFlags</span> <span class="o">|</span> <span class="n">CLASS_Constructed</span><span class="p">);</span><span class="c1">//标记已经构造
</span><span class="c1"></span>
    <span class="k">if</span> <span class="p">((</span><span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">ClassFlags</span> <span class="o">&amp;</span> <span class="n">CLASS_Intrinsic</span><span class="p">)</span> <span class="o">!=</span> <span class="n">CLASS_Intrinsic</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">check</span><span class="p">((</span><span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">ClassFlags</span> <span class="o">&amp;</span> <span class="n">CLASS_TokenStreamAssembled</span><span class="p">)</span> <span class="o">!=</span> <span class="n">CLASS_TokenStreamAssembled</span><span class="p">);</span>
        <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">ReferenceTokenStream</span><span class="p">.</span><span class="n">Empty</span><span class="p">();</span><span class="c1">//对于蓝图类需要重新生成一下引用记号流
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="c1">//构造函数列表
</span><span class="c1"></span>    <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">CreateLinkAndAddChildFunctionsToMap</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">FunctionLinkArray</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">NumFunctions</span><span class="p">);</span>
    <span class="c1">//构造属性列表
</span><span class="c1"></span>    <span class="n">ConstructUProperties</span><span class="p">(</span><span class="n">NewClass</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">PropertyArray</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">NumProperties</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">ClassConfigNameUTF8</span><span class="p">)</span>
    <span class="p">{</span>   <span class="c1">//配置文件名
</span><span class="c1"></span>        <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">ClassConfigName</span> <span class="o">=</span> <span class="n">FName</span><span class="p">(</span><span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">ClassConfigNameUTF8</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">SetCppTypeInfoStatic</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">CppClassInfo</span><span class="p">);</span><span class="c1">//C++类型信息
</span><span class="c1"></span>
    <span class="k">if</span> <span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NumImplementedInterfaces</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">Interfaces</span><span class="p">.</span><span class="n">Reserve</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NumImplementedInterfaces</span><span class="p">);</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">Params</span><span class="p">.</span><span class="n">Params</span><span class="p">.</span><span class="n">NumImplementedInterfaces</span><span class="p">;</span><span class="o">++</span><span class="n">i</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">const</span> <span class="k">auto</span><span class="o">&amp;</span> <span class="n">ImplementedInterface</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">ImplementedInterfaceArray</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="n">UClass</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="n">ClassFunc</span><span class="p">)()</span> <span class="o">=</span> <span class="n">ImplementedInterface</span><span class="p">.</span><span class="n">ClassFunc</span><span class="p">;</span>
            <span class="n">UClass</span><span class="o">*</span> <span class="n">InterfaceClass</span> <span class="o">=</span> <span class="n">ClassFunc</span> <span class="o">?</span> <span class="n">ClassFunc</span><span class="p">()</span> <span class="o">:</span> <span class="k">nullptr</span><span class="p">;</span><span class="c1">//取得UMyInterface所属于的UClass*对象
</span><span class="c1"></span>
            <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">Interfaces</span><span class="p">.</span><span class="n">Emplace</span><span class="p">(</span><span class="n">InterfaceClass</span><span class="p">,</span> <span class="n">ImplementedInterface</span><span class="p">.</span><span class="n">Offset</span><span class="p">,</span> <span class="n">ImplementedInterface</span><span class="p">.</span><span class="n">bImplementedByK2</span><span class="p">);</span><span class="c1">//添加实现的接口
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">}</span>

    <span class="n">NewClass</span><span class="o">-&gt;</span><span class="n">StaticLink</span><span class="p">();</span><span class="c1">//链接
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div><p data-pid="PUZJ95WS">构造的过程也很简明，无非是先确保一下依赖对象已经存在，然后一一把各种信息：函数、属性、配置文件名、C++类型信息和接口添加到UClass*里去。重要的只有三步：<code>ConstructUProperties</code>和UScriptStruct的时候一样；接口的实现是通过UClass*里的<code>TArray&lt;FImplementedInterface&gt; Interfaces</code>数组表达的；<code>CreateLinkAndAddChildFunctionsToMap</code>创造函数列表。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">UClass</span><span class="o">::</span><span class="n">CreateLinkAndAddChildFunctionsToMap</span><span class="p">(</span><span class="k">const</span> <span class="n">FClassFunctionLinkInfo</span><span class="o">*</span> <span class="n">Functions</span><span class="p">,</span> <span class="n">uint32</span> <span class="n">NumFunctions</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(;</span> <span class="n">NumFunctions</span><span class="p">;</span> <span class="o">--</span><span class="n">NumFunctions</span><span class="p">,</span> <span class="o">++</span><span class="n">Functions</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">const</span> <span class="kt">char</span><span class="o">*</span> <span class="n">FuncNameUTF8</span> <span class="o">=</span> <span class="n">Functions</span><span class="o">-&gt;</span><span class="n">FuncNameUTF8</span><span class="p">;</span>
        <span class="n">UFunction</span><span class="o">*</span>  <span class="n">Func</span>         <span class="o">=</span> <span class="n">Functions</span><span class="o">-&gt;</span><span class="n">CreateFuncPtr</span><span class="p">();</span><span class="c1">//调用构造UFunction*对象
</span><span class="c1"></span>
        <span class="n">Func</span><span class="o">-&gt;</span><span class="n">Next</span> <span class="o">=</span> <span class="n">Children</span><span class="p">;</span>
        <span class="n">Children</span> <span class="o">=</span> <span class="n">Func</span><span class="p">;</span><span class="c1">//新函数挂在UField*链表的开头
</span><span class="c1"></span>
        <span class="n">AddFunctionToFunctionMap</span><span class="p">(</span><span class="n">Func</span><span class="p">,</span> <span class="n">FName</span><span class="p">(</span><span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">FuncNameUTF8</span><span class="p">)));</span>
        <span class="c1">//内部实现是：FuncMap.Add(FuncName, Function);添加到FuncMap里
</span><span class="c1"></span>    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="dLvmOCZh">一个个创建UFunction*对象然后添加到FuncMap里
去就是了。这里有意思的一点是，Children其实一个UField*的单链表，添加属性和函数都是直接挂在链表头的。通过构造顺序
（CreateLinkAndAddChildFunctionsToMap先，ConstructUProperties次之）可以得知，最后
Children的顺序是先所有UProperty*，之后才是所有的UFunction*。但UProperty*的顺序跟代码里定义的顺序一致，因为
UHT生成的代码里PropPointers里恰好是倒序排列的。而UFunction*的顺序是根据函数名字排序后的反序。</p><h2><b>UPackage</b></h2><p data-pid="BICXGLnX">我们注意到在构造UEnum、UScriptScript和UClass的一开始都有一个构造Outer的过程，这个OuterFunc其实指向了这个Module的Package的构造，这个函数一般在模块的init.gen.cpp里。</p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//Hello.init.gen.cpp
</span><span class="c1"></span><span class="n">UPackage</span><span class="o">*</span> <span class="nf">Z_Construct_UPackage__Script_Hello</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="n">UPackage</span><span class="o">*</span> <span class="n">ReturnPackage</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ReturnPackage</span><span class="p">)</span>
    <span class="p">{</span>   <span class="c1">//先构造代码里的Dynamic Delegate
</span><span class="c1"></span>        <span class="k">static</span> <span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="k">const</span> <span class="n">SingletonFuncArray</span><span class="p">[])()</span> <span class="o">=</span> <span class="p">{</span>
            <span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="n">Z_Construct_UDelegateFunction_Hello_MyDynamicSinglecastDelegate_One__DelegateSignature</span><span class="p">,</span>
            <span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="n">Z_Construct_UDelegateFunction_Hello_MyDynamicMulticastDelegate_One__DelegateSignature</span><span class="p">,</span>
        <span class="p">};</span>
        <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FPackageParams</span> <span class="n">PackageParams</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">"/Script/Hello"</span><span class="p">,</span>
            <span class="n">PKG_CompiledIn</span> <span class="o">|</span> <span class="mh">0x00000000</span><span class="p">,</span>
            <span class="mh">0x135222B4</span><span class="p">,</span>
            <span class="mh">0x392E1CFD</span><span class="p">,</span>
            <span class="n">SingletonFuncArray</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">SingletonFuncArray</span><span class="p">),</span>
            <span class="n">METADATA_PARAMS</span><span class="p">(</span><span class="k">nullptr</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">};</span>
        <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">ConstructUPackage</span><span class="p">(</span><span class="n">ReturnPackage</span><span class="p">,</span> <span class="n">PackageParams</span><span class="p">);</span><span class="c1">//构造Pacakge
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ReturnPackage</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">//DECLARE_DYNAMIC_DELEGATE_OneParam(FMyDynamicSinglecastDelegate_One, int32, Value);
</span></code></pre></div><p data-pid="vkvH5zhu">唯一需要提醒的是对于代码里定义的动态委托
（DynamicDelegate），其实是会在相应地生成UFunction*对象。这些散乱的DynamicDelegate是可以定义在类外面的，
因此就不属于任一UClass*对象，所以就只好属于模块Package了。 构造代码也比较简单：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="nf">ConstructUPackage</span><span class="p">(</span><span class="n">UPackage</span><span class="o">*&amp;</span> <span class="n">OutPackage</span><span class="p">,</span> <span class="k">const</span> <span class="n">FPackageParams</span><span class="o">&amp;</span> <span class="n">Params</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">OutPackage</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span><span class="p">;}</span>

    <span class="n">UPackage</span><span class="o">*</span> <span class="n">NewPackage</span> <span class="o">=</span> <span class="n">CastChecked</span><span class="o">&lt;</span><span class="n">UPackage</span><span class="o">&gt;</span><span class="p">(</span><span class="n">StaticFindObjectFast</span><span class="p">(</span><span class="n">UPackage</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">(),</span> <span class="k">nullptr</span><span class="p">,</span> <span class="n">FName</span><span class="p">(</span><span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NameUTF8</span><span class="p">)),</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">));</span><span class="c1">//找到之前创建的Package
</span><span class="c1"></span>    <span class="n">OutPackage</span> <span class="o">=</span> <span class="n">NewPackage</span><span class="p">;</span>

    <span class="n">NewPackage</span><span class="o">-&gt;</span><span class="n">SetPackageFlags</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">PackageFlags</span><span class="p">);</span><span class="c1">//设定标记
</span><span class="c1"></span>    <span class="n">NewPackage</span><span class="o">-&gt;</span><span class="n">SetGuid</span><span class="p">(</span><span class="n">FGuid</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">BodyCRC</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">DeclarationsCRC</span><span class="p">,</span> <span class="mi">0u</span><span class="p">,</span> <span class="mi">0u</span><span class="p">));</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="p">(</span><span class="o">*</span><span class="k">const</span> <span class="o">*</span><span class="n">SingletonFunc</span><span class="p">)()</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">SingletonFuncArray</span><span class="p">,</span> <span class="o">*</span><span class="p">(</span><span class="o">*</span><span class="k">const</span> <span class="o">*</span><span class="n">SingletonFuncEnd</span><span class="p">)()</span> <span class="o">=</span> <span class="n">SingletonFunc</span> <span class="o">+</span> <span class="n">Params</span><span class="p">.</span><span class="n">NumSingletons</span><span class="p">;</span> <span class="n">SingletonFunc</span> <span class="o">!=</span> <span class="n">SingletonFuncEnd</span><span class="p">;</span> <span class="o">++</span><span class="n">SingletonFunc</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">(</span><span class="o">*</span><span class="n">SingletonFunc</span><span class="p">)();</span><span class="c1">//调用构造前提对象
</span><span class="c1"></span>    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="ocWnQPlh">需要注意的是ConstructUPackage这个时候，其实UPackage在之前UClass*对象Register的时候就已经Create出来了，所以只需要查找一下就行，然后设定一下信息标记，最后创建这个UPackage里的UFunction*对象。</p><h2><b>UProperty</b></h2><p data-pid="eJR9jCxj">终于在前面讲完了大块头的构造，接着来说一下小小的属性。</p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//一个个属性的参数
</span><span class="c1"></span><span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FFloatPropertyParams</span> <span class="n">NewProp_Score</span> <span class="o">=</span> 
<span class="p">{</span> 
    <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">EPropertyClass</span><span class="o">::</span><span class="n">Float</span><span class="p">,</span> 
    <span class="s">"Score"</span><span class="p">,</span> 
    <span class="n">RF_Public</span><span class="o">|</span><span class="n">RF_Transient</span><span class="o">|</span><span class="n">RF_MarkAsNative</span><span class="p">,</span><span class="c1">//对象标记
</span><span class="c1"></span>    <span class="p">(</span><span class="n">EPropertyFlags</span><span class="p">)</span><span class="mh">0x0010000000000004</span><span class="p">,</span> <span class="c1">//属性标记
</span><span class="c1"></span>    <span class="mi">1</span><span class="p">,</span>  <span class="c1">//数组维度，固定的数组的大小
</span><span class="c1"></span>    <span class="k">nullptr</span><span class="p">,</span> <span class="c1">//RepNotify函数的名称
</span><span class="c1"></span>    <span class="n">STRUCT_OFFSET</span><span class="p">(</span><span class="n">FMyStruct</span><span class="p">,</span> <span class="n">Score</span><span class="p">)</span> <span class="c1">//属性的结构偏移地址
</span><span class="c1"></span><span class="p">};</span>
 <span class="c1">//结构参数数组，会发送给ConstructUProperties来构造。
</span><span class="c1"></span><span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FPropertyParamsBase</span><span class="o">*</span> <span class="k">const</span> <span class="n">PropPointers</span><span class="p">[]</span> <span class="o">=</span> 
<span class="p">{</span>
    <span class="o">&amp;</span><span class="n">NewProp_Score</span>
<span class="p">};</span>
</code></pre></div><p data-pid="Rmo3gJ6w">ConstructUProperties其实就是会遍历数组调用ConstructUProperty：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="nf">ConstructUProperty</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">Outer</span><span class="p">,</span> <span class="k">const</span> <span class="n">FPropertyParamsBase</span><span class="o">*</span> <span class="k">const</span><span class="o">*&amp;</span> <span class="n">PropertyArray</span><span class="p">,</span> <span class="n">int32</span><span class="o">&amp;</span> <span class="n">NumProperties</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">const</span> <span class="n">FPropertyParamsBase</span><span class="o">*</span> <span class="n">PropBase</span> <span class="o">=</span> <span class="o">*</span><span class="n">PropertyArray</span><span class="o">++</span><span class="p">;</span>
    <span class="n">uint32</span> <span class="n">ReadMore</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">UProperty</span><span class="o">*</span> <span class="n">NewProp</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="k">switch</span> <span class="p">(</span><span class="n">PropBase</span><span class="o">-&gt;</span><span class="n">Type</span><span class="p">)</span>
    <span class="p">{</span>
       <span class="k">case</span> <span class="n">EPropertyClass</span><span class="o">::</span><span class="nl">Array</span><span class="p">:</span>
        <span class="p">{</span>
            <span class="k">const</span> <span class="n">FArrayPropertyParams</span><span class="o">*</span> <span class="n">Prop</span> <span class="o">=</span> <span class="p">(</span><span class="k">const</span> <span class="n">FArrayPropertyParams</span><span class="o">*</span><span class="p">)</span><span class="n">PropBase</span><span class="p">;</span>
            <span class="n">NewProp</span> <span class="o">=</span> <span class="k">new</span> <span class="p">(</span><span class="n">EC_InternalUseOnlyConstructor</span><span class="p">,</span> <span class="n">Outer</span><span class="p">,</span> <span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Prop</span><span class="o">-&gt;</span><span class="n">NameUTF8</span><span class="p">),</span> <span class="n">Prop</span><span class="o">-&gt;</span><span class="n">ObjectFlags</span><span class="p">)</span> <span class="n">UArrayProperty</span><span class="p">(</span><span class="n">FObjectInitializer</span><span class="p">(),</span> <span class="n">EC_CppProperty</span><span class="p">,</span> <span class="n">Prop</span><span class="o">-&gt;</span><span class="n">Offset</span><span class="p">,</span> <span class="n">Prop</span><span class="o">-&gt;</span><span class="n">PropertyFlags</span><span class="p">);</span><span class="c1">//构造Property对象
</span><span class="c1"></span>
            <span class="c1">// Next property is the array inner
</span><span class="c1"></span>            <span class="n">ReadMore</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span><span class="c1">//需要一个子属性
</span><span class="c1"></span>        <span class="p">}</span>
        <span class="k">break</span><span class="p">;</span>
        <span class="c1">//case其他的各种类型属性
</span><span class="c1"></span>    <span class="p">}</span>

    <span class="n">NewProp</span><span class="o">-&gt;</span><span class="n">ArrayDim</span> <span class="o">=</span> <span class="n">PropBase</span><span class="o">-&gt;</span><span class="n">ArrayDim</span><span class="p">;</span><span class="c1">//设定属性维度，单属性为1，int32 prop[10]这种的为10
</span><span class="c1"></span>    <span class="k">if</span> <span class="p">(</span><span class="n">PropBase</span><span class="o">-&gt;</span><span class="n">RepNotifyFuncUTF8</span><span class="p">)</span>
    <span class="p">{</span>   <span class="c1">//属性的复制通知函数名
</span><span class="c1"></span>        <span class="n">NewProp</span><span class="o">-&gt;</span><span class="n">RepNotifyFunc</span> <span class="o">=</span> <span class="n">FName</span><span class="p">(</span><span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">PropBase</span><span class="o">-&gt;</span><span class="n">RepNotifyFuncUTF8</span><span class="p">));</span>
    <span class="p">}</span>

    <span class="o">--</span><span class="n">NumProperties</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(;</span> <span class="n">ReadMore</span><span class="p">;</span> <span class="o">--</span><span class="n">ReadMore</span><span class="p">)</span>
    <span class="p">{</span>   <span class="c1">//构造子属性，注意这里以现在的属性NewProp为Outer
</span><span class="c1"></span>        <span class="n">ConstructUProperty</span><span class="p">(</span><span class="n">NewProp</span><span class="p">,</span> <span class="n">PropertyArray</span><span class="p">,</span> <span class="n">NumProperties</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="pXZknU3P">UHT会分析我们代码里的定义的属性类型，来生成不同的FPropertyParams类型。根据不同的EPropertyClass，构造生成不同类型的UProperty*。同时对于一些复合的属性类型，需要生成1或2个子属性。</p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-a8bd69dd6125cc6f55f05e86470bad77_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="767" data-rawheight="1056" data-original-token="v2-496f535e9d3ade0580eb99e3193f1738" class="origin_image zh-lightbox-thumb" width="767" data-original="https://pic4.zhimg.com/v2-a8bd69dd6125cc6f55f05e86470bad77_r.jpg"></div></figure><p data-pid="W9ujrse0">这个表提供给大家对照。还有点需要注意的是UProperty的构造函数里会把自己添加到Outer里去：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">UProperty</span><span class="o">::</span><span class="n">Init</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">GetOuterUField</span><span class="p">()</span><span class="o">-&gt;</span><span class="n">AddCppProperty</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="c1">//AddCppProperty是个虚函数
</span><span class="c1"></span><span class="p">}</span>
<span class="c1">//重载
</span><span class="c1"></span><span class="kt">void</span> <span class="n">UArrayProperty</span><span class="o">::</span><span class="n">AddCppProperty</span><span class="p">(</span> <span class="n">UProperty</span><span class="o">*</span> <span class="n">Property</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">Inner</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;</span>   <span class="c1">//元素属性
</span><span class="c1"></span><span class="p">}</span>
<span class="kt">void</span> <span class="n">UMapProperty</span><span class="o">::</span><span class="n">AddCppProperty</span><span class="p">(</span> <span class="n">UProperty</span><span class="o">*</span> <span class="n">Property</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">KeyProp</span><span class="p">)</span> <span class="p">{</span><span class="n">KeyProp</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;}</span><span class="c1">//第一个是键属性
</span><span class="c1"></span>    <span class="k">else</span> <span class="p">{</span><span class="n">ValueProp</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;}</span><span class="c1">//第二个是值属性
</span><span class="c1"></span><span class="p">}</span>
<span class="kt">void</span> <span class="n">USetProperty</span><span class="o">::</span><span class="n">AddCppProperty</span><span class="p">(</span> <span class="n">UProperty</span><span class="o">*</span> <span class="n">Property</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">ElementProp</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;</span><span class="c1">//元素属性
</span><span class="c1"></span><span class="p">}</span>

<span class="kt">void</span> <span class="n">UEnumProperty</span><span class="o">::</span><span class="n">AddCppProperty</span><span class="p">(</span><span class="n">UProperty</span><span class="o">*</span> <span class="n">Inner</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">UnderlyingProp</span> <span class="o">=</span> <span class="n">CastChecked</span><span class="o">&lt;</span><span class="n">UNumericProperty</span><span class="o">&gt;</span><span class="p">(</span><span class="n">Inner</span><span class="p">);</span><span class="c1">//依靠的整数属性
</span><span class="c1"></span><span class="p">}</span>
<span class="kt">void</span> <span class="n">UStruct</span><span class="o">::</span><span class="n">AddCppProperty</span><span class="p">(</span> <span class="n">UProperty</span><span class="o">*</span> <span class="n">Property</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="n">Property</span><span class="o">-&gt;</span><span class="n">Next</span> <span class="o">=</span> <span class="n">Children</span><span class="p">;</span>
    <span class="n">Children</span>       <span class="o">=</span> <span class="n">Property</span><span class="p">;</span><span class="c1">//新属性挂在UField*链表的开头
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div><h2><b>UFunction</b></h2><p data-pid="MRVb1lJM">属性说完，再来宠幸一下函数吧。测试代码请往上滚滚滚去MyClass里查看。</p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//测试函数：int32 Func(float param1);
</span><span class="c1"></span><span class="kt">void</span> <span class="n">UMyClass</span><span class="o">::</span><span class="n">ImplementableFunc</span><span class="p">()</span>  <span class="c1">//UHT为我们生成了函数实体
</span><span class="c1"></span><span class="p">{</span>
    <span class="n">ProcessEvent</span><span class="p">(</span><span class="n">FindFunctionChecked</span><span class="p">(</span><span class="s">"ImplementableFunc"</span><span class="p">),</span><span class="nb">NULL</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="n">UMyClass</span><span class="o">::</span><span class="n">NativeFunc</span><span class="p">()</span> <span class="c1">//UHT为我们生成了函数实体，但我们可以自定义_Implementation
</span><span class="c1"></span><span class="p">{</span>
    <span class="n">ProcessEvent</span><span class="p">(</span><span class="n">FindFunctionChecked</span><span class="p">(</span><span class="s">"NativeFunc"</span><span class="p">),</span><span class="nb">NULL</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="n">UMyClass</span><span class="o">::</span><span class="n">StaticRegisterNativesUMyClass</span><span class="p">()</span>  <span class="c1">//之前的Native函数收集点
</span><span class="c1"></span><span class="p">{</span>
    <span class="n">UClass</span><span class="o">*</span> <span class="n">Class</span> <span class="o">=</span> <span class="n">UMyClass</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">();</span>
    <span class="k">static</span> <span class="k">const</span> <span class="n">FNameNativePtrPair</span> <span class="n">Funcs</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span>
        <span class="p">{</span> <span class="s">"Func"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">UMyClass</span><span class="o">::</span><span class="n">execFunc</span> <span class="p">},</span>
        <span class="p">{</span> <span class="s">"NativeFunc"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">UMyClass</span><span class="o">::</span><span class="n">execNativeFunc</span> <span class="p">},</span>
    <span class="p">};</span>
    <span class="n">FNativeFunctionRegistrar</span><span class="o">::</span><span class="n">RegisterFunctions</span><span class="p">(</span><span class="n">Class</span><span class="p">,</span> <span class="n">Funcs</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">Funcs</span><span class="p">));</span>
<span class="p">}</span>
<span class="k">struct</span> <span class="nc">Z_Construct_UFunction_UMyClass_Func_Statics</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="nc">MyClass_eventFunc_Parms</span>  <span class="c1">//把所有参数打包成一个结构来存储
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="kt">float</span> <span class="n">param1</span><span class="p">;</span>
        <span class="n">int32</span> <span class="n">ReturnValue</span><span class="p">;</span>
    <span class="p">};</span>
    <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FIntPropertyParams</span> <span class="n">NewProp_ReturnValue</span><span class="o">=</span> 
    <span class="p">{</span> 
        <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">EPropertyClass</span><span class="o">::</span><span class="n">Int</span><span class="p">,</span> 
        <span class="s">"ReturnValue"</span><span class="p">,</span> 
        <span class="n">RF_Public</span><span class="o">|</span><span class="n">RF_Transient</span><span class="o">|</span><span class="n">RF_MarkAsNative</span><span class="p">,</span>
        <span class="p">(</span><span class="n">EPropertyFlags</span><span class="p">)</span><span class="mh">0x0010000000000580</span><span class="p">,</span>
        <span class="mi">1</span><span class="p">,</span> 
        <span class="k">nullptr</span><span class="p">,</span> 
        <span class="n">STRUCT_OFFSET</span><span class="p">(</span><span class="n">MyClass_eventFunc_Parms</span><span class="p">,</span> <span class="n">ReturnValue</span><span class="p">)</span> 
    <span class="p">};</span>

    <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FFloatPropertyParams</span> <span class="n">NewProp_param1</span> <span class="o">=</span>
    <span class="p">{</span> 
        <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">EPropertyClass</span><span class="o">::</span><span class="n">Float</span><span class="p">,</span>
        <span class="s">"param1"</span><span class="p">,</span> 
        <span class="n">RF_Public</span><span class="o">|</span><span class="n">RF_Transient</span><span class="o">|</span><span class="n">RF_MarkAsNative</span><span class="p">,</span> 
        <span class="p">(</span><span class="n">EPropertyFlags</span><span class="p">)</span><span class="mh">0x0010000000000080</span><span class="p">,</span> 
        <span class="mi">1</span><span class="p">,</span>
        <span class="k">nullptr</span><span class="p">,</span> 
        <span class="n">STRUCT_OFFSET</span><span class="p">(</span><span class="n">MyClass_eventFunc_Parms</span><span class="p">,</span> <span class="n">param1</span><span class="p">)</span> 
    <span class="p">};</span>
    <span class="c1">//函数的子属性
</span><span class="c1"></span>    <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FPropertyParamsBase</span><span class="o">*</span> <span class="k">const</span> <span class="n">PropPointers</span><span class="p">[]</span><span class="o">=</span> 
    <span class="p">{</span>
        <span class="o">&amp;</span><span class="n">NewProp_ReturnValue</span><span class="p">,</span>   <span class="c1">//返回值也用属性表示
</span><span class="c1"></span>        <span class="o">&amp;</span><span class="n">NewProp_param1</span><span class="p">,</span>        <span class="c1">//参数用属性表示
</span><span class="c1"></span>    <span class="p">};</span>
    <span class="c1">//函数的参数
</span><span class="c1"></span>    <span class="k">static</span> <span class="k">const</span> <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">FFunctionParams</span> <span class="n">FuncParams</span><span class="o">=</span>
    <span class="p">{</span> 
        <span class="p">(</span><span class="n">UObject</span><span class="o">*</span><span class="p">(</span><span class="o">*</span><span class="p">)())</span><span class="n">Z_Construct_UClass_UMyClass</span><span class="p">,</span> <span class="c1">//外部对象
</span><span class="c1"></span>        <span class="s">"Func"</span><span class="p">,</span> <span class="c1">//名字
</span><span class="c1"></span>        <span class="n">RF_Public</span><span class="o">|</span><span class="n">RF_Transient</span><span class="o">|</span><span class="n">RF_MarkAsNative</span><span class="p">,</span> <span class="c1">//对象标记
</span><span class="c1"></span>        <span class="k">nullptr</span><span class="p">,</span> <span class="c1">//父函数，在蓝图中重载基类函数时候指向基类函数版本
</span><span class="c1"></span>        <span class="p">(</span><span class="n">EFunctionFlags</span><span class="p">)</span><span class="mh">0x04020401</span><span class="p">,</span> <span class="c1">//函数标记
</span><span class="c1"></span>        <span class="k">sizeof</span><span class="p">(</span><span class="n">MyClass_eventFunc_Parms</span><span class="p">),</span><span class="c1">//属性的结构大小
</span><span class="c1"></span>        <span class="n">PropPointers</span><span class="p">,</span> <span class="n">ARRAY_COUNT</span><span class="p">(</span><span class="n">PropPointers</span><span class="p">),</span><span class="c1">//属性列表
</span><span class="c1"></span>        <span class="mi">0</span><span class="p">,</span>  <span class="c1">//RPCId
</span><span class="c1"></span>        <span class="mi">0</span>   <span class="c1">//RPCResponseId
</span><span class="c1"></span>    <span class="p">};</span>
<span class="p">};</span>

<span class="n">UFunction</span><span class="o">*</span> <span class="nf">Z_Construct_UFunction_UMyClass_Func</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="n">UFunction</span><span class="o">*</span> <span class="n">ReturnFunction</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ReturnFunction</span><span class="p">)</span>
    <span class="p">{</span>   <span class="c1">//构造函数
</span><span class="c1"></span>        <span class="n">UE4CodeGen_Private</span><span class="o">::</span><span class="n">ConstructUFunction</span><span class="p">(</span><span class="n">ReturnFunction</span><span class="p">,</span> <span class="n">Z_Construct_UFunction_UMyClass_Func_Statics</span><span class="o">::</span><span class="n">FuncParams</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">ReturnFunction</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">//其他函数...
</span><span class="c1"></span><span class="k">static</span> <span class="k">const</span> <span class="n">FClassFunctionLinkInfo</span> <span class="n">FuncInfo</span><span class="p">[]</span><span class="o">=</span> <span class="c1">//发给ClassParams来构造UClass*
</span><span class="c1"></span><span class="p">{</span>
    <span class="p">{</span> <span class="o">&amp;</span><span class="n">Z_Construct_UFunction_UMyClass_Func</span><span class="p">,</span> <span class="s">"Func"</span> <span class="p">},</span> <span class="c1">// 2606493682
</span><span class="c1"></span>    <span class="p">{</span> <span class="o">&amp;</span><span class="n">Z_Construct_UFunction_UMyClass_ImplementableFunc</span><span class="p">,</span> <span class="s">"ImplementableFunc"</span> <span class="p">},</span> <span class="c1">// 3752866266
</span><span class="c1"></span>    <span class="p">{</span> <span class="o">&amp;</span><span class="n">Z_Construct_UFunction_UMyClass_NativeFunc</span><span class="p">,</span> <span class="s">"NativeFunc"</span> <span class="p">},</span> <span class="c1">// 3036938731
</span><span class="c1"></span><span class="p">};</span> 
<span class="c1">//接口函数...
</span><span class="c1"></span><span class="kt">void</span> <span class="n">IMyInterface</span><span class="o">::</span><span class="n">Execute_ImplementableInterfaceFunc</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">O</span><span class="p">)</span>
<span class="p">{</span>   <span class="c1">//通过名字查找函数
</span><span class="c1"></span>    <span class="n">UFunction</span><span class="o">*</span> <span class="k">const</span> <span class="n">Func</span> <span class="o">=</span> <span class="n">O</span><span class="o">-&gt;</span><span class="n">FindFunction</span><span class="p">(</span><span class="s">"ImplementableInterfaceFunc"</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">Func</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">O</span><span class="o">-&gt;</span><span class="n">ProcessEvent</span><span class="p">(</span><span class="n">Func</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
    <span class="p">}</span><span class="c1">//找不到，其实不会报错，所以是在尝试调用一个接口函数
</span><span class="c1"></span><span class="p">}</span>
<span class="kt">void</span> <span class="n">IMyInterface</span><span class="o">::</span><span class="n">Execute_NativeInterfaceFunc</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">O</span><span class="p">)</span>
<span class="p">{</span>   <span class="c1">//通过名字查找函数
</span><span class="c1"></span>    <span class="n">UFunction</span><span class="o">*</span> <span class="k">const</span> <span class="n">Func</span> <span class="o">=</span> <span class="n">O</span><span class="o">-&gt;</span><span class="n">FindFunction</span><span class="p">(</span><span class="s">"NativeInterfaceFunc"</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">Func</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">O</span><span class="o">-&gt;</span><span class="n">ProcessEvent</span><span class="p">(</span><span class="n">Func</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="k">auto</span> <span class="n">I</span> <span class="o">=</span> <span class="p">(</span><span class="n">IMyInterface</span><span class="o">*</span><span class="p">)(</span><span class="n">O</span><span class="o">-&gt;</span><span class="n">GetNativeInterfaceAddress</span><span class="p">(</span><span class="n">UMyInterface</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">())))</span>
    <span class="p">{</span>   <span class="c1">//如果找不到蓝图中的版本，则会尝试调用C++里的_Implementation默认实现。
</span><span class="c1"></span>        <span class="n">I</span><span class="o">-&gt;</span><span class="n">NativeInterfaceFunc_Implementation</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="ZSm2-88F">代码有点多，但其实结构还是很简单的。函数的参数和返回值都打包
成一个结构（MyClass_eventFunc_Parms），这样UProperty才能有一个Offset的宿主。但有意思的是，其实这个结构
（MyClass_eventFunc_Parms）我们只需要它的大小，并不需要它的实际类型定义，因为只要用它分配一块内存布局一致的内存就可以了。</p><p data-pid="h9u0fy2R">我
们可以看见，UHT为我们生成了一些函数的默认实现，如ImplementableFunc何NativeFunc，还有接口里的函数，所以我们不应该在
C++里再重复实现（写了也会报错）。它们的内部实现也都是通过ProcessEvent来调用蓝图中的版本，或者调用C++里的
_Implementation默认版本实现。 开始构造的过程如下：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="nf">ConstructUFunction</span><span class="p">(</span><span class="n">UFunction</span><span class="o">*&amp;</span> <span class="n">OutFunction</span><span class="p">,</span> <span class="k">const</span> <span class="n">FFunctionParams</span><span class="o">&amp;</span> <span class="n">Params</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">UObject</span><span class="o">*</span>   <span class="n">Outer</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">OuterFunc</span> <span class="o">?</span> <span class="n">Params</span><span class="p">.</span><span class="n">OuterFunc</span><span class="p">()</span> <span class="o">:</span> <span class="k">nullptr</span><span class="p">;</span>
        <span class="n">UFunction</span><span class="o">*</span> <span class="n">Super</span> <span class="o">=</span> <span class="n">Params</span><span class="p">.</span><span class="n">SuperFunc</span> <span class="o">?</span> <span class="n">Params</span><span class="p">.</span><span class="n">SuperFunc</span><span class="p">()</span> <span class="o">:</span> <span class="k">nullptr</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">OutFunction</span><span class="p">)</span> <span class="p">{</span><span class="k">return</span><span class="p">;}</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">FunctionFlags</span> <span class="o">&amp;</span> <span class="n">FUNC_Delegate</span><span class="p">)</span>   <span class="c1">//生成委托函数
</span><span class="c1"></span>        <span class="p">{</span>
            <span class="n">OutFunction</span> <span class="o">=</span> <span class="k">new</span> <span class="p">(</span><span class="n">EC_InternalUseOnlyConstructor</span><span class="p">,</span> <span class="n">Outer</span><span class="p">,</span> <span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NameUTF8</span><span class="p">),</span> <span class="n">Params</span><span class="p">.</span><span class="n">ObjectFlags</span><span class="p">)</span> <span class="n">UDelegateFunction</span><span class="p">(</span>
                <span class="n">FObjectInitializer</span><span class="p">(),</span>
                <span class="n">Super</span><span class="p">,</span>
                <span class="n">Params</span><span class="p">.</span><span class="n">FunctionFlags</span><span class="p">,</span>
                <span class="n">Params</span><span class="p">.</span><span class="n">StructureSize</span>
            <span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">OutFunction</span> <span class="o">=</span> <span class="k">new</span> <span class="p">(</span><span class="n">EC_InternalUseOnlyConstructor</span><span class="p">,</span> <span class="n">Outer</span><span class="p">,</span> <span class="n">UTF8_TO_TCHAR</span><span class="p">(</span><span class="n">Params</span><span class="p">.</span><span class="n">NameUTF8</span><span class="p">),</span> <span class="n">Params</span><span class="p">.</span><span class="n">ObjectFlags</span><span class="p">)</span> <span class="n">UFunction</span><span class="p">(</span>
                <span class="n">FObjectInitializer</span><span class="p">(),</span>
                <span class="n">Super</span><span class="p">,</span>
                <span class="n">Params</span><span class="p">.</span><span class="n">FunctionFlags</span><span class="p">,</span>
                <span class="n">Params</span><span class="p">.</span><span class="n">StructureSize</span>
            <span class="p">);</span>
        <span class="p">}</span>

        <span class="n">ConstructUProperties</span><span class="p">(</span><span class="n">OutFunction</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">PropertyArray</span><span class="p">,</span> <span class="n">Params</span><span class="p">.</span><span class="n">NumProperties</span><span class="p">);</span><span class="c1">//生成属性列表
</span><span class="c1"></span>        <span class="n">OutFunction</span><span class="o">-&gt;</span><span class="n">Bind</span><span class="p">();</span><span class="c1">//函数绑定
</span><span class="c1"></span>        <span class="n">OutFunction</span><span class="o">-&gt;</span><span class="n">StaticLink</span><span class="p">();</span><span class="c1">//函数链接
</span><span class="c1"></span>    <span class="p">}</span>
</code></pre></div><p data-pid="oqp0wyN0">构造的老套路是生成依赖，然后再new出对象，
UFunction生成UProperty列表当做参数和返回值，最后再依次Bind和Link。其中一个function的SuperFunc表达的其
实是函数的从基类继承重载下来，它其实指向的是基类里的函数版本。但在C++里其实一直是nullptr，因为C++里继承一个UFUNCION，不允许
子类重复加UFUNCION标记，避免出现UFUNCION里标记不一致的情况，但是因为是virtual，所以其实也是可以正常多态的。那什么时候<code>UFunction* GetSuperFunction()</code>的才有值呢？答案是在蓝图里使用的时候，蓝图里所有函数其实都是UFunction，所以在继承重载的时候，子类函数的SuperFunction就会指向基类的版本。如我们新创建一个BPMyActor继承自AActor，就会默认出现4个重载函数：<code>ReceiveBeginPlay、ReceiveTick、ReceiveActorBeginOverlap、UserConstructionScript</code>，它们的Outer其实是基类版本的同名UFunction*（其他的是属于外部的UStruct或UPacakge）。也正是因为如此，UE知道这个函数是重载下来的，所以在该蓝图节点上点右键，才有“AddParentCall”啊。</p><h2><b>绑定链接</b></h2><p data-pid="FBP6piKa">事
实上在构造完各类型对象后，还需要再梳理一遍，完成一些后初始化工作。跟C++的编译机制有点像，最后一步都是链接，通过符号定位到函数地址来替换。UE
里也一样，需要这么一个绑定链接操作。之前的时候有谈到Bind和StaticLink都略过了，这时再来讲解一下内部的操作。</p><h2><b>Bind</b></h2><p data-pid="GEX0ECPo"><b>绑定的作用是把函数指针绑定到正确的地址！</b> </p><p data-pid="CrBr3Quo">Bind其实是定义在UField里的方法：<code>virtual void Bind(){}</code>，代表所有的字段都可能需要重载这么一个绑定操作，只不过事实上只有UFunction和UClass才有这两个操作。</p><p data-pid="XZJWzz84">UFunction::Bind()的目的是把<code>FNativeFuncPtr Func</code>绑定到正确的函数指针里去。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">UFunction</span><span class="o">::</span><span class="n">Bind</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">UClass</span><span class="o">*</span> <span class="n">OwnerClass</span> <span class="o">=</span> <span class="n">GetOwnerClass</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">HasAnyFunctionFlags</span><span class="p">(</span><span class="n">FUNC_Native</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="n">Func</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">UObject</span><span class="o">::</span><span class="n">ProcessInternal</span><span class="p">;</span>   <span class="c1">//非native函数指向蓝图调用
</span><span class="c1"></span>    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="n">FName</span> <span class="n">Name</span> <span class="o">=</span> <span class="n">GetFName</span><span class="p">();</span>    <span class="c1">//在之前注册的naive函数表里去查找函数指针
</span><span class="c1"></span>        <span class="n">FNativeFunctionLookup</span><span class="o">*</span> <span class="n">Found</span> <span class="o">=</span> <span class="n">OwnerClass</span><span class="o">-&gt;</span><span class="n">NativeFunctionLookupTable</span><span class="p">.</span><span class="n">FindByPredicate</span><span class="p">([</span><span class="o">=</span><span class="p">](</span><span class="k">const</span> <span class="n">FNativeFunctionLookup</span><span class="o">&amp;</span> <span class="n">NativeFunctionLookup</span><span class="p">){</span> <span class="k">return</span> <span class="n">Name</span> <span class="o">==</span> <span class="n">NativeFunctionLookup</span><span class="p">.</span><span class="n">Name</span><span class="p">;</span> <span class="p">});</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Found</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Func</span> <span class="o">=</span> <span class="n">Found</span><span class="o">-&gt;</span><span class="n">Pointer</span><span class="p">;</span>  <span class="c1">//定位到c++代码里的函数指针。
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="THlg2JfC">UClass的Bind在编译蓝图和载入Package里的类才
需要调用，因为native的类在之前的GetPrivateStaticClassBody的时候已经传进去了函数指针。只有没有C++代码实体的类才
需要绑定到基类里的构造函数等才能正确正确继承下来这些函数来调用。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">UClass</span><span class="o">::</span><span class="n">Bind</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">UStruct</span><span class="o">::</span><span class="n">Bind</span><span class="p">();</span>
    <span class="n">UClass</span><span class="o">*</span> <span class="n">SuperClass</span> <span class="o">=</span> <span class="n">GetSuperClass</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">SuperClass</span> <span class="o">&amp;&amp;</span> 
            <span class="p">(</span><span class="n">ClassConstructor</span> <span class="o">==</span> <span class="k">nullptr</span> <span class="o">||</span> 
            <span class="n">ClassAddReferencedObjects</span> <span class="o">==</span> <span class="k">nullptr</span> <span class="o">||</span> 
            <span class="n">ClassVTableHelperCtorCaller</span> <span class="o">==</span> <span class="k">nullptr</span><span class="p">)</span>
        <span class="p">)</span>
    <span class="p">{</span>
        <span class="n">SuperClass</span><span class="o">-&gt;</span><span class="n">Bind</span><span class="p">();</span><span class="c1">//确保基类已经绑定
</span><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ClassConstructor</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ClassConstructor</span> <span class="o">=</span> <span class="n">SuperClass</span><span class="o">-&gt;</span><span class="n">ClassConstructor</span><span class="p">;</span><span class="c1">//绑定构造函数指针
</span><span class="c1"></span>        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ClassVTableHelperCtorCaller</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ClassVTableHelperCtorCaller</span> <span class="o">=</span> <span class="n">SuperClass</span><span class="o">-&gt;</span><span class="n">ClassVTableHelperCtorCaller</span><span class="p">;</span><span class="c1">//绑定热载函数指针
</span><span class="c1"></span>        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">ClassAddReferencedObjects</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ClassAddReferencedObjects</span> <span class="o">=</span> <span class="n">SuperClass</span><span class="o">-&gt;</span><span class="n">ClassAddReferencedObjects</span><span class="p">;</span><span class="c1">//绑定ARO函数指针
</span><span class="c1"></span>        <span class="p">}</span>

        <span class="n">ClassCastFlags</span> <span class="o">|=</span> <span class="n">SuperClass</span><span class="o">-&gt;</span><span class="n">ClassCastFlags</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="f9tUTrMZ">绑定的这三个函数和GetPrivateStaticClassBody里传进来的一样。</p><h2><b>Link</b></h2><p data-pid="6BYvzmsC">在构造UScriptStuct和UClass的最后一步都调用了StaicLink，它其实是UStruct的一个方法，包装了一个空的序列化归档类对象后转发到<code>UStruct::Link</code>函数上去。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">UStruct</span><span class="o">::</span><span class="n">StaticLink</span><span class="p">(</span><span class="kt">bool</span> <span class="n">bRelinkExistingProperties</span> <span class="cm">/*= false*/</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">FArchive</span> <span class="n">ArDummy</span><span class="p">;</span>   <span class="c1">//一个空的序列化归档类
</span><span class="c1"></span>    <span class="n">Link</span><span class="p">(</span><span class="n">ArDummy</span><span class="p">,</span> <span class="n">bRelinkExistingProperties</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div><p data-pid="JpTFrtFt">而<code>UStruct::Link</code>又是一个虚函数，在很多的子类中都有重载。StaicLink也在很多地方有调用。 Link这个词其实有三层意思：</p><ol><li data-pid="sxsHFxP7">跟编译器的Link一样，编译完成后的最后一个操作链接，替换符号地址等。典型的是在结构改变或者编译后重新Link。</li><li data-pid="nJNjxWJT">把子字段们按照属性特征分成一个个链条，如RefLink。</li><li data-pid="cFCzzSD-">序列化的时候也有概念Link，用来充当磁盘和内存里对象的链接桥梁。同样，在一个保存在磁盘里的类型被序列化出来之后，就需要再Link一下来重新设置属性的偏移，结构内存对齐等。这也是Link需要一个FArchive参数的原因。</li></ol><p data-pid="ZMx9ym1w">UProperty
里其实也有一个Link，分为LinkInternal和SetupOffset，LinkInternal主要是用来根据属性特征再设置一下
PropertyFlags，而SetupOffset是用来在序列化后设置属性内存偏移。这部分比较散乱，就请读者朋友们自己查看了。 而重点的是<code>UStruct::Link</code>：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">UStruct</span><span class="o">::</span><span class="n">Link</span><span class="p">(</span><span class="n">FArchive</span><span class="o">&amp;</span> <span class="n">Ar</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">bRelinkExistingProperties</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">UField</span><span class="o">*</span> <span class="n">Field</span><span class="o">=</span><span class="n">Children</span><span class="p">;</span> <span class="p">(</span><span class="n">Field</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">Field</span><span class="o">-&gt;</span><span class="n">GetOuter</span><span class="p">()</span> <span class="o">==</span> <span class="k">this</span><span class="p">);</span> <span class="n">Field</span> <span class="o">=</span> <span class="n">Field</span><span class="o">-&gt;</span><span class="n">Next</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">UProperty</span><span class="o">*</span> <span class="n">Property</span> <span class="o">=</span> <span class="k">dynamic_cast</span><span class="o">&lt;</span><span class="n">UProperty</span><span class="o">*&gt;</span><span class="p">(</span><span class="n">Field</span><span class="p">))</span>
        <span class="p">{</span>
            <span class="n">Property</span><span class="o">-&gt;</span><span class="n">LinkWithoutChangingOffset</span><span class="p">(</span><span class="n">Ar</span><span class="p">);</span><span class="c1">//对所有属性先Link一下。
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">UProperty</span><span class="o">**</span> <span class="n">PropertyLinkPtr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">PropertyLink</span><span class="p">;</span>
    <span class="n">UProperty</span><span class="o">**</span> <span class="n">DestructorLinkPtr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">DestructorLink</span><span class="p">;</span>
    <span class="n">UProperty</span><span class="o">**</span> <span class="n">RefLinkPtr</span> <span class="o">=</span> <span class="p">(</span><span class="n">UProperty</span><span class="o">**</span><span class="p">)</span><span class="o">&amp;</span><span class="n">RefLink</span><span class="p">;</span>
    <span class="n">UProperty</span><span class="o">**</span> <span class="n">PostConstructLinkPtr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">PostConstructLink</span><span class="p">;</span>
    <span class="n">TArray</span><span class="o">&lt;</span><span class="k">const</span> <span class="n">UStructProperty</span><span class="o">*&gt;</span> <span class="n">EncounteredStructProps</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">TFieldIterator</span><span class="o">&lt;</span><span class="n">UProperty</span><span class="o">&gt;</span> <span class="n">It</span><span class="p">(</span><span class="k">this</span><span class="p">);</span> <span class="n">It</span><span class="p">;</span> <span class="o">++</span><span class="n">It</span><span class="p">)</span>  <span class="c1">//遍历出所有属性
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="n">UProperty</span><span class="o">*</span> <span class="n">Property</span> <span class="o">=</span> <span class="o">*</span><span class="n">It</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Property</span><span class="o">-&gt;</span><span class="n">ContainsObjectReference</span><span class="p">(</span><span class="n">EncounteredStructProps</span><span class="p">)</span> <span class="o">||</span> <span class="n">Property</span><span class="o">-&gt;</span><span class="n">ContainsWeakObjectReference</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="o">*</span><span class="n">RefLinkPtr</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;</span><span class="c1">//包含对象引用的属性
</span><span class="c1"></span>            <span class="n">RefLinkPtr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">RefLinkPtr</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">NextRef</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">const</span> <span class="n">UClass</span><span class="o">*</span> <span class="n">OwnerClass</span> <span class="o">=</span> <span class="n">Property</span><span class="o">-&gt;</span><span class="n">GetOwnerClass</span><span class="p">();</span>
        <span class="kt">bool</span> <span class="n">bOwnedByNativeClass</span> <span class="o">=</span> <span class="n">OwnerClass</span> <span class="o">&amp;&amp;</span> <span class="n">OwnerClass</span><span class="o">-&gt;</span><span class="n">HasAnyClassFlags</span><span class="p">(</span><span class="n">CLASS_Native</span> <span class="o">|</span> <span class="n">CLASS_Intrinsic</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">Property</span><span class="o">-&gt;</span><span class="n">HasAnyPropertyFlags</span><span class="p">(</span><span class="n">CPF_IsPlainOldData</span> <span class="o">|</span> <span class="n">CPF_NoDestructor</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
            <span class="o">!</span><span class="n">bOwnedByNativeClass</span><span class="p">)</span> <span class="c1">// these would be covered by the native destructor
</span><span class="c1"></span>        <span class="p">{</span>   
            <span class="o">*</span><span class="n">DestructorLinkPtr</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;</span><span class="c1">//需要额外析构的属性
</span><span class="c1"></span>            <span class="n">DestructorLinkPtr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">DestructorLinkPtr</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">DestructorLinkNext</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">OwnerClass</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="o">!</span><span class="n">bOwnedByNativeClass</span> <span class="o">||</span> <span class="p">(</span><span class="n">Property</span><span class="o">-&gt;</span><span class="n">HasAnyPropertyFlags</span><span class="p">(</span><span class="n">CPF_Config</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">OwnerClass</span><span class="o">-&gt;</span><span class="n">HasAnyClassFlags</span><span class="p">(</span><span class="n">CLASS_PerObjectConfig</span><span class="p">))))</span>
        <span class="p">{</span>
            <span class="o">*</span><span class="n">PostConstructLinkPtr</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;</span><span class="c1">//需要从CDO中获取初始值的属性
</span><span class="c1"></span>            <span class="n">PostConstructLinkPtr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">PostConstructLinkPtr</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">PostConstructLinkNext</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="o">*</span><span class="n">PropertyLinkPtr</span> <span class="o">=</span> <span class="n">Property</span><span class="p">;</span><span class="c1">//所有属性
</span><span class="c1"></span>        <span class="n">PropertyLinkPtr</span> <span class="o">=</span> <span class="o">&amp;</span><span class="p">(</span><span class="o">*</span><span class="n">PropertyLinkPtr</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">PropertyLinkNext</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="o">*</span><span class="n">PropertyLinkPtr</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="o">*</span><span class="n">DestructorLinkPtr</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="o">*</span><span class="n">RefLinkPtr</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
    <span class="o">*</span><span class="n">PostConstructLinkPtr</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p data-pid="cletQmEs">看起来有点乱，各种标记的判断，但其实只是把之前AddCppProperty添加到UField* Children里的字段们，抽出UProperty们，然后再串成4个链条：</p><ol><li data-pid="1PvQ6A7c">PropertyLink：所有的属性</li><li data-pid="UnS7Q8jX">RefLink：包含对象引用（UObject*）的属性，这些属性对GC有影响，所以单独分类出来加速分析。</li><li data-pid="Uz1CQCTE">PostConstructLink：所有需要从CDO中获取初始值的属性，属性可以从Config文件中或者CDO中获取初始值，因此在序列化后需要初始化一下属性们的值。</li><li data-pid="KZGiyLqE">DestructorLink：需要额外析构的属性，在析构的时候，需要去调用一下属性的析构函数。否则的话，如一个int属性，就不用管它，释放内存就可以了。</li></ol><p data-pid="HA7wDWuQ">单独分类出来这4个链条也是为了在不同的应用场景下加速性能，不需要每次去遍历所有的属性。UFunction本身也是个UStruct，它的Link的之后会调用InitializeDerivedMembers来算一下参数和返回值的信息偏移而已。</p><h2><b>总结</b></h2><p data-pid="WRQgA29G">篇幅太长了都……但没办法，不一鼓作气的把它们都串起来也不好拆分。我知道，阅读文章时，最不喜欢看到贴大段的代码。但读者朋友们如果想对类型系统的组织形式有个更深的了解，还请对照着UE的源码，一点点加深理解。我们最后来梳理一下：</p><p data-pid="Bylnh1Im"><b>类型系统结构：</b> </p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-a9055dd6c06418d34453b898f5ed1450_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="1318" data-rawheight="814" data-original-token="v2-05f9c411b949811f5d95f014afacffd6" class="origin_image zh-lightbox-thumb" width="1318" data-original="https://pic3.zhimg.com/v2-a9055dd6c06418d34453b898f5ed1450_r.jpg"></div></figure><p class="ztext-empty-paragraph"><br></p><p data-pid="qlw8VDFH">整
个的类型系统结构还是挺明了的，UMetaData之前一直略去，其实是把宏标记里的那些信息采集起来关联到对象身上，在编辑器里使用。
UUserDefinedEnum、UUUserDefinedStruct和UBlueprintGeneratedClass都是蓝图里定义编译出来
的枚举结构和类。UDynamicClass是蓝图Native化后生成的类，FClass是UHT分析过程产生的类。</p><p data-pid="Pbuu5ziW"><b>属性就有各种类型了，简直是各开花：</b> </p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2b9a7f61e3f3a9f84d7dd8fe29875853_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="1233" data-rawheight="809" data-original-token="v2-0cb64c06bada7adff2b6cb6368d7ef97" class="origin_image zh-lightbox-thumb" width="1233" data-original="https://pic2.zhimg.com/v2-2b9a7f61e3f3a9f84d7dd8fe29875853_r.jpg"></div></figure><p data-pid="IdglQtQK"> 我也是敬业，把所有属性都列了出来。UE为了在这么多属性之间尽量复用接口，用了多继承的方式。每个属性的实现还是挺简单的，有兴趣的读者朋友们可以到源码里一观。有些属性我们在后面的GC章节也还会涉及到。</p><p data-pid="rYFoxiFy">类型系统到这也就算是构造完了，我们在下篇来汇总总结一下。</p><p data-pid="-Ka589M_">上篇：</p><div class="RichText-LinkCardContainer"><a target="_blank" href="https://zhuanlan.zhihu.com/p/58868952" data-draft-node="block" data-draft-type="link-card" data-text="大钊：《InsideUE4》UObject（十）类型系统构造-再次触发" class="LinkCard new css-1vqsdx1" data-image="https://pic1.zhimg.com/v2-31387d48db989069b3f821b3925cacb0_180x120.jpg" data-image-width="1924" data-image-height="1040"><span class="LinkCard-contents"><span class="LinkCard-title loading" data-text="true"></span><span class="LinkCard-desc loading"></span></span><span class="LinkCard-image LinkCard-image--default"></span></a></div><p data-pid="HDzZ2hIy">下篇：</p><div class="RichText-LinkCardContainer"><a target="_blank" href="https://zhuanlan.zhihu.com/p/60291730" data-draft-node="block" data-draft-type="link-card" data-text="大钊：《InsideUE4》UObject（十二）类型系统-总结" class="LinkCard new css-1vqsdx1" data-image="https://picx.zhimg.com/v2-f1658e0ea3cec6570149515edcfb3f03_180x120.jpg" data-image-width="4096" data-image-height="1937"><span class="LinkCard-contents"><span class="LinkCard-title loading" data-text="true"></span><span class="LinkCard-desc loading"></span></span><span class="LinkCard-image LinkCard-image--default"></span></a></div><p data-pid="LezJsoFB"><i>UE4.21.2</i></p><p data-pid="M0nVnIa3">——————————————————————————————————————— </p><p data-pid="1geidIOZ">知乎专栏：<a href="https://zhuanlan.zhihu.com/insideue4" class="internal" target="_blank">InsideUE4</a></p><p data-pid="crY7sXna"> UE4深入学习QQ群：<b>456247757</b>(非新手入门群，请先学习完官方文档和视频教程，回答正确验证问题才能进入) </p><p data-pid="tKnFtqN7"><b>个人原创，未经授权，谢绝转载！</b></p></div></div></div></div><div role="button" tabindex="0" class="ContentItem-time">编辑于 2019-03-26 20:53</div><div class="Reward"><div><button class="Reward-rewardBtn">送礼物</button></div><div class="Reward-countZero css-1vbn52a">还没有人送礼物，鼓励一下作者吧</div></div><div class="PostIndex-Contributions"><h3 class="BlockTitle">内容所属专栏</h3><ul class="css-zein01"><div><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="https://www.zhihu.com/column/insideue4"><div class="css-1gomreu"><img class="Avatar css-1u7r5c9" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c11ce6a243a272cdab4264de925654cd_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c11ce6a243a272cdab4264de925654cd_l.jpg 2x" alt="InsideUE5"></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="https://www.zhihu.com/column/insideue4"><div class="css-1gomreu">InsideUE5</div></a></span></h2><div class="ContentItem-meta">深入UE5剖析源码，浅出游戏引擎架构理念</div></div><div class="ContentItem-extra"><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG">订阅专栏</button></div></div></div></div></ul></div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;20052447&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/20052447" target="_blank"><div class="css-1gomreu">虚幻 4（游戏引擎）</div></a></span></div><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19556258&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19556258" target="_blank"><div class="css-1gomreu">游戏引擎</div></a></span></div><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19553361&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19553361" target="_blank"><div class="css-1gomreu">游戏开发</div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-fixed is-bottom" style="width: 1280px; bottom: 0px; left: 286.333px;"><div class="ContentItem-actions" data-za-detail-view-path-module="BottomBar" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;id&quot;:&quot;59553490&quot;,&quot;token&quot;:&quot;59553490&quot;}}}"><span><button aria-label="赞同 128 " aria-live="polite" type="button" class="Button VoteButton VoteButton--up FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor"><path fill-rule="evenodd" d="M13.792 3.681c-.781-1.406-2.803-1.406-3.584 0l-7.79 14.023c-.76 1.367.228 3.046 1.791 3.046h15.582c1.563 0 2.55-1.68 1.791-3.046l-7.79-14.023Z" clip-rule="evenodd"></path></svg></span>赞同 128</button><button aria-label="反对" aria-live="polite" type="button" class="Button VoteButton VoteButton--down FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleDown" fill="currentColor"><path fill-rule="evenodd" d="M13.792 20.319c-.781 1.406-2.803 1.406-3.584 0L2.418 6.296c-.76-1.367.228-3.046 1.791-3.046h15.582c1.563 0 2.55 1.68 1.791 3.046l-7.79 14.023Z" clip-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button BottomActions-CommentBtn FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Comment Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>5 条评论</button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover2-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Share Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M19.47 1.914a.8.8 0 0 1 1.204.778l-1.872 16.386a.9.9 0 0 1-1.204.743l-4.615-1.692a.7.7 0 0 0-.831.28l-1.927 3.02c-.43.674-1.474.369-1.474-.43v-3.865a.8.8 0 0 1 .179-.504l5.808-7.148a.595.595 0 0 0-.897-.781l-5.93 6.354a1.1 1.1 0 0 1-1.258.252L2.57 13.46a.8.8 0 0 1-.08-1.415l16.98-10.13Z"></path></svg></span>分享</button></div></div><button aria-live="polite" type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Heart Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Star Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Deliver Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><g fill-rule="evenodd" clip-rule="evenodd"><path d="M7.821 12a.75.75 0 0 1 .75-.75h6.857a.75.75 0 0 1 0 1.5H8.571a.75.75 0 0 1-.75-.75ZM8.965 8a.75.75 0 0 1 .75-.75h4.571a.75.75 0 0 1 0 1.5H9.715a.75.75 0 0 1-.75-.75Z"></path><path d="M7.527 3.15a2.35 2.35 0 0 0-2.309 1.91L3.165 15.84a.85.85 0 0 0-.015.16v2.5a2.35 2.35 0 0 0 2.35 2.35h13a2.35 2.35 0 0 0 2.35-2.35V16a.848.848 0 0 0-.015-.16L18.78 5.06a2.35 2.35 0 0 0-2.308-1.91H7.527Zm0 1.7a.65.65 0 0 0-.639.528l-1.88 9.872h13.984l-1.88-9.872a.65.65 0 0 0-.64-.528H7.528Z"></path></g></svg></span>申请转载</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="Popover3-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--iconOnly fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY hIwDV_tcL6XN1HprrnAq"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Dots Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></span></button></div></div></div></div></div><div class="Sticky--holder" style="position: static; inset: auto auto 0px 0px; display: block; float: none; margin: 0px 0px 10px; height: 53.3333px;"></div></div></article><div class="Post-Sub Post-NormalSub"><div style="overflow: unset;" data-za-detail-view-path-module="CommentList" data-za-extra-module="{}"><div class="Comments-container css-plbgu"><div class="css-79elbk"><div><div class="css-1fo89v5"><img class="Avatar css-m4psdq" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x"><div class="css-14zbeoe"><div class="css-i6bazn"><div class="css-0"><div class="InputLike css-1rl4wxv Editable"><div style="min-height: 38px;" class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-fo8jp" style="white-space: pre-wrap;">理性发言，友善互动</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-fo8jp" class="notranslate public-DraftEditor-content" contenteditable="true" spellcheck="true" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;" tabindex="0" role="textbox"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="fo8jp" data-offset-key="5m4g8-0-0"><div data-offset-key="5m4g8-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="5m4g8-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><div></div><input multiple="" type="file" style="display: none;" accept="image/webp,image/jpg,image/jpeg,image/png,image/gif"></div></div></div></div></div></div><div class="css-u76jt1"><div class="css-1onritu"><div class="css-r4op92"><div class="css-1k10w8f">5 条评论</div></div><div class="css-59erns"></div><div class="css-97fdvh"><div class="css-m0zh86">默认</div><div class="css-1fjr6cy">最新</div></div></div><div class="css-840pn3"><div class="css-18ld3w0"><div data-id="10536113529"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2decb98406b46b365c8fc825f6c8e415" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-94eb97b6bd4eaac4a5fb18caaaab64f5_l.webp" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-94eb97b6bd4eaac4a5fb18caaaab64f5_l.webp 2x" alt="loopl" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2decb98406b46b365c8fc825f6c8e415" target="_blank" class="css-10u695f">loopl</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>Uproperty变为FProperty后 ConstructUProperty变为ConstructFProperty，EPropertyClass变为EPropertyGenFlags</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2023-04-21</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="10280134049"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/db0ffa6698a31f013aaff564ca4d10e3" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5608effd9d3dfc65ecbaf2378924c027_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5608effd9d3dfc65ecbaf2378924c027_l.jpg 2x" alt="李白" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/db0ffa6698a31f013aaff564ca4d10e3" target="_blank" class="css-10u695f">李白</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>大佬，请问下QQ加群的问题答案是什么呀？</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2022-09-08</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="620469898"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/66170062499f884aa0984ef3b8328c97" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg 2x" alt="卿小明" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/66170062499f884aa0984ef3b8328c97" target="_blank" class="css-10u695f">卿小明</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>敬业又温暖的大牛！</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2019-04-04</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="618606350"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/dae7210deb67ea198e25492bb24bf3a2" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-654ab3a1c54f2546d8cffbc7354d9e74_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-654ab3a1c54f2546d8cffbc7354d9e74_l.jpg 2x" alt="苍山不墨i" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/dae7210deb67ea198e25492bb24bf3a2" target="_blank" class="css-10u695f">苍山不墨i</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>sixsix!</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2019-04-01</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="610729773"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/863a86a8c994dbeace5776f41a804e0c" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f2b03999eb35ca4f42cf7c96eb3d4017_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f2b03999eb35ca4f42cf7c96eb3d4017_l.png 2x" alt="NEKO" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/863a86a8c994dbeace5776f41a804e0c" target="_blank" class="css-10u695f">NEKO</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4812630bc27d642f7cafcd6cdeca3d7a.png" class="css-1pj8qrb"></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">rua！感谢大佬更新</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2019-03-18</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div></div></div></div></div></div></div></div><div role="complementary" aria-label="推荐阅读" class="Recommendations-Main" style="width: 1263px;"><h3 class="BlockTitle Recommendations-BlockTitle">推荐阅读</h3><ul class="Recommendations-List"><button class="PagingButton PagingButton-Previous" disabled="disabled" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowLeft"><path fill-rule="evenodd" d="M14.609 6.322c.349.335.36.889.026 1.237l-4.253 4.438 4.254 4.444a.875.875 0 1 1-1.264 1.21l-4.834-5.05a.875.875 0 0 1 0-1.21l4.834-5.043a.875.875 0 0 1 1.237-.026Z" clip-rule="evenodd"></path></svg></button><a href="https://zhuanlan.zhihu.com/p/24439482" class="PostItem"><div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-e99c98c35ea5c6840a1f542a91ec5b23_250x0.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-e99c98c35ea5c6840a1f542a91ec5b23_qhd.jpg 2x" class="PostItem-TitleImage" alt="Vue 2 | Part 3 常用指令合集"><h1 class="PostItem-Title">Vue 2 | Part 3 常用指令合集</h1><div class="PostItem-Footer"><span>夏唯.0x...</span><span class="PostItem-FooterTitle">发表于零基础学前...</span></div></div></a><a href="https://zhuanlan.zhihu.com/p/354046895" class="PostItem"><div><h1 class="PostItem-Title">vue自定义指令实现拖拽，懒加载，防抖....</h1><p class="PostItem-Summary">关于自定义指令 在实际项目开发过程中，除了vue自身提供的一些固定指令，如v-if,v-show,v-model等除外，我们可能根据项目的需求来自己注册一些自定义的指令，更好的提高开发和工作效率。 如…</p><div class="PostItem-Footer"><span>心有猛虎qy</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/70749013" class="PostItem"><div><img src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-941185545af6ef46b1a6f27804312bcd_250x0.png" srcset="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/v2-941185545af6ef46b1a6f27804312bcd_qhd.png 2x" class="PostItem-TitleImage" alt="【Vue原理】NextTick - 源码版 之 独立自身"><h1 class="PostItem-Title">【Vue原理】NextTick - 源码版 之 独立自身</h1><div class="PostItem-Footer"><span>神仙朱</span><span class="PostItem-FooterTitle">发表于Vue 源...</span></div></div></a><a href="https://zhuanlan.zhihu.com/p/425663418" class="PostItem"><div><h1 class="PostItem-Title">TS结合vue3的一些初级使用方法</h1><p class="PostItem-Summary">1.父子组件传值通过 defineProps 函数来接收父组件传给子组件的值（我们拿模拟分页组件来进行示例）// ts 里面有两种写法，这是第一种，它可以自行推断接收的值是什么类型（对象除外） cons…</p><div class="PostItem-Footer"><span>灯光下小桥边</span><span class="PostItem-FooterTitle"></span></div></div></a><button class="PagingButton PagingButton-Next" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowRight"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></button></ul></div></div></div></main><div role="complementary"><div class="CornerButtons"><div class="CornerAnimayedFlex CornerAnimayedFlex--hidden"><button data-tooltip="回到顶部" data-tooltip-position="left" data-tooltip-will-hide-on-click="true" aria-label="回到顶部" type="button" class="Button CornerButton Button--plain css-4lspwd"><svg width="24" height="24" viewBox="0 0 24 24" aria-hidden="true" class="Zi Zi--BackToTop" fill="currentColor"><path fill-rule="evenodd" d="M13.204 3.107a1.75 1.75 0 0 0-2.408 0L3.806 9.73c-1.148 1.088-.378 3.02 1.204 3.02h2.24V20c0 .966.784 1.75 1.75 1.75h6A1.75 1.75 0 0 0 16.75 20v-7.25h2.24c1.582 0 2.353-1.932 1.204-3.02l-6.99-6.623Z" clip-rule="evenodd"></path></svg></button></div></div></div></div></div><script id="js-clientConfig" type="text/json">{"fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","lens":"https:\u002F\u002Flens.zhihu.com","zhida":"https:\u002F\u002Fzhida.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fapi\u002F","walletpay":"https:\u002F\u002Fwalletpay.zhihu.com","captcha":"https:\u002F\u002Fcaptcha.zhihu.com","vzuu":"https:\u002F\u002Fv.vzuu.com","openapi":"https:\u002F\u002Fopenapi.zhihu.com","svip":"https:\u002F\u002Fsvip.zhihu.com","event":"https:\u002F\u002Fevent.zhihu.com"},"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","videoHost":"video.zhihu.com","zhuanlanHost":"zhuanlan.zhihu.com","allowSignUp":true,"refreshValidityPeriod":"30","release":"2208-77d63458","currentEntry":"column","isMobileEntry":false,"apollo":{"env":"prod","globalSilence":"","ncgModeSign":"3f8e56febda4fb3bbea72e379d76de1e","logMobileUnAuth":"1","topstory_rec_adp":"1","topstory_hot_adp":"1","editor_adapt_native":"0","editor_auto_rotate":"0","enable_request_filter":"1","balanceModalSign":"ChYHAcB5ihJECkAFnhDAYmdhsTWVJoNc","reportBackendPublishError":"1","dynamic_font_schema":"1","enable_vzuu_login":"office","za_zse_ck_refer":"1","gamekeeper_office":"blue","gamekeeper_production":"blue","enable_utm_id_0":"0","test_canary":"member|0-100,1-0","use_new_player":"member|0-100,1-0","player_vendor":"member|0-100,1-0,2-0","use_hevc":"member|0-0,1-100","upload_use_signature":"member|0-0,1-100","use_backdrop_blur":"member|0-0,1-100","article_title_imagex":"member|0-0,1-100","play_station":"member|0-0,1-100","use_cached_supported_countries":"device|1-100,0-0","contentItem_cover_imagex":"member|0-0,1-100","use_qrcode_login_v2":"device|1-100,0-0"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{},"cities":{"cityData":[]}},"loading":{"global":{"count":0},"local":{"env\u002FgetIpinfo\u002F":false,"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false,"article\u002FloadPostSearchEntity\u002F":false}},"entities":{"users":{"ffde95bc6a24b298d237f46e35a3eb71":{"uid":1614187562792312800,"userType":"people","id":"ffde95bc6a24b298d237f46e35a3eb71"},"fjz13":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","kvipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae"},"targetUrl":"https:\u002F\u002Fwww.zhihu.com\u002Fkvip\u002Fpurchase"},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_l.png?source=172ae18b","description":"被 10000 个人关注","medalAvatarFrame":""}}},"questions":{},"answers":{},"articles":{"59553490":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fcontent_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=BiBUKF0xBSkqGGNWBWN0CV92AHMZes6RjR0PoA==&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__&zid=__ZONEID__"],"entityWords":[{"name":"BindLink","mention":"BindLink","matchorder":1,"begin":0,"end":0,"entityid":-5692973768156325000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=101363709&content_type=Article&match_order=1&q=BindLink&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJaCghCaW5kTGluaxIHVW5rbm93bhgAIAAoATUAAPBAOgdhcnRpY2xlQMm7s4vU0J\u002F\u002FsAFIClIkNTBlZjUwZTQtMzE2Ny00YTkyLWJhYWItMDYzN2VjZTc5MDFi8gLKAQokNTBlZjUwZTQtMzE2Ny00YTkyLWJhYWItMDYzN2VjZTc5MDFiGgdhcnRpY2xlIgkxMDEzNjM3MDk6CEJpbmRMaW5rQMm7s4vU0J\u002F\u002FsAFIAFIWYWlfZW50aXR5X2xsbV9yZWNhbGxlcl0AAPBAYloKCEJpbmRMaW5rEgdVbmtub3duGAAgACgBNQAA8EA6B2FydGljbGVAybuzi9TQn\u002F+wAUgKUiQ1MGVmNTBlNC0zMTY3LTRhOTItYmFhYi0wNjM3ZWNlNzkwMWI=","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"RegisterFn","mention":"RegisterFn","matchorder":1,"begin":1845,"end":1855,"entityid":-1243071703204388000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=101363709&content_type=Article&match_order=1&q=RegisterFn&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJeCgpSZWdpc3RlckZuEgdVbmtub3duGLUOIL8OKAE1AADwQDoHYXJ0aWNsZUDIxqbh85vu3+4BSApSJDUwZWY1MGU0LTMxNjctNGE5Mi1iYWFiLTA2MzdlY2U3OTAxYvIC0AEKJDUwZWY1MGU0LTMxNjctNGE5Mi1iYWFiLTA2MzdlY2U3OTAxYhoHYXJ0aWNsZSIJMTAxMzYzNzA5OgpSZWdpc3RlckZuQMjGpuHzm+7f7gFIAVIWYWlfZW50aXR5X2xsbV9yZWNhbGxlcl0AAPBAYl4KClJlZ2lzdGVyRm4SB1Vua25vd24YtQ4gvw4oATUAAPBAOgdhcnRpY2xlQMjGpuHzm+7f7gFIClIkNTBlZjUwZTQtMzE2Ny00YTkyLWJhYWItMDYzN2VjZTc5MDFi","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""}],"id":"59553490","title":"《InsideUE4》UObject（十一）类型系统构造-构造绑定链接","type":"article","articleType":"normal","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490","imageUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-9f219e0558772f16d5a91174bb750a60_720w.jpg?source=172ae18b","titleImage":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-9f219e0558772f16d5a91174bb750a60_720w.jpg?source=172ae18b","excerpt":"\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-496f535e9d3ade0580eb99e3193f1738_200x112.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"767\" data-rawheight=\"1056\" data-watermark=\"watermark\" data-original-src=\"v2-496f535e9d3ade0580eb99e3193f1738\" data-watermark-src=\"v2-a8bd69dd6125cc6f55f05e86470bad77\" data-private-watermark-src=\"\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-496f535e9d3ade0580eb99e3193f1738_r.jpg\"\u002F\u003E啊，你好长！\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490#%E5%BC%95%E8%A8%80\" class=\"internal\" target=\"_blank\"\u003E引言\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490#uenum\" class=\"internal\" target=\"_blank\"\u003EUEnum\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#uscriptstruct\" class=\"internal\" target=\"_blank\"\u003EUScriptStruct\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#icppstructops%E7%9A%84%E4%BD%9C%E7%94%A8\" class=\"internal\" target=\"_blank\"\u003EICppStructOps的作用\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#uclass\" class=\"internal\" target=\"_blank\"\u003EUClass\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#upackage\" class=\"internal\" target=\"_blank\"\u003EUPackage\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#uproperty\" class=\"internal\" target=\"_blank\"\u003EUProperty\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#ufunction\" class=\"internal\" target=\"_blank\"\u003EUFunction\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5\" class=\"internal\" target=\"_blank\"\u003E绑定链接\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#bind\" class=\"internal\" target=\"_blank\"\u003EBind\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#link\" class=\"internal\" target=\"_blank\"\u003ELink\u003C\u002Fa\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#%E6%80%BB%E7%BB%93\" class=\"internal\" target=\"_blank\"\u003E总结\u003C\u002Fa\u003E\u003Cb\u003E引言\u003C\u002Fb\u003E在上篇介绍了类型注册的最后阶段，为每一个enum、struct、class都进行了一次RegisterFn调用（忘了调用时机的请翻阅前文)，而这些RegisterF…","created":1552876559,"updated":1553604809,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","kvipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae"},"targetUrl":"https:\u002F\u002Fwww.zhihu.com\u002Fkvip\u002Fpurchase"},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_l.png?source=172ae18b","description":"被 10000 个人关注","medalAvatarFrame":""}},"commentPermission":"all","copyrightPermission":"need_review","state":"published","ipInfo":"","imageWidth":1080,"imageHeight":459,"content":"\u003Cblockquote data-pid=\"a5BuCEI-\"\u003E 啊，你好长！\u003C\u002Fblockquote\u003E\u003Cul\u003E\u003Cli data-pid=\"7epdm_9I\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490#%E5%BC%95%E8%A8%80\" class=\"internal\" target=\"_blank\"\u003E引言\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"jTUSMtDc\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490#uenum\" class=\"internal\" target=\"_blank\"\u003EUEnum\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"B77ce2fq\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#uscriptstruct\" class=\"internal\" target=\"_blank\"\u003EUScriptStruct\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cul\u003E\u003Cli data-pid=\"gFjux_2h\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#icppstructops%E7%9A%84%E4%BD%9C%E7%94%A8\" class=\"internal\" target=\"_blank\"\u003EICppStructOps的作用\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cli data-pid=\"7JE30bdt\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#uclass\" class=\"internal\" target=\"_blank\"\u003EUClass\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"KRffGcH0\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#upackage\" class=\"internal\" target=\"_blank\"\u003EUPackage\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"u19dB5qC\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#uproperty\" class=\"internal\" target=\"_blank\"\u003EUProperty\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"5vb5HmxF\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#ufunction\" class=\"internal\" target=\"_blank\"\u003EUFunction\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"kaAFjVLu\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5\" class=\"internal\" target=\"_blank\"\u003E绑定链接\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cul\u003E\u003Cli data-pid=\"XB_M7eLY\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#bind\" class=\"internal\" target=\"_blank\"\u003EBind\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"UQ_bw7_j\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#link\" class=\"internal\" target=\"_blank\"\u003ELink\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cli data-pid=\"JkRuUQQv\"\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490\u002Fedit#%E6%80%BB%E7%BB%93\" class=\"internal\" target=\"_blank\"\u003E总结\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Ch2\u003E\u003Cb\u003E引言\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"AZv_KRzC\"\u003E在上篇介绍了类型注册的最后阶段，为每一个enum、struct、class都进行了一次RegisterFn调用（忘了调用时机的请翻阅前文)，而这些RegisterFn其实都指向生成代码里的函数。本篇就来讲解这个里面的类型对象生成和构造。 按照生成顺序，也是调用顺序，一一讲解UEnum和UScriptStruct的生成，以及UClass的继续构造。 注意：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"hIf5ngFn\"\u003E代码里去除掉HotReload和MetaData的部分（那只是给编辑器提供额外信息的）。\u003C\u002Fli\u003E\u003Cli data-pid=\"cxCgJxeU\"\u003E代码里各Params的定义可到“代码生成重构”篇去查看，或者自己打开源码对照，都比较简单，就不列出来了。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch2\u003E\u003Cb\u003EUEnum\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"56mmSAVR\"\u003E先从软的开始捏，这是用来测试的MyEnum：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUENUM\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Emeta\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumDisplayNameFn\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;GetMyEnumDisplayName&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euint8\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EDance\u003C\u002Fspan\u003E   \u003Cspan class=\"nf\"\u003EUMETA\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDisplayName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;MyDance&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ERain\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUMETA\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDisplayName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;MyRain&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ESong\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUMETA\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDisplayName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;MySong&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EFText\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EGetMyEnumDisplayName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eint32\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eval\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F可以提供一个自定义函数给枚举来额外显示\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EenumValue\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eval\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eswitch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EenumValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003EDance\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFText\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFromString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;Hello_Dance&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003ERain\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFText\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFromString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;Hello_Rain&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003ESong\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFText\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFromString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;Hello_Song&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Edefault\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFText\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFromString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;Invalid MyEnum&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"pw_vhF2L\"\u003E生成代码的关键：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EMyEnum_StaticEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002FRegisterFn指向该函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGetStaticEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UEnum_Hello_MyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EZ_Construct_UPackage__Script_Hello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyEnum&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFCompiledInDeferEnum\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_CompiledInDeferEnum_UEnum_MyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyEnum_StaticEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;\u002FScript\u002FHello&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyEnum&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F收集点\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_Construct_UEnum_Hello_MyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F实际调用点\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnEnum\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFEnumeratorParam\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumerators\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;MyEnum::Dance&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eint64\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDance\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F注意枚举项的名字是以&#34;枚举::&#34;开头的\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;MyEnum::Rain&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eint64\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERain\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;MyEnum::Song&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eint64\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESong\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFEnumParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumParams\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)())\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UPackage__Script_Hello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEDynamicType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENotDynamic\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"s\"\u003E&#34;MyEnum&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003ERF_Public\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_Transient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_MarkAsNative\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EGetMyEnumDisplayName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F一般为nullptr，我们自定义了一个，所以这里才有\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Euint8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EECppForm\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"s\"\u003E&#34;MyEnum&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EEnumerators\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumerators\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EMETADATA_PARAMS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnum_MetaDataParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnum_MetaDataParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EConstructUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F最终生成点\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"CSSjlXOK\"\u003E生成代码里的收集点，把MyEnum_StaticEnum注册给了RegisterFn。调用的时候，内部的GetStaticEnum会调用参赛里的Z_Construct_UEnum_Hello_MyEnum。而Z_Construct_UEnum_Hello_MyEnum内部其实比较简单，定义了枚举项参数和枚举参数，最终发给UE4CodeGen_Private::ConstructUEnum调用。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EConstructUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOutEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFEnumParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F先确保创建Outer\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOutEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F防止重复构造\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewEnum\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEC_InternalUseOnlyConstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EObjectFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFObjectInitializer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F创建一个UEnum\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EOutEnum\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewEnum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F生成枚举名字值对数组\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETPair\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eint64\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumNames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EEnumNames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReserve\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumEnumerators\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFEnumeratorParam\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumerator\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumeratorParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumeratorEnd\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumerator\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumEnumerators\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumerator\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumeratorEnd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumerator\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EEnumNames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEmplace\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumerator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEnumerator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F设置枚举项数组\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ENewEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESetEnums\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEnumNames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EECppForm\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECppForm\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDynamicType\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEDynamicType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENotDynamic\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ENewEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECppType\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECppTypeUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002Fcpp名字\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDisplayNameFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ENewEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESetEnumDisplayNameFn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDisplayNameFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F设置自定义显示名字回调\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"bLWEgdBW\"\u003E基本上代码都是不言自明的，只有两处需要注意：一是OuterFunc()的调用是用来先确保外界所属于的UPackage存在。二是UEnum的构造，源码里用了重载new的方式，注意不是placement new。这个new的方式定义在\u003Ccode\u003EDECLARE_CLASS\u003C\u002Fcode\u003E宏中：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"cm\"\u003E\u002F** For internal use only; use StaticConstructObject() to create new objects. *\u002F\u003C\u002Fspan\u003E \n\u003Cspan class=\"kr\"\u003Einline\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoperator\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Enew\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInSize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEInternal\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInInternalOnly\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInOuter\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetTransientPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENAME_None\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEObjectFlags\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInSetFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ERF_NoFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EStaticAllocateObject\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInSetFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E \n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \n\u003Cspan class=\"cm\"\u003E\u002F** For internal use only; use StaticConstructObject() to create new objects. *\u002F\u003C\u002Fspan\u003E \n\u003Cspan class=\"kr\"\u003Einline\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoperator\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Enew\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esize_t\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInSize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEInternal\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInMem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInMem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"Rpdk7bEQ\"\u003E所以是会先触发StaticAllocateObject来分配出一块对象内存（简易初始化过的，后续对象分配章节再讲解），接着才会调用UEnum的构造函数，在构造完毕后再往里面填充枚举项。\u003C\u002Fp\u003E\u003Cp data-pid=\"6rrzUnrM\"\u003E\u003Cb\u003E思考：为什么不用我们常用的NewObject来创建UEnum呢？\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"nQSiLOIE\"\u003E实际上，这里如果换成\u003Ccode\u003EUEnum* NewEnum= NewObject&lt; UEnum&gt;(Outer, UTF8_TO_TCHAR(Params.NameUTF8), Params.ObjectFlags);\u003C\u002Fcode\u003E也是可行的。那么这二者差在哪呢？微乎其微。二者的流程大体都是一样的，只差在FObjectInitializer的值不一样，new构造会调用\u003Ccode\u003EFObjectInitializer()\u003C\u002Fcode\u003E默认构造函数，而NewObject会调用\u003Ccode\u003EFObjectInitializer(Result, InTemplate, bCopyTransientsFromClassDefaults, true, InInstanceGraph)\u003C\u002Fcode\u003E。其中差在第4个参数\u003Ccode\u003EbShouldInitializePropsFromArchetype\u003C\u002Fcode\u003E，前者默认为=false，会略过构造过程中的UClass里属性值初始化的过程。因为enum里也没有属性，所以略过该过程会稍微提高点性能，但也微乎其微啦。\u003C\u002Fp\u003E\u003Cp data-pid=\"k2eAl7HX\"\u003E继续往里面看下SetEnums\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESetEnums\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETPair\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eint64\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInNames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEnum\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EECppForm\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInCppForm\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EbAddMaxKeyIfMissing\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ERemoveNamesFromMasterList\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F去除之前的名字\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ENames\u003C\u002Fspan\u003E   \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInNames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ECppForm\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInCppForm\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EbAddMaxKeyIfMissing\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EContainsExistingMax\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E())\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMaxEnumItem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGenerateFullEnumName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGenerateEnumPrefix\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;_MAX&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)));\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ELookupEnumName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMaxEnumItem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EINDEX_NONE\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                \u003Cspan class=\"c1\"\u003E\u002F\u002F the MAX identifier is already being used by another enum\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E                \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003ENames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEmplace\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMaxEnumItem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGetMaxEnumValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EAddNamesToMasterList\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"5v5GaMQ1\"\u003E代码也很简单，enum就是简单呀。有两个操作比较重要：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"w4_Z9kTv\"\u003ERemoveNamesFromMasterList和AddNamesToMasterList一起维护UEnum里的\u003Ccode\u003Estatic TMap&lt;FName, UEnum*&gt; AllEnumNames;\u003C\u002Fcode\u003E，该数据结构可以允许我们通过一个枚举项名字来搜索到枚举类型。比如通过&#34;MyEnum::Dance&#34;用LookupEnumName来返回枚举的UEnum*。\u003C\u002Fli\u003E\u003Cli data-pid=\"gizjSTTY\"\u003EbAddMaxKeyIfMissing在native的情况下为true，所以在C++里定义的枚举，其实是会自动添加一项形如\u003Ccode\u003EMyEnum::MyEnum_MAX=最大值+1\u003C\u002Fcode\u003E，方便蓝图中使用。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"Z7GX0TNN\"\u003E然后就enum就结束啦！\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003EUScriptStruct\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"cN4ELK8C\"\u003E依然来先看下结构的测试代码：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUSTRUCT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUPROPERTY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintReadWrite\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"MFrq6P6S\"\u003EUE里的结构不可继承自c++ struct，但可以继承自USTRUCT标记的struct，里面也不可以添加UFUNCTION。以上的测试代码非常简单，生成代码(为了可读性进行了一些排版调整)：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002FRegisterFn指向该函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGetStaticStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UScriptStruct_FMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EZ_Construct_UPackage__Script_Hello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyStruct&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Esizeof\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGet_Z_Construct_UScriptStruct_FMyStruct_CRC\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingleton\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFCompiledInDeferStruct\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_CompiledInDeferStruct_UScriptStruct_FMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;\u002FScript\u002FHello&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyStruct&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E     \u003Cspan class=\"c1\"\u003E\u002F\u002F收集点\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EFScriptStruct_Hello_StaticRegisterNativesFMyStruct\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EFScriptStruct_Hello_StaticRegisterNativesFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDeferCppStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyStruct&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)),\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETCppStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EScriptStruct_Hello_StaticRegisterNativesFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F收集点\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EZ_Construct_UScriptStruct_FMyStruct_Statics\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003ENewStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F创建结构操作辅助类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EICppStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETCppStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F属性参数...\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F结构参数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFStructParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnStructParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)())\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UPackage__Script_Hello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FOuter\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F构造基类的函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F构造结构操作类的函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"s\"\u003E&#34;MyStruct&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F结构名字\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003ERF_Public\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_Transient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_MarkAsNative\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F对象标记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EEStructFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x00000201\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F结构标记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Esizeof\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F结构大小\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Ealignof\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F结构内存对齐\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F属性列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_Construct_UScriptStruct_FMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F真正的构造实现\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnStruct\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EConstructUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EZ_Construct_UScriptStruct_FMyStruct_Statics\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnStructParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"a8KIn4ls\"\u003E同Enum的套路一样，RegisterFn指向\u003Ccode\u003EFMyStruct::StaticStruct()\u003C\u002Fcode\u003E函数，其内部会继续调用\u003Ccode\u003EZ_Construct_UScriptStruct_FMyStruct\u003C\u002Fcode\u003E。最终还是用\u003Ccode\u003EConstructUScriptStruct\u003C\u002Fcode\u003E来通过参数生成UScriptStruct。而那些参数我在代码里的注释一看也都明白，结构套结构而已。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EConstructUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOutStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFStructParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F构造Outer\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuper\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESuperFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESuperFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F构造SuperStruct\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EICppStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EStructOps\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStructOpsFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStructOpsFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F构造结构操作类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOutStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F构造UScriptStruct\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewStruct\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEC_InternalUseOnlyConstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EObjectFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUScriptStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFObjectInitializer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuper\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EStructOps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEStructFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStructFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESizeOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAlignOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EOutStruct\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F构造属性集合\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EConstructUProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F链接\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ENewStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"xcEYfljS\"\u003E和UEnum一样的模式调用，先依次构造出依赖的Outer、Super和CppStructOps。然后依然是overload new构造出UScriptStruct。但是UScriptStruct的构造函数里多了一步调用\u003Ccode\u003EPrepareCppStructOps\u003C\u002Fcode\u003E（比较简单提一下，主要是从CppStructOps提出特征然后存在StructFlags里）。 接着的\u003Ccode\u003EConstructUProperties\u003C\u002Fcode\u003E是个从属性参数数组里构造出UProperty*数组，在后面构造UClass*的时候也会复用调用到。因此留待后文一起讲解。 所有复合类型（继承于UStruct）都会接着调用\u003Ccode\u003EStaticLink\u003C\u002Fcode\u003E来链接子属性。关于Link的作用在后文讲解。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003EICppStructOps的作用\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"7UWnhOKD\"\u003E很多朋友在看源码的时候，可能会对UScriptStruct里定义的ICppStructOps类以及模板子类TCppStructOps&lt;CPPSTRUCT&gt;感到疑惑。其实它们是C++的一种常见的架构模式，用一个虚函数基类定义一些公共操作，再用一个具体模板子类来实现，从而既可以保存类型，又可以有公共操作接口。\u003C\u002Fp\u003E\u003Cp data-pid=\"eMPZLgZS\"\u003E针对于UE4这里来说，ICppStructOps就定义了这个结构的一些公共操作。而探测这个C++结构的一些特性就交给了TCppStructOps&lt;CPPSTRUCT&gt;类里的TStructOpsTypeTraits&lt;CPPSTRUCT&gt;。一些C++结构的信息不能通过模板探测出来的，就需要我们手动标记提供了，所以具体的代码是：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"k\"\u003Etemplate\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ECPPSTRUCT\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ETStructOpsTypeTraitsBase2\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eenum\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EWithZeroConstructor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 0构造，内存清零后就可以了，说明这个结构的默认值就是0\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithNoInitConstructor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有个ForceInit的参数的构造，用来专门构造出0值结构来\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithNoDestructor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 是否没有结构有自定义的析构函数， 如果没有析构的话，DestroyStruct里面就可以省略调用析构函数了。默认是有的。结构如果是pod类型，则肯定没有析构。\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithCopy\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETIsPODType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECPPSTRUCT\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 是否结构有自定义的=赋值函数。如果没有的话，在CopyScriptStruct的时候就只需要拷贝内存就可以了\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithIdenticalViaEquality\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 用==来比较结构\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithIdentical\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个自定义的Identical函数来专门用来比较，和WithIdenticalViaEquality互斥\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithExportTextItem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个ExportTextItem函数来把结构值导出为字符串\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithImportTextItem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个ImportTextItem函数把字符串导进结构值\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithAddStructReferencedObjects\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个AddStructReferencedObjects函数用来添加结构额外的引用对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithSerializer\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个Serialize函数用来序列化\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithStructuredSerializer\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个结构结构Serialize函数用来序列化\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithPostSerialize\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个PostSerialize回调用来在序列化后调用\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithNetSerializer\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个NetSerialize函数用来在网络复制中序列化\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithNetDeltaSerializer\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个NetDeltaSerialize函数用来在之前NetSerialize的基础上只序列化出差异来，一般用在TArray属性上进行优化\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithSerializeFromMismatchedTag\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个SerializeFromMismatchedTag函数用来处理属性tag未匹配到的属性值，一般是在结构进行升级后，但值还是原来的值，这个时候用来把旧值升级到新结构时使用\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithStructuredSerializeFromMismatchedTag\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F SerializeFromMismatchedTag的结构版本\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithPostScriptConstruct\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F 有一个PostScriptConstruct函数用在蓝图构造脚本后调用\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EWithNetSharedSerialization\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 指明结构的NetSerialize函数不需要用到UPackageMap\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Etemplate\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ECPPSTRUCT\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ETStructOpsTypeTraits\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETStructOpsTypeTraitsBase2\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECPPSTRUCT\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"W_2tKfjl\"\u003E这些枚举值定义了一个结构的特性，我已经在源码里一一解释了。 说回ICppStructOps里的接口，内部实现大部分都是通过TStructOpsTypeTraits&lt;CPPSTRUCT&gt;的结构来分别调用不同版本的函数。结构的操作可以分为：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"lHbPAPtg\"\u003E构造：HasNoopConstructor、HasZeroConstructor、Construct、HasPostScriptConstruct、PostScriptConstruct、IsAbstract\u003C\u002Fli\u003E\u003Cli data-pid=\"J10Y6_UQ\"\u003E析构：HasDestructor、Destruct\u003C\u002Fli\u003E\u003Cli data-pid=\"TDwt1JNR\"\u003E拷贝：IsPlainOldData、HasCopy、Copy\u003C\u002Fli\u003E\u003Cli data-pid=\"QkqpXiG9\"\u003E比较：HasIdentical、Identical\u003C\u002Fli\u003E\u003Cli data-pid=\"tL2YdwOu\"\u003E导入导出：HasExportTextItem、ExportTextItem、HasImportTextItem、ImportTextItem\u003C\u002Fli\u003E\u003Cli data-pid=\"besOSZCU\"\u003EGC：HasAddStructReferencedObjects、AddStructReferencedObjects\u003C\u002Fli\u003E\u003Cli data-pid=\"YjaxrYDB\"\u003E序列化：HasSerializer、HasStructuredSerializer、Serialize、HasPostSerialize、PostSerialize、HasNetSerializer、HasNetSharedSerialization、NetSerialize、HasNetDeltaSerializer、NetDeltaSerialize、HasSerializeFromMismatchedTag、HasStructuredSerializeFromMismatchedTag、SerializeFromMismatchedTag、StructuredSerializeFromMismatchedTag\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"lcKzjt1V\"\u003E有了ICppStructOps的公共接口，和上面特化的信息，UE4在内部对结构进行构造析构或序列化的时候，就可以选择最优的步骤(比如拷贝的时候只需要直接拷贝内存而不需要调用赋值函数)，在GC的时候，也可以告诉UE4这个结构内部有可能有额外的UObject*对象。从而让UE4实现对该结构实现出更高的性能。\u003C\u002Fp\u003E\u003Cp data-pid=\"2Eu7W7F7\"\u003E比如对于常见的FVector来说，源码里就定义了这么一个特化来描述其特性：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"k\"\u003Etemplate\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003ETStructOpsTypeTraits\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFVector\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETStructOpsTypeTraitsBase2\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFVector\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eenum\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EWithNoInitConstructor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EWithZeroConstructor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EWithNetSerializer\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EWithNetSharedSerialization\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EWithSerializer\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"JXQNuTLx\"\u003E一看我们就知道FVector有个0值构造函数，和有Serializer函数。对于我们自己定义的UStruct，如果有需要，也可以定义这么一个模板特化，来更详细的提供结构信息。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003EUClass\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"e7wPm9pD\"\u003E接着是我们自己最常用的Class和Interface，一起梭哈一把：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUINTERFACE\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyInterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUInterface\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EIMyInterface\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintNativeEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENativeInterfaceFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintImplementableEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EImplementableInterfaceFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyClass\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIMyInterface\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUPROPERTY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintReadWrite\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECategory\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;Hello&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Eint32\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eparam1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002FC++实现，蓝图调用\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintNativeEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECategory\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;Hello&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENativeFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002FC++实现默认版本，蓝图可重载实现\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintImplementableEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECategory\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;Hello&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EImplementableFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002FC++不实现，蓝图实现\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"yacQYMjq\"\u003E生成的代码的关键部分（做了些排版调整）：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F函数参数...\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EZ_Construct_UClass_UMyClass_Statics\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F依赖项列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EDependentSingletons\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[])()\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)())\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UClass_UObject\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F依赖基类UObject\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)())\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UPackage__Script_Hello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F依赖所属于的Hello模块\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F属性参数...\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F函数参数...\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F接口\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFImplementedInterfaceParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInterfaceParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EZ_Construct_UClass_UMyInterface_NoRegister\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F构造UMyInterface所属的UClass*函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eint32\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EVTABLE_OFFSET\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIMyInterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F多重继承的指针偏移\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F是否是在蓝图实现\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFCppClassTypeInfoStatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EStaticCppClassTypeInfo\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ETCppClassTypeTraits\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsAbstract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002Fc++类信息，是否是虚类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFClassParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClassParams\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F取出UClass*的函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EDependentSingletons\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDependentSingletons\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F依赖项\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"mh\"\u003E0x001000A0u\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F类标志\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EFuncInfo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFuncInfo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F函数列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F属性列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FConfig文件名\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticCppClassTypeInfo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002Fc++类信息\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EInterfaceParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInterfaceParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F接口列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_Construct_UClass_UMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuterClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EConstructUClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EZ_Construct_UClass_UMyClass_Statics\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuterClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EIMPLEMENT_CLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E4008851639\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F收集点\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFCompiledInDefer\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_CompiledInDefer_UClass_UMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UClass_UMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;\u002FScript\u002FHello&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;UMyClass&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F收集点\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"XcAKfimu\"\u003EClass的信息就比较多了，可以拥有接口、属性和函数。属性和函数在后文讲解，多出来的MyInterface，因为也是个UObject类，所以其实也会对UMyInterface生成一个UClass*对象并添加函数，和UMyClass的模式是一样的，因此不再赘述。但UMyClass因为继承于IMyInterface，因此就要在UMyClass的UClass*里添加额外的接口继承信息。C++里实现interface是用多继承，因此就有对象基类指针偏移的问题（不懂这个的同学请自觉补C++基础的课），于是FImplementedInterfaceParams里每一项就有一个用VTABLE_OFFSET获取的指针偏移，有了Offset就可以根据Obj+Offset来获取IMyInterface*地址，从而调用接口函数，这也是GetInterfaceAddress的逻辑实现。\u003C\u002Fp\u003E\u003Cp data-pid=\"YDCN_yJS\"\u003E\u003Ccode\u003EFCppClassTypeInfoStatic\u003C\u002Fcode\u003E的作用其实和结构的\u003Ccode\u003EICppStructOps\u003C\u002Fcode\u003E差不多，都是识别原生C++里的类型信息，但UClass毕竟和UStruct的作用不一样，没有那些纯内存构造析构的操作，也都必然有序列化器，所以\u003Ccode\u003EFCppClassTypeInfoStatic\u003C\u002Fcode\u003E里目前只有一项bIsAbstract来判断是否该类是虚类。\u003C\u002Fp\u003E\u003Cp data-pid=\"PWPJmZs2\"\u003E构造的代码（做了些排版和易读调整）：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EConstructUClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOutClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFClassParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOutClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOutClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_Constructed\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F防止重复构造\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumDependencySingletons\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDependencySingletonFuncArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E]();\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F构造依赖的对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassNoRegisterFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F取得先前生成的UClass*，NoRegister是指没有经过DeferRegister\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EOutClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_Constructed\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F防止重复构造\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUObjectForceRegistration\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F确保此UClass*已经注册\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEClassFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_Constructed\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F标记已经构造\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E((\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_Intrinsic\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_Intrinsic\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Echeck\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E((\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_TokenStreamAssembled\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_TokenStreamAssembled\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReferenceTokenStream\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEmpty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F对于蓝图类需要重新生成一下引用记号流\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F构造函数列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECreateLinkAndAddChildFunctionsToMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunctionLinkArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F构造属性列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EConstructUProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassConfigNameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F配置文件名\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassConfigName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassConfigNameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESetCppTypeInfoStatic\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECppClassInfo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FC++类型信息\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumImplementedInterfaces\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInterfaces\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReserve\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumImplementedInterfaces\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Eint\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumImplementedInterfaces\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eauto\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EImplementedInterface\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EImplementedInterfaceArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Ei\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E];\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EImplementedInterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInterfaceClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClassFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClassFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F取得UMyInterface所属于的UClass*对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInterfaces\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEmplace\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInterfaceClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EImplementedInterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOffset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EImplementedInterface\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EbImplementedByK2\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F添加实现的接口\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003ENewClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F链接\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"PUZJ95WS\"\u003E构造的过程也很简明，无非是先确保一下依赖对象已经存在，然后一一把各种信息：函数、属性、配置文件名、C++类型信息和接口添加到UClass*里去。重要的只有三步：\u003Ccode\u003EConstructUProperties\u003C\u002Fcode\u003E和UScriptStruct的时候一样；接口的实现是通过UClass*里的\u003Ccode\u003ETArray&lt;FImplementedInterface&gt; Interfaces\u003C\u002Fcode\u003E数组表达的；\u003Ccode\u003ECreateLinkAndAddChildFunctionsToMap\u003C\u002Fcode\u003E创造函数列表。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECreateLinkAndAddChildFunctionsToMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFClassFunctionLinkInfo\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Euint32\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENumFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENumFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E--\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Echar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFuncNameUTF8\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFuncNameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E  \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E         \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECreateFuncPtr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F调用构造UFunction*对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENext\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EChildren\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EChildren\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F新函数挂在UField*链表的开头\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EAddFunctionToFunctionMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFuncNameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)));\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c1\"\u003E\u002F\u002F内部实现是：FuncMap.Add(FuncName, Function);添加到FuncMap里\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"dLvmOCZh\"\u003E一个个创建UFunction*对象然后添加到FuncMap里去就是了。这里有意思的一点是，Children其实一个UField*的单链表，添加属性和函数都是直接挂在链表头的。通过构造顺序（CreateLinkAndAddChildFunctionsToMap先，ConstructUProperties次之）可以得知，最后Children的顺序是先所有UProperty*，之后才是所有的UFunction*。但UProperty*的顺序跟代码里定义的顺序一致，因为UHT生成的代码里PropPointers里恰好是倒序排列的。而UFunction*的顺序是根据函数名字排序后的反序。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003EUPackage\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"BICXGLnX\"\u003E我们注意到在构造UEnum、UScriptScript和UClass的一开始都有一个构造Outer的过程，这个OuterFunc其实指向了这个Module的Package的构造，这个函数一般在模块的init.gen.cpp里。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FHello.init.gen.cpp\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_Construct_UPackage__Script_Hello\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnPackage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F先构造代码里的Dynamic Delegate\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingletonFuncArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[])()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)())\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UDelegateFunction_Hello_MyDynamicSinglecastDelegate_One__DelegateSignature\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)())\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UDelegateFunction_Hello_MyDynamicMulticastDelegate_One__DelegateSignature\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFPackageParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPackageParams\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"s\"\u003E&#34;\u002FScript\u002FHello&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EPKG_CompiledIn\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"mh\"\u003E0x00000000\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"mh\"\u003E0x135222B4\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"mh\"\u003E0x392E1CFD\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003ESingletonFuncArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingletonFuncArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EMETADATA_PARAMS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EConstructUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPackageParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F构造Pacakge\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002FDECLARE_DYNAMIC_DELEGATE_OneParam(FMyDynamicSinglecastDelegate_One, int32, Value);\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"vkvH5zhu\"\u003E唯一需要提醒的是对于代码里定义的动态委托（DynamicDelegate），其实是会在相应地生成UFunction*对象。这些散乱的DynamicDelegate是可以定义在类外面的，因此就不属于任一UClass*对象，所以就只好属于模块Package了。 构造代码也比较简单：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EConstructUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOutPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFPackageParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOutPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewPackage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECastChecked\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticFindObjectFast\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)),\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F找到之前创建的Package\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EOutPackage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003ENewPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESetPackageFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPackageFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F设定标记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ENewPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESetGuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFGuid\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBodyCRC\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDeclarationsCRC\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0u\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0u\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingletonFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingletonFuncArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingletonFuncEnd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingletonFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumSingletons\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingletonFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESingletonFuncEnd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingletonFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESingletonFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F调用构造前提对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"ocWnQPlh\"\u003E需要注意的是ConstructUPackage这个时候，其实UPackage在之前UClass*对象Register的时候就已经Create出来了，所以只需要查找一下就行，然后设定一下信息标记，最后创建这个UPackage里的UFunction*对象。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003EUProperty\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"eJR9jCxj\"\u003E终于在前面讲完了大块头的构造，接着来说一下小小的属性。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F一个个属性的参数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFFloatPropertyParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewProp_Score\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \n    \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEPropertyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFloat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n    \u003Cspan class=\"s\"\u003E&#34;Score&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n    \u003Cspan class=\"n\"\u003ERF_Public\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_Transient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_MarkAsNative\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F对象标记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEPropertyFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x0010000000000004\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F属性标记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F数组维度，固定的数组的大小\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002FRepNotify函数的名称\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ESTRUCT_OFFSET\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFMyStruct\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F属性的结构偏移地址\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n \u003Cspan class=\"c1\"\u003E\u002F\u002F结构参数数组，会发送给ConstructUProperties来构造。\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFPropertyParamsBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewProp_Score\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"Rmo3gJ6w\"\u003EConstructUProperties其实就是会遍历数组调用ConstructUProperty：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EConstructUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFPropertyParamsBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPropertyArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eint32\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENumProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFPropertyParamsBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPropBase\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003Euint32\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReadMore\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewProp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eswitch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n       \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEPropertyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003EArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFArrayPropertyParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFArrayPropertyParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropBase\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003ENewProp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEC_InternalUseOnlyConstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProp\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProp\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EObjectFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUArrayProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFObjectInitializer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEC_CppProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProp\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOffset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProp\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F构造Property对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n            \u003Cspan class=\"c1\"\u003E\u002F\u002F Next property is the array inner\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"n\"\u003EReadMore\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F需要一个子属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ebreak\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Fcase其他的各种类型属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003ENewProp\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EArrayDim\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPropBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EArrayDim\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F设定属性维度，单属性为1，int32 prop[10]这种的为10\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERepNotifyFuncUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F属性的复制通知函数名\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003ENewProp\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERepNotifyFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERepNotifyFuncUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"o\"\u003E--\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReadMore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E--\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReadMore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F构造子属性，注意这里以现在的属性NewProp为Outer\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EConstructUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewProp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPropertyArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENumProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"pXZknU3P\"\u003EUHT会分析我们代码里的定义的属性类型，来生成不同的FPropertyParams类型。根据不同的EPropertyClass，构造生成不同类型的UProperty*。同时对于一些复合的属性类型，需要生成1或2个子属性。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-a8bd69dd6125cc6f55f05e86470bad77_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"767\" data-rawheight=\"1056\" data-original-token=\"v2-496f535e9d3ade0580eb99e3193f1738\" class=\"origin_image zh-lightbox-thumb\" width=\"767\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-a8bd69dd6125cc6f55f05e86470bad77_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"W9ujrse0\"\u003E这个表提供给大家对照。还有点需要注意的是UProperty的构造函数里会把自己添加到Outer里去：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInit\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGetOuterUField\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddCppProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FAddCppProperty是个虚函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F重载\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUArrayProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddCppProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EInner\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F元素属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMapProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddCppProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EKeyProp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EKeyProp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F第一个是键属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EValueProp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F第二个是值属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUSetProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddCppProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EElementProp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F元素属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEnumProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddCppProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInner\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUnderlyingProp\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECastChecked\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUNumericProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInner\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F依靠的整数属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddCppProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENext\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EChildren\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EChildren\u003C\u002Fspan\u003E       \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F新属性挂在UField*链表的开头\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2\u003E\u003Cb\u003EUFunction\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"MRVb1lJM\"\u003E属性说完，再来宠幸一下函数吧。测试代码请往上滚滚滚去MyClass里查看。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F测试函数：int32 Func(float param1);\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EImplementableFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002FUHT为我们生成了函数实体\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EProcessEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFindFunctionChecked\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;ImplementableFunc&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENativeFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002FUHT为我们生成了函数实体，但我们可以自定义_Implementation\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EProcessEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFindFunctionChecked\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;NativeFunc&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticRegisterNativesUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F之前的Native函数收集点\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFNameNativePtrPair\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFuncs\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;Func&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EexecFunc\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;NativeFunc&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EexecNativeFunc\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EFNativeFunctionRegistrar\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERegisterFunctions\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFuncs\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFuncs\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EZ_Construct_UFunction_UMyClass_Func_Statics\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estruct\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EMyClass_eventFunc_Parms\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F把所有参数打包成一个结构来存储\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eparam1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003Eint32\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFIntPropertyParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewProp_ReturnValue\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \n        \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEPropertyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"s\"\u003E&#34;ReturnValue&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"n\"\u003ERF_Public\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_Transient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_MarkAsNative\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEPropertyFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x0010000000000580\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"n\"\u003ESTRUCT_OFFSET\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyClass_eventFunc_Parms\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFFloatPropertyParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewProp_param1\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \n        \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEPropertyClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFloat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"s\"\u003E&#34;param1&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"n\"\u003ERF_Public\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_Transient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_MarkAsNative\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEPropertyFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x0010000000000080\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"mi\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \n        \u003Cspan class=\"n\"\u003ESTRUCT_OFFSET\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyClass_eventFunc_Parms\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Eparam1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F函数的子属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFPropertyParamsBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewProp_ReturnValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F返回值也用属性表示\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewProp_param1\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E        \u003Cspan class=\"c1\"\u003E\u002F\u002F参数用属性表示\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F函数的参数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFFunctionParams\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFuncParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \n        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)())\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UClass_UMyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F外部对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"s\"\u003E&#34;Func&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F名字\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003ERF_Public\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_Transient\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERF_MarkAsNative\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F对象标记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F父函数，在蓝图中重载基类函数时候指向基类函数版本\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEFunctionFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"mh\"\u003E0x04020401\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F函数标记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Esizeof\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyClass_eventFunc_Parms\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F属性的结构大小\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EARRAY_COUNT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropPointers\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F属性列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002FRPCId\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002FRPCResponseId\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EZ_Construct_UFunction_UMyClass_Func\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnFunction\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F构造函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EUE4CodeGen_Private\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EConstructUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReturnFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EZ_Construct_UFunction_UMyClass_Func_Statics\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFuncParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReturnFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002F其他函数...\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFClassFunctionLinkInfo\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFuncInfo\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F发给ClassParams来构造UClass*\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UFunction_UMyClass_Func\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;Func&#34;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 2606493682\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UFunction_UMyClass_ImplementableFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;ImplementableFunc&#34;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 3752866266\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EZ_Construct_UFunction_UMyClass_NativeFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;NativeFunc&#34;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E},\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F 3036938731\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E \n\u003Cspan class=\"c1\"\u003E\u002F\u002F接口函数...\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIMyInterface\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EExecute_ImplementableInterfaceFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F通过名字查找函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFindFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;ImplementableInterfaceFunc&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProcessEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F找不到，其实不会报错，所以是在尝试调用一个接口函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIMyInterface\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EExecute_NativeInterfaceFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F通过名字查找函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFindFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;NativeInterfaceFunc&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProcessEvent\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eauto\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EI\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIMyInterface\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EO\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetNativeInterfaceAddress\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyInterface\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E())))\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F如果找不到蓝图中的版本，则会尝试调用C++里的_Implementation默认实现。\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EI\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENativeInterfaceFunc_Implementation\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"ZSm2-88F\"\u003E代码有点多，但其实结构还是很简单的。函数的参数和返回值都打包成一个结构（MyClass_eventFunc_Parms），这样UProperty才能有一个Offset的宿主。但有意思的是，其实这个结构（MyClass_eventFunc_Parms）我们只需要它的大小，并不需要它的实际类型定义，因为只要用它分配一块内存布局一致的内存就可以了。\u003C\u002Fp\u003E\u003Cp data-pid=\"h9u0fy2R\"\u003E我们可以看见，UHT为我们生成了一些函数的默认实现，如ImplementableFunc何NativeFunc，还有接口里的函数，所以我们不应该在C++里再重复实现（写了也会报错）。它们的内部实现也都是通过ProcessEvent来调用蓝图中的版本，或者调用C++里的_Implementation默认版本实现。 开始构造的过程如下：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EConstructUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOutFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFFunctionParams\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E   \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuterFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuper\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESuperFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E?\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESuperFunc\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOutFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;}\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunctionFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFUNC_Delegate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F生成委托函数\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EOutFunction\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEC_InternalUseOnlyConstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EObjectFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUDelegateFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003EFObjectInitializer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003ESuper\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunctionFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStructureSize\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EOutFunction\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEC_InternalUseOnlyConstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUTF8_TO_TCHAR\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENameUTF8\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EObjectFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003EFObjectInitializer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003ESuper\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFunctionFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\n                \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStructureSize\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"n\"\u003EConstructUProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOutFunction\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyArray\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EParams\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENumProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F生成属性列表\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EOutFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F函数绑定\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EOutFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F函数链接\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"oqp0wyN0\"\u003E构造的老套路是生成依赖，然后再new出对象，UFunction生成UProperty列表当做参数和返回值，最后再依次Bind和Link。其中一个function的SuperFunc表达的其实是函数的从基类继承重载下来，它其实指向的是基类里的函数版本。但在C++里其实一直是nullptr，因为C++里继承一个UFUNCION，不允许子类重复加UFUNCION标记，避免出现UFUNCION里标记不一致的情况，但是因为是virtual，所以其实也是可以正常多态的。那什么时候\u003Ccode\u003EUFunction* GetSuperFunction()\u003C\u002Fcode\u003E的才有值呢？答案是在蓝图里使用的时候，蓝图里所有函数其实都是UFunction，所以在继承重载的时候，子类函数的SuperFunction就会指向基类的版本。如我们新创建一个BPMyActor继承自AActor，就会默认出现4个重载函数：\u003Ccode\u003EReceiveBeginPlay、ReceiveTick、ReceiveActorBeginOverlap、UserConstructionScript\u003C\u002Fcode\u003E，它们的Outer其实是基类版本的同名UFunction*（其他的是属于外部的UStruct或UPacakge）。也正是因为如此，UE知道这个函数是重载下来的，所以在该蓝图节点上点右键，才有“AddParentCall”啊。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E绑定链接\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"FBP6piKa\"\u003E事实上在构造完各类型对象后，还需要再梳理一遍，完成一些后初始化工作。跟C++的编译机制有点像，最后一步都是链接，通过符号定位到函数地址来替换。UE里也一样，需要这么一个绑定链接操作。之前的时候有谈到Bind和StaticLink都略过了，这时再来讲解一下内部的操作。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003EBind\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"GEX0ECPo\"\u003E\u003Cb\u003E绑定的作用是把函数指针绑定到正确的地址！\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"CrBr3Quo\"\u003EBind其实是定义在UField里的方法：\u003Ccode\u003Evirtual void Bind(){}\u003C\u002Fcode\u003E，代表所有的字段都可能需要重载这么一个绑定操作，只不过事实上只有UFunction和UClass才有这两个操作。\u003C\u002Fp\u003E\u003Cp data-pid=\"XZJWzz84\"\u003EUFunction::Bind()的目的是把\u003Ccode\u003EFNativeFuncPtr Func\u003C\u002Fcode\u003E绑定到正确的函数指针里去。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUFunction\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOwnerClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGetOwnerClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EHasAnyFunctionFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFUNC_Native\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProcessInternal\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F非native函数指向蓝图调用\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGetFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E    \u003Cspan class=\"c1\"\u003E\u002F\u002F在之前注册的naive函数表里去查找函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EFNativeFunctionLookup\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFound\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOwnerClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENativeFunctionLookupTable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFindByPredicate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E([\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E](\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFNativeFunctionLookup\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENativeFunctionLookup\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E){\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENativeFunctionLookup\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFound\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EFunc\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFound\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPointer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F定位到c++代码里的函数指针。\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"THlg2JfC\"\u003EUClass的Bind在编译蓝图和载入Package里的类才需要调用，因为native的类在之前的GetPrivateStaticClassBody的时候已经传进去了函数指针。只有没有C++代码实体的类才需要绑定到基类里的构造函数等才能正确正确继承下来这些函数来调用。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuperClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGetSuperClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESuperClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \n            \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassConstructor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E||\u003C\u002Fspan\u003E \n            \u003Cspan class=\"n\"\u003EClassAddReferencedObjects\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E||\u003C\u002Fspan\u003E \n            \u003Cspan class=\"n\"\u003EClassVTableHelperCtorCaller\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ESuperClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F确保基类已经绑定\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassConstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EClassConstructor\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuperClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassConstructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F绑定构造函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassVTableHelperCtorCaller\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EClassVTableHelperCtorCaller\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuperClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassVTableHelperCtorCaller\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F绑定热载函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassAddReferencedObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EClassAddReferencedObjects\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuperClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassAddReferencedObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F绑定ARO函数指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n        \u003Cspan class=\"n\"\u003EClassCastFlags\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESuperClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassCastFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"f9tUTrMZ\"\u003E绑定的这三个函数和GetPrivateStaticClassBody里传进来的一样。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003ELink\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"6BYvzmsC\"\u003E在构造UScriptStuct和UClass的最后一步都调用了StaicLink，它其实是UStruct的一个方法，包装了一个空的序列化归档类对象后转发到\u003Ccode\u003EUStruct::Link\u003C\u002Fcode\u003E函数上去。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EbRelinkExistingProperties\u003C\u002Fspan\u003E \u003Cspan class=\"cm\"\u003E\u002F*= false*\u002F\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EFArchive\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EArDummy\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F一个空的序列化归档类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ELink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EArDummy\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EbRelinkExistingProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"JpTFrtFt\"\u003E而\u003Ccode\u003EUStruct::Link\u003C\u002Fcode\u003E又是一个虚函数，在很多的子类中都有重载。StaicLink也在很多地方有调用。 Link这个词其实有三层意思：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"sxsHFxP7\"\u003E跟编译器的Link一样，编译完成后的最后一个操作链接，替换符号地址等。典型的是在结构改变或者编译后重新Link。\u003C\u002Fli\u003E\u003Cli data-pid=\"nJNjxWJT\"\u003E把子字段们按照属性特征分成一个个链条，如RefLink。\u003C\u002Fli\u003E\u003Cli data-pid=\"cFCzzSD-\"\u003E序列化的时候也有概念Link，用来充当磁盘和内存里对象的链接桥梁。同样，在一个保存在磁盘里的类型被序列化出来之后，就需要再Link一下来重新设置属性的偏移，结构内存对齐等。这也是Link需要一个FArchive参数的原因。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"ZMx9ym1w\"\u003EUProperty里其实也有一个Link，分为LinkInternal和SetupOffset，LinkInternal主要是用来根据属性特征再设置一下PropertyFlags，而SetupOffset是用来在序列化后设置属性内存偏移。这部分比较散乱，就请读者朋友们自己查看了。 而重点的是\u003Ccode\u003EUStruct::Link\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUStruct\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ELink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFArchive\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EAr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EbRelinkExistingProperties\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUField\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EField\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EChildren\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EField\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!=\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EField\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EField\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EField\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENext\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Edynamic_cast\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EField\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ELinkWithoutChangingOffset\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F对所有属性先Link一下。\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E**\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPropertyLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E**\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EDestructorLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDestructorLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E**\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ERefLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E**\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERefLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E**\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPostConstructLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPostConstructLink\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUStructProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEncounteredStructProps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETFieldIterator\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F遍历出所有属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIt\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EContainsObjectReference\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEncounteredStructProps\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EContainsWeakObjectReference\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E())\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERefLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F包含对象引用的属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"n\"\u003ERefLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERefLinkPtr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENextRef\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOwnerClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetOwnerClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EbOwnedByNativeClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOwnerClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOwnerClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EHasAnyClassFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECLASS_Native\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECLASS_Intrinsic\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EHasAnyPropertyFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECPF_IsPlainOldData\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E|\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECPF_NoDestructor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E\n            \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EbOwnedByNativeClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F these would be covered by the native destructor\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \n            \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDestructorLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F需要额外析构的属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"n\"\u003EDestructorLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDestructorLinkPtr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDestructorLinkNext\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOwnerClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EbOwnedByNativeClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E||\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EHasAnyPropertyFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECPF_Config\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOwnerClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EHasAnyClassFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECLASS_PerObjectConfig\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))))\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPostConstructLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F需要从CDO中获取初始值的属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"n\"\u003EPostConstructLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPostConstructLinkPtr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPostConstructLinkNext\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EProperty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F所有属性\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EPropertyLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyLinkPtr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyLinkNext\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPropertyLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDestructorLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERefLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPostConstructLinkPtr\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"cletQmEs\"\u003E看起来有点乱，各种标记的判断，但其实只是把之前AddCppProperty添加到UField* Children里的字段们，抽出UProperty们，然后再串成4个链条：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"1PvQ6A7c\"\u003EPropertyLink：所有的属性\u003C\u002Fli\u003E\u003Cli data-pid=\"UnS7Q8jX\"\u003ERefLink：包含对象引用（UObject*）的属性，这些属性对GC有影响，所以单独分类出来加速分析。\u003C\u002Fli\u003E\u003Cli data-pid=\"Uz1CQCTE\"\u003EPostConstructLink：所有需要从CDO中获取初始值的属性，属性可以从Config文件中或者CDO中获取初始值，因此在序列化后需要初始化一下属性们的值。\u003C\u002Fli\u003E\u003Cli data-pid=\"KZGiyLqE\"\u003EDestructorLink：需要额外析构的属性，在析构的时候，需要去调用一下属性的析构函数。否则的话，如一个int属性，就不用管它，释放内存就可以了。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"HA7wDWuQ\"\u003E单独分类出来这4个链条也是为了在不同的应用场景下加速性能，不需要每次去遍历所有的属性。UFunction本身也是个UStruct，它的Link的之后会调用InitializeDerivedMembers来算一下参数和返回值的信息偏移而已。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E总结\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"WRQgA29G\"\u003E篇幅太长了都……但没办法，不一鼓作气的把它们都串起来也不好拆分。我知道，阅读文章时，最不喜欢看到贴大段的代码。但读者朋友们如果想对类型系统的组织形式有个更深的了解，还请对照着UE的源码，一点点加深理解。我们最后来梳理一下：\u003C\u002Fp\u003E\u003Cp data-pid=\"Bylnh1Im\"\u003E\u003Cb\u003E类型系统结构：\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-a9055dd6c06418d34453b898f5ed1450_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1318\" data-rawheight=\"814\" data-original-token=\"v2-05f9c411b949811f5d95f014afacffd6\" class=\"origin_image zh-lightbox-thumb\" width=\"1318\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-a9055dd6c06418d34453b898f5ed1450_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"qlw8VDFH\"\u003E整个的类型系统结构还是挺明了的，UMetaData之前一直略去，其实是把宏标记里的那些信息采集起来关联到对象身上，在编辑器里使用。UUserDefinedEnum、UUUserDefinedStruct和UBlueprintGeneratedClass都是蓝图里定义编译出来的枚举结构和类。UDynamicClass是蓝图Native化后生成的类，FClass是UHT分析过程产生的类。\u003C\u002Fp\u003E\u003Cp data-pid=\"Pbuu5ziW\"\u003E\u003Cb\u003E属性就有各种类型了，简直是各开花：\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-2b9a7f61e3f3a9f84d7dd8fe29875853_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1233\" data-rawheight=\"809\" data-original-token=\"v2-0cb64c06bada7adff2b6cb6368d7ef97\" class=\"origin_image zh-lightbox-thumb\" width=\"1233\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-2b9a7f61e3f3a9f84d7dd8fe29875853_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"IdglQtQK\"\u003E 我也是敬业，把所有属性都列了出来。UE为了在这么多属性之间尽量复用接口，用了多继承的方式。每个属性的实现还是挺简单的，有兴趣的读者朋友们可以到源码里一观。有些属性我们在后面的GC章节也还会涉及到。\u003C\u002Fp\u003E\u003Cp data-pid=\"rYFoxiFy\"\u003E类型系统到这也就算是构造完了，我们在下篇来汇总总结一下。\u003C\u002Fp\u003E\u003Cp data-pid=\"-Ka589M_\"\u003E上篇：\u003C\u002Fp\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F58868952\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-31387d48db989069b3f821b3925cacb0_180x120.jpg\" data-image-width=\"1924\" data-image-height=\"1040\" class=\"internal\"\u003E大钊：《InsideUE4》UObject（十）类型系统构造-再次触发\u003C\u002Fa\u003E\u003Cp data-pid=\"HDzZ2hIy\"\u003E下篇：\u003C\u002Fp\u003E\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F60291730\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f1658e0ea3cec6570149515edcfb3f03_180x120.jpg\" data-image-width=\"4096\" data-image-height=\"1937\" class=\"internal\"\u003E大钊：《InsideUE4》UObject（十二）类型系统-总结\u003C\u002Fa\u003E\u003Cp data-pid=\"LezJsoFB\"\u003E\u003Ci\u003EUE4.21.2\u003C\u002Fi\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"M0nVnIa3\"\u003E——————————————————————————————————————— \u003C\u002Fp\u003E\u003Cp data-pid=\"1geidIOZ\"\u003E知乎专栏：\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4\" class=\"internal\" target=\"_blank\"\u003EInsideUE4\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"crY7sXna\"\u003E UE4深入学习QQ群：\u003Cb\u003E456247757\u003C\u002Fb\u003E(非新手入门群，请先学习完官方文档和视频教程，回答正确验证问题才能进入) \u003C\u002Fp\u003E\u003Cp data-pid=\"tKnFtqN7\"\u003E\u003Cb\u003E个人原创，未经授权，谢绝转载！\u003C\u002Fb\u003E\u003C\u002Fp\u003E","contentNeedTruncated":false,"forceLoginWhenClickReadMore":false,"adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F20052447","type":"topic","id":"20052447","name":"虚幻 4（游戏引擎）"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19556258","type":"topic","id":"19556258","name":"游戏引擎"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19553361","type":"topic","id":"19553361","name":"游戏开发"}],"voteupCount":128,"voting":0,"heavyUpStatus":"allow_heavy_up","column":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"},"commentCount":5,"contributions":[{"id":20435250,"state":"accepted","type":"first_publish","column":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":true,"tipjarorsCount":0,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"favlistsCount":64,"isNormal":true,"status":0,"activityToppingInfo":{"state":"untopped"},"shareText":"《InsideUE4》UObject（十一）类型系统构造-构造绑定链接 - 来自知乎专栏「InsideUE5」，作者: 大钊 https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":9,"hasColumn":true,"republishers":[],"isNewLinkCard":true,"emojiReaction":{"likeCount":9,"likeHasSet":false},"abParam":{"qaFotoolbar":"0","qaHiddenVoteup":"","qaNewdownvote":"1","rsInterest1":"","zpZhiStyle":""},"attachedInfo":"kgIjCgkxMDEzNjM3MDkSCDU5NTUzNDkwGAciCklNQUdFX1RFWFQ=","shareGuide":{"hasPositiveBubble":false,"hasTimeBubble":false,"hitShareGuideCluster":false},"settings":{"tableOfContents":{"enabled":false}},"canReference":false,"reactionInstruction":{},"reaction":{"statistics":{"upVoteCount":128,"downVoteCount":1,"likeCount":9,"commentCount":5,"shareCount":0,"playCount":0,"interestPlayCount":0,"favorites":64,"pvCount":0,"bulletCount":0,"applaudCount":0,"questionFollowerCount":0,"questionAnswerCount":0,"plaincontentVoteUpCount":0,"plaincontentLikeCount":0,"imgLikeCount":{"v205f9c411b949811f5d95f014afacffd6":0,"v20cb64c06bada7adff2b6cb6368d7ef97":0,"v2496f535e9d3ade0580eb99e3193f1738":0,"v29f219e0558772f16d5a91174bb750a60":0}},"relation":{"isAuthor":false,"vote":"Neutral","liked":false,"imgLiked":{"v205f9c411b949811f5d95f014afacffd6":false,"v20cb64c06bada7adff2b6cb6368d7ef97":false,"v2496f535e9d3ade0580eb99e3193f1738":false,"v29f219e0558772f16d5a91174bb750a60":false},"faved":false,"following":false},"imageReactions":{"v205f9c411b949811f5d95f014afacffd6":{"likeCount":0,"isLiked":false},"v20cb64c06bada7adff2b6cb6368d7ef97":{"likeCount":0,"isLiked":false},"v2496f535e9d3ade0580eb99e3193f1738":{"likeCount":0,"isLiked":false},"v29f219e0558772f16d5a91174bb750a60":{"likeCount":0,"isLiked":false}}},"interactionBarPlugins":[{"type":"comment","comment":{"enable":true,"placeholder":"发条带图评论"}}],"barPluginsFlipTime":3000,"podcastAudioEnter":{"text":"听内容","textColor":"MapBrand","textSize":13,"actionUrl":"zhihu:\u002F\u002Fpodcast\u002Faudio_player\u002F0?contentId=59553490&contentType=article"}}},"columns":{"insideue4":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"zvideos":{},"eduCourses":{}},"currentUser":"ffde95bc6a24b298d237f46e35a3eb71","account":{"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false},"cardUserInfo":{"vipInfo":{}},"handleWidget":{},"widgetList":[],"userWidgetId":""},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{},"infinity":{},"batchUsers":{},"profileInfinity":null},"env":{"abV2":{"config":{"paramMap":{"ws_zhishiku":{"value":"1","abId":"rl-zhishiku1-1"},"ws_hot_activate":{"value":"0","abId":"hot_activate-0"},"ws_pop_activate":{"value":"1","abId":"pop_activate-1"},"pc_mou_cre_remove":{"value":"1","abId":"rl-mou_create_remove-1"},"ws_new_call":{"value":"1","abId":"rl-mobileweb_call-1"}},"abMap":{"rl-zhishiku1-1":{"abId":"rl-zhishiku1-1","layerId":"rl-zhishiku1","diversionType":2},"hot_activate-0":{"abId":"hot_activate-0","layerId":"web_standard_domain_layer8"},"pop_activate-1":{"abId":"pop_activate-1","layerId":"pop_activate_layer"},"rl-mou_create_remove-1":{"abId":"rl-mou_create_remove-1","layerId":"rl-mou_create_remove","diversionType":2},"rl-mobileweb_call-1":{"abId":"rl-mobileweb_call-1","layerId":"rl-mobileweb_call"}}},"triggers":{}},"userAgent":{"Edge":false,"IE":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"HarmonyOS":false,"iOS":false,"isAppleDevice":false,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Quark":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"WxMiniProgram":false,"BaiduMiniProgram":false,"QQMiniProgram":false,"JDMiniProgram":false,"isWebView":false,"isMiniProgram":false,"origin":"Mozilla\u002F5.0 (Windows NT 10.0; Win64; x64; rv:135.0) Gecko\u002F20100101 Firefox\u002F135.0"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F59553490","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F59553490","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"oppoSearch":false,"baiduSearch":false,"googleSearch":false,"shenma":false,"miniProgram":false,"xiaomi":false,"huaweiSearch":false},"theme":"light","appHeaderTheme":{"current":"normal","disable":true,"normal":{"bgColor":"GBK99A"},"custom":{"bgColor":"GBK99A"}},"enableShortcut":true,"referer":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","xUDId":"AYDYfc1uQxiPTrrDN2Oi3_z1TueANaNaDu4=","mode":"ssr","conf":{},"xTrafficFreeOrigin":"","ipInfo":{"cityName":"武汉","countryName":"中国","regionName":"湖北","countryCode":"CN"},"logged":true,"query":{},"vars":{"passThroughHeaders":{}}},"me":{"columnContributions":[]},"label":{},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0}},"recommend":{"recommendTimes":{}}},"explore":{},"levelUpperLimit":10,"mcn":{},"mcnManage":{},"tasks":{},"announcement":{},"creatorsRecommendInfo":{}},"creators":{"common":{"applyStatus":{},"rightsStatus":{}},"bayesDomains":{"status":{},"options":{"topDomains":null,"allDomains":null,"editable":0},"contents":null},"school":{"tabs":[],"contents":[],"banner":null,"entities":{}},"faq":{"tabs":[],"article":{}},"knowledgeIncome":{},"safeguardRights":{},"analytics":{"all":{},"answer":{},"zvideo":{},"article":{},"pin":{},"singleContent":{}},"account":{"growthLevel":{}},"KMResource":{},"training":{},"ToolsQuestion":{"goodatTopics":[]},"ToolsHotspot":{"domains":[]},"ToolsRecommend":{},"ToolsCustomPromotion":{"itemLists":{},"baseInfo":{}},"ToolsSearchQuestion":{},"editorSetting":{},"MCNManage":{},"knowledgeTasks":{},"incomeAnalysis":{"income":{"aggregation":{}}},"creationManage":{"editModal":{"status":false}},"activity":{},"announcement":{},"home":{"currentCreatorUrlToken":null,"rights":[],"newRights":[],"scoreInfo":{},"menusShowControlByServer":{"bVipRecomend":false,"creationRelationship":false},"newTasks":{"creatorTask":{"tasks":[],"des":[]}},"bannerList":[],"recentlyCreated":[],"homecard":{},"homeData":{}},"videoSupport":{"textBenefit":{}},"videoDistribution":{},"profilePoster":{"creatorPosterConfig":{},"creatorPosterData":{}}},"answers":{"voters":{},"upvoters":{},"copyrightApplicants":{},"favlists":{},"newAnswer":{},"entityWords":{},"paidContent":{},"settings":{},"relationEndorsement":{},"growthCardOrder":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{},"upvoters":{},"relationEndorsement":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotList":[],"hotListHeadZone":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]},"hotDaily":{"data":[],"paging":{}},"hotHighlight":{"isFetching":false,"isDrained":false,"data":[],"paging":{}},"banner":{},"commercialBanner":{"show":false,"banner":{},"trackData":{}},"video":{"items":[],"next":null,"isLoading":false,"isDrained":false}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"insideue4"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[]},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":null,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"userProfit":{"permission":{"permissionStatus":{"zhiZixuan":0,"recommend":-1,"task":0,"plugin":0,"infinity":0},"visible":false},"linkCardLimit":0},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{},"banners":{},"protocolStatus":{"isAgreedNew":true,"isAgreedOld":true},"probationCountdownDays":0},"zvideos":{"campaignVideoList":{},"campaigns":{},"tagoreCategory":[],"recommendations":{},"insertable":{},"recruit":{"form":{"platform":"","nickname":"","followerCount":"","domain":"","contact":""},"submited":false,"ranking":[]},"qyActivityData":{},"talkActivityData":{},"party2022ActivityData":{},"batchVideos":{},"creationReferences":{},"zvideoCollection":{},"zvideoGrant":{},"collectData":{"isFetching":false,"list":[]},"videoSource":{"isLoaded":false},"paidColumnInfo":{}},"republish":{},"commentPermission":{},"creatorRightStatus":{"list":[]},"adPromotion":{"answer":{},"article":{}},"paidColumn":{"entities":{}},"followingColumns":{},"hotSpot":{}},"fetchHost":"www.zhihu.com","subAppName":"column","spanName":"Post","canaryConfig":{"test_canary":"0","use_new_player":"0","player_vendor":"0","use_hevc":"1","upload_use_signature":"1","use_backdrop_blur":"1","article_title_imagex":"1","play_station":"1","use_cached_supported_countries":"1"}}</script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/vendor.4d4559ddd761145da535.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/react.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom-server.browser.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/runtime.app.cb676f5b2d3a7d3d76a9.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-75fc9c18.app.3db651c252e14ef6658e.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-29107295.app.42d07f814b7b05187671.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-79b5cf47.app.8b6b6bf4b6d894db9b07.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-330004dc.app.7437cf54ac28fca0e302.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-f3572862.app.88776a5ab04556b70cc2.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-0e5ce61e.app.22c35ce7e8956cfacf07.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-83b0f42f.app.4af446e71092c79a4337.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-38cf5c11.app.c0ead2ce5c3ab6da63bd.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-2ec050f6.app.9d36ff4f103fb294ee49.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/lib-9b20c40c.app.3b5d3b2a0de64f6e01b9.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/7941.app.193a11c73b77ab856fbe.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/column.app.f306cd8a2baed3faa615.js"></script><script defer="defer" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/aria.js" id="ariascripts" wapforceoldfixed="false" loaddata="false"></script><script src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/hm.js" async=""></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/zap.js"></script><div><div style="display: none;"><i>想来知乎工作？请发送邮件到 jobs@zhihu.com</i></div></div><script src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/push.js"></script><div><div><div class="css-8pdeid"></div></div></div><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BUObject%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%9E%84%E9%80%A0-%E6%9E%84%E9%80%A0%E7%BB%91%E5%AE%9A%E9%93%BE%E6%8E%A5%20-%20%E7%9F%A5%E4%B9%8E_files/emoticon.js"></script><div><div><div style="left: -1179px; top: -999px;" class="Editable-languageSuggestions"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete7-0" id="Popover6-toggle" aria-haspopup="true" class="Input" placeholder="选择语言"><svg width="24" height="24" viewBox="0 0 24 24" fill="#afbdcf" class="Zi Zi--Select"><path fill-rule="evenodd" d="M12.53 3.47a.75.75 0 0 0-1.06 0l-5 5a.75.75 0 0 0 1.06 1.06L12 5.06l4.47 4.47a.75.75 0 1 0 1.06-1.06l-5-5Zm-5 11a.75.75 0 0 0-1.06 1.06l5 5a.75.75 0 0 0 1.06 0l5-5a.75.75 0 1 0-1.06-1.06L12 18.94l-4.47-4.47Z" clip-rule="evenodd"></path></svg></label></div></div></div></div></div></body></html>