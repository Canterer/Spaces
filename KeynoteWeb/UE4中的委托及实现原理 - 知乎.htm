<!DOCTYPE html>
<html lang="zh" class="itcauecng" data-theme="light" data-rh="data-theme"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style class="ariareader ariareader--user-agent" media="screen" id="ariak290t378wg0" data-for="result" isaria="true">.ariafocus{outline:none;}body.useOldFixed [aria-fixedOldHidden=true],.ariaHide{display:none !important;}:focus{outline:none !important;}</style><meta charset="utf-8"><title>UE4中的委托及实现原理 - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"><meta name="renderer" content="webkit"><meta name="force-rendering" content="webkit"><meta http-equiv="X-UA-Compatible" content="IE=10,chrome=1"><meta name="google-site-verification" content="&quot;FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg&quot;"><meta data-rh="true" name="keywords" content="虚幻4引擎,虚幻 4（游戏引擎）"><meta data-rh="true" name="description" content="委托的区别 不同点按照可以绑定的方法个数区分： 可以分为两大类：单播和多播。 单播代理委托，指的是只能绑定一个函数指针的委托，实现一对一的通知。 多播代理委托，指的是能绑定多个函数指针的委托，实现一对多…"><meta data-rh="true" property="og:title" content="UE4中的委托及实现原理"><meta data-rh="true" property="og:url" content="https://zhuanlan.zhihu.com/p/575671003"><meta data-rh="true" property="og:description" content="委托的区别 不同点按照可以绑定的方法个数区分： 可以分为两大类：单播和多播。 单播代理委托，指的是只能绑定一个函数指针的委托，实现一对一的通知。 多播代理委托，指的是能绑定多个函数指针的委托，实现一对多…"><meta data-rh="true" property="og:image" content="https://pica.zhimg.com/v2-86e79fd183ce4bf6af267032da5829da_720w.jpg?source=172ae18b"><meta data-rh="true" property="og:type" content="article"><meta data-rh="true" property="og:site_name" content="知乎专栏"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png" sizes="152x152"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.d5793cac.png" sizes="120x120"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7abf3393.png" sizes="76x76"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.362a8eac.png" sizes="60x60"><link crossorigin="" rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/heifetz/favicon.ico"><link crossorigin="" rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/heifetz/search.xml" title="知乎"><link rel="dns-prefetch" href="https://static.zhimg.com/"><link rel="dns-prefetch" href="https://pica.zhimg.com/"><link rel="dns-prefetch" href="https://picx.zhimg.com/"><link rel="dns-prefetch" href="https://pic1.zhimg.com/"><link rel="dns-prefetch" href="https://pic2.zhimg.com/"><link rel="dns-prefetch" href="https://pic3.zhimg.com/"><link rel="dns-prefetch" href="https://pic4.zhimg.com/"><link rel="dns-prefetch" href="https://static.zhihu.com/"><style data-emotion-css="9mvwt1">:root{--zhc-padding-horizontal:20px;--zhc-padding-vertical:16px;--zhc-notification-top:75px;--app-padding:16px;--app-header-height:52px;--app-max-width:640px;--app-width:1000px;--app-font-size:15px;}</style><script nonce="" data-web-reporter-config="{&quot;platform&quot;:&quot;web&quot;,&quot;project&quot;:&quot;heifetz&quot;}">!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).webReporter={})}(this,function(e){"use strict";var t={},n=!1,o=function(){var e,o,r,a,i;return n||(e=document.querySelector("script[data-web-reporter-config]"),o=e&&e.dataset.webReporterConfig||"{}",r=JSON.parse(o),a=r.platform,i=r.project,t={platform:a,project:i},n=!0),t};function r(e){return a(function(){return localStorage.getItem(e)})()}function a(e){return function(){try{return e.apply(void 0,arguments)}catch(e){}}}var i=a(function(e,t){var n={platform:"web",project:o().project,clientTimestamp:+new Date};!function(e,t,n){"1"===r("weber:logenabled")&&console.log("[web-reporter]%o",{type:e,base:t,data:n})}(e,n,t),function(e,t){var n=btoa(JSON.stringify(t));if("undefined"!=typeof Blob&&window.navigator&&window.navigator.sendBeacon){var o=new Blob([n],{type:"text/plain"});navigator.sendBeacon(e,o)}else{var r=new XMLHttpRequest;r.open("POST",e),r.withCredentials=!1,r.setRequestHeader("Content-Type","text/plain;charset=UTF-8"),r.send(n)}}(r("weber:api")||"https://apm.zhihu.com/collector/web_json",{type:e,base:n,data:t})});e.report=i,Object.defineProperty(e,"__esModule",{value:!0})});
</script><link href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/7246.216a26f4.31198654a7c463df76e9.css" crossorigin="" rel="stylesheet"><link href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/column.216a26f4.04e47786b24e4e3d7675.css" crossorigin="" rel="stylesheet"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/user-hover-card.216a26f4.a385eb0f0144e9b17ea6.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/report_modals.216a26f4.bb4cf6b08b372fc50cb6.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/9625.216a26f4.fab316e5d80ef71e9e23.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/comments-v3.216a26f4.3103d20bd699055e1e07.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/ECommerceAd.216a26f4.cdbc0ed858e691df0a59.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/EcommerceAdCard.216a26f4.fd66d9de3aac3ad48b96.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/FeeConsultCard.216a26f4.b553d561e75f70cc9266.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/7538.216a26f4.97a4825b143433b3912b.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/EditableV2.216a26f4.d180f7d6ef8bb7bb7c87.css" crossorigin="anonymous"><script nonce="">!function(){"use strict";!function(e,n){var r=[];function t(e){return function(){r.push([e,arguments])}}n.Raven={captureException:t("captureException"),captureMessage:t("captureMessage"),captureBreadcrumb:t("captureBreadcrumb")};var a,o,c,i,s,u="undefined"!=typeof DOMError;function d(e){var n=e instanceof Error||e instanceof ErrorEvent||u&&e instanceof DOMError||e instanceof DOMException;Raven.captureException(n?e:new Error(e.message||e.reason))}n.addEventListener("unhandledrejection",d),n.addEventListener("error",d,!0),a=e.src,o=e,c=function(){r.forEach(function(e){var n;(n=Raven)[e[0]].apply(n,e[1])}),n.removeEventListener("unhandledrejection",d),n.removeEventListener("error",d,!0)},i=document.head||document.getElementsByTagName("head")[0],(s=document.createElement("script")).crossOrigin=o.crossOrigin,s.dataset.sentryConfig=o["data-sentry-config"],s.onload=c,s.src=a,i.appendChild(s)}({"defer":true,"crossOrigin":"anonymous","src":"https://unpkg.zhimg.com/@cfe/sentry-script@1.3.1/dist/init.js","data-sentry-config":"{\"dsn\":\"https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224\",\"sampleRate\":0.1,\"release\":\"2236-8a85c800\",\"ignoreErrorNames\":[\"NetworkError\",\"SecurityError\"],\"ignoreErrorsPreset\":\"ReactApp\",\"tags\":{\"app_name\":\"heifetz\"}}"},window)}();
</script><script crossorigin="anonymous" data-sentry-config="{&quot;dsn&quot;:&quot;https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224&quot;,&quot;sampleRate&quot;:0.1,&quot;release&quot;:&quot;2236-8a85c800&quot;,&quot;ignoreErrorNames&quot;:[&quot;NetworkError&quot;,&quot;SecurityError&quot;],&quot;ignoreErrorsPreset&quot;:&quot;ReactApp&quot;,&quot;tags&quot;:{&quot;app_name&quot;:&quot;heifetz&quot;}}" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/init.js"></script><style data-emotion-css="55n9hh">.css-55n9hh{position:fixed;top:0;right:0;left:0;z-index:101;display:none;height:2px;pointer-events:none;background:#1772F6;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}</style><style data-emotion-css="1l12z7y">.css-1l12z7y{box-shadow:0px 16px 32px rgba(0,0,0,0.04);}</style><style data-emotion-css="1hlrcxk">.css-1hlrcxk{-webkit-transition-property:fill;transition-property:fill;-webkit-transition-duration:0.25s;transition-duration:0.25s;-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;}</style><style data-emotion-css="icip60">.css-icip60{border-radius:2px;}</style><style data-emotion-css="fnnb9l">.css-fnnb9l{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:30px;height:30px;border-radius:2px;}</style><style data-emotion-css="78p1r9">.css-78p1r9{box-sizing:border-box;margin:0;min-width:0;margin-left:auto;margin-right:auto;max-width:690px;margin-top:0;}@media screen and (min-width:40em){.css-78p1r9{margin-top:1em;}}</style><style data-emotion-css="1xa1hik">.css-1xa1hik{position:relative;padding-bottom:56%;height:0;border-radius:inherit;}</style><style data-emotion-css="1h1xzpn">.css-1h1xzpn{box-sizing:border-box;margin:0;min-width:0;position:relative;padding-bottom:56%;height:0;border-radius:inherit;}</style><style data-emotion-css="1ld0bim">.css-1ld0bim{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;}</style><style data-emotion-css="uodor8">.css-uodor8{border-radius:50%;}</style><style data-emotion-css="1syywx2">.css-1syywx2{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:38px;height:38px;border-radius:50%;}</style><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style><style data-emotion-css="z4ujak">.css-z4ujak{color:#8491a5;}</style><style data-emotion-css="1od93p9">.css-1od93p9{margin-top:16px;position:relative;}</style><style data-emotion-css="376mun">.css-376mun{position:relative;display:inline;}</style><style data-emotion-css="1dlndns">.css-1dlndns{position:absolute;left:NaNpx;top:0;}</style><style data-emotion-css="ldd79s">.css-ldd79s{box-sizing:border-box;margin:0;min-width:0;position:absolute;left:NaNpx;top:0;}</style><style data-emotion-css="dg64xe">.css-dg64xe .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-dg64xe .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-dg64xe .FileLinkCard-info{margin-left:12px;}.css-dg64xe .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-dg64xe .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-dg64xe .FileLinkCard-source{white-space:pre;}.css-dg64xe img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-dg64xe img.content_image[data-size="normal"],.css-dg64xe img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-dg64xe img.content_image[data-size="small"],.css-dg64xe img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="1vqsdx1">.css-1vqsdx1 .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-1vqsdx1 .LinkCard.new,.css-1vqsdx1 .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1vqsdx1 .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-1vqsdx1 .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1vqsdx1 .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-1vqsdx1 .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1vqsdx1 .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1vqsdx1 .LinkCard.old,.css-1vqsdx1 .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}</style><style data-emotion-css="yxro2d">.css-yxro2d .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-yxro2d .LinkCard.old,.css-yxro2d .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-yxro2d .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-yxro2d .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-yxro2d .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-yxro2d .LinkCard.new,.css-yxro2d .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-yxro2d .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-yxro2d .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-yxro2d .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-yxro2d .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-yxro2d .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-yxro2d .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-yxro2d .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-yxro2d .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-yxro2d .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-yxro2d .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-yxro2d .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-yxro2d .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-yxro2d .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-yxro2d .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-yxro2d .FileLinkCard-info{margin-left:12px;}.css-yxro2d .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-yxro2d .FileLinkCard-source{white-space:pre;}.css-yxro2d img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-yxro2d img.content_image[data-size="normal"],.css-yxro2d img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-yxro2d img.content_image[data-size="small"],.css-yxro2d img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="ob6uua animation-1yvu044">.css-ob6uua{word-break:break-word;line-height:1.6;}.css-ob6uua > [data-first-child]{margin-top:0;}.css-ob6uua > :last-child{margin-bottom:0;}.css-ob6uua h1,.css-ob6uua h2{clear:left;margin-top:calc((1.4em * 2) / 1.2);margin-bottom:calc(1.4em / 1.2);font-size:1.2em;line-height:1.5;font-weight:600;}.css-ob6uua h3,.css-ob6uua h4,.css-ob6uua h5,.css-ob6uua h6{clear:left;margin-top:calc((1.4em * 1.5) / 1.1);margin-bottom:calc(1.4em / 1.1);font-size:1.1em;line-height:1.5;font-weight:600;}.css-ob6uua u{-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid #373a40;}.css-ob6uua b{font-weight:600;}.css-ob6uua sup{font-size:0.8em;}.css-ob6uua sup[data-draft-type='reference']{color:#09408e;}.css-ob6uua a:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}html[data-focus-visible] .css-ob6uua a:focus{box-shadow:0 0 0 2px #ffffff,0 0 0 4px rgba(23,114,246,0.3);}.css-ob6uua a.ztext-link,.css-ob6uua a.internal,.css-ob6uua a.external{-webkit-text-decoration:none;text-decoration:none;cursor:pointer;border-bottom:1px solid #81858f;}.css-ob6uua a.ztext-link:hover,.css-ob6uua a.internal:hover,.css-ob6uua a.external:hover{color:#09408e;border-bottom:1px solid #09408e;}.css-ob6uua a.ztext-link > .ellipsis::after,.css-ob6uua a.internal > .ellipsis::after,.css-ob6uua a.external > .ellipsis::after{content:'...';}.css-ob6uua a.ztext-link > .invisible,.css-ob6uua a.internal > .invisible,.css-ob6uua a.external > .invisible{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;}.css-ob6uua a.ztext-link u,.css-ob6uua a.internal u,.css-ob6uua a.external u{border:none;}.css-ob6uua a.member_mention{color:#09408e;}.css-ob6uua a.member_mention:hover{border-bottom:1px solid #09408e;}.css-ob6uua a.UserLink-link{color:#09408e;}.css-ob6uua a.UserLink-link:hover{border-bottom:1px solid #09408e;}.css-ob6uua p{margin:1.4em 0;}.css-ob6uua p.ztext-empty-paragraph{margin:calc((2.8em- (1.4em * 2 + 1.6em)) / 2) 0;}.css-ob6uua p.ztext-empty-paragraph + .ztext-empty-paragraph{margin:1.4em 0;}.css-ob6uua hr{margin:4em auto;width:240px;max-width:100%;border:none;border-top:1px solid #c4c7ce;}.css-ob6uua img[eeimg]{max-width:100%;vertical-align:middle;}.css-ob6uua img[eeimg="1"]{margin:0 3px;max-width:calc(100% - 6px);display:inline-block;}.css-ob6uua img[eeimg="2"]{margin:1.4em auto;display:block;}.css-ob6uua blockquote{margin:1.4em 0;padding-left:1em;color:#535861;border-left:3px solid #c4c7ce;}.css-ob6uua ol,.css-ob6uua ul{margin:1.4em 0;padding:0;width:100%;}.css-ob6uua ol ol,.css-ob6uua ul ol,.css-ob6uua ol ul,.css-ob6uua ul ul{margin:0;}.css-ob6uua ol li::before,.css-ob6uua ul li::before{width:1em;}.css-ob6uua ol > ol,.css-ob6uua ul > ol,.css-ob6uua ol > ul,.css-ob6uua ul > ul{padding-left:1em;box-sizing:border-box;}.css-ob6uua ul>li{display:table;width:100%;list-style:none;}.css-ob6uua ul>li::before{display:table-cell;content:'•  ';white-space:pre;}.css-ob6uua ol{counter-reset:ol;}.css-ob6uua ol > li{display:table;width:100%;list-style:none;}.css-ob6uua ol > li::before{display:table-cell;text-align:right;counter-increment:ol;content:counter(ol) '. ';white-space:pre;}.css-ob6uua ol ol{counter-reset:ol2;}.css-ob6uua ol ol li::before{counter-increment:ol2;content:counter(ol2) '. ';}.css-ob6uua ol ol ol{counter-reset:ol3;}.css-ob6uua ol ol ol li::before{counter-increment:ol3;content:counter(ol3) '. ';}.css-ob6uua ol ol ol ol{counter-reset:ol4;}.css-ob6uua ol ol ol ol li::before{counter-increment:ol4;content:counter(ol4) '. ';}.css-ob6uua figure{margin:1.4em 0;}.css-ob6uua figure .content_image,.css-ob6uua figure .origin_image{margin:0 auto;}.css-ob6uua figure figcaption{margin-top:calc(0.6em / 0.9);padding:0 1em;font-size:0.9em;line-height:1.5;text-align:center;color:#9196a1;}.css-ob6uua figure + figure{margin-top:calc(1.4em * 1.6);}.css-ob6uua figure[data-size='small'],.css-ob6uua figure:not([data-size]) > [data-size='small']{clear:both;}.css-ob6uua figure[data-size='left'],.css-ob6uua figure:not([data-size]) > [data-size='left']{float:left;margin:0 20px 20px 0;max-width:33%;}.css-ob6uua figure[data-size='right'],.css-ob6uua figure:not([data-size]) > [data-size='right']{float:right;margin:0 0 20px 20px;max-width:33%;}.css-ob6uua figure[data-size='collapse']{margin-bottom:0;}.css-ob6uua figure[data-size='collapse'] + figure{margin-top:0;}.css-ob6uua .content_image,.css-ob6uua .origin_image{display:block;max-width:100%;height:auto;margin:1.4em auto;background-color:#fff;}.css-ob6uua .content_image[data-size='small'],.css-ob6uua .origin_image[data-size='small']{max-width:40%;}.css-ob6uua .content_image.zh-lightbox-thumb,.css-ob6uua .origin_image.zh-lightbox-thumb{cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in;}.css-ob6uua code{margin:0 2px;padding:3px 4px;border-radius:3px;font-family:Menlo,Monaco,Consolas,'Andale Mono','lucida console','Courier New',monospace;font-size:0.9em;background-color:#f8f8fa;}.css-ob6uua pre{margin:1.4em 0;padding:calc(0.8em / 0.9);font-size:0.9em;word-break:initial;word-wrap:initial;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;background:#f8f8fa;border-radius:4px;}.css-ob6uua pre code{margin:0;padding:0;font-size:inherit;border-radius:0;background-color:inherit;}.css-ob6uua li pre{white-space:pre-wrap;}.css-ob6uua table[data-draft-type='table']{border-collapse:collapse;font-size:15px;margin:1.4em auto;max-width:100%;table-layout:fixed;text-align:left;width:100%;}.css-ob6uua table[data-draft-type='table'][data-size='small']{min-width:260px;width:40%;}.css-ob6uua table[data-draft-type='table'][data-row-style='striped'] tr:nth-of-type(2n + 1){background:#f8f8fa;}.css-ob6uua table[data-draft-type='table'] td,.css-ob6uua table[data-draft-type='table'] th{border:1px solid #c4c7ce;line-height:24px;height:24px;padding:3px 12px;}.css-ob6uua table[data-draft-type='table'] th{background:#ebeced;color:#191B1F;font-weight:500;}.css-ob6uua .video-box,.css-ob6uua .link-box{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:1.4em 0;overflow:auto;white-space:normal;cursor:pointer;border:solid 1px #ebeced;border-radius:4px;}.css-ob6uua .lazy[data-lazy-status]{background-color:#f8f8fa;}.css-ob6uua .lazy[data-lazy-status="ok"]{background-color:#fff;-webkit-animation:animation-1yvu044 0.5s ease-in;animation:animation-1yvu044 0.5s ease-in;}.css-ob6uua .highlight{margin:1em 0;}.css-ob6uua .highlight pre{margin:0;}.css-ob6uua .highlight .hll{background-color:#f8f8fa;}.css-ob6uua .highlight .c{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .err{color:#D95350;}.css-ob6uua .highlight .k{font-weight:600;}.css-ob6uua .highlight .o{font-weight:600;}.css-ob6uua .highlight .cm{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cp{font-weight:600;color:#9196a1;}.css-ob6uua .highlight .c1{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cs{font-style:italic;font-weight:600;color:#9196a1;}.css-ob6uua .highlight .gd{color:#F05159;}.css-ob6uua .highlight .ge{font-style:italic;}.css-ob6uua .highlight .gr{color:#D95350;}.css-ob6uua .highlight .gh{color:#9196a1;}.css-ob6uua .highlight .gi{color:#12b370;}.css-ob6uua .highlight .go{color:#81858f;}.css-ob6uua .highlight .gp{color:#535861;}.css-ob6uua .highlight .gs{font-weight:600;}.css-ob6uua .highlight .gu{color:#9196a1;}.css-ob6uua .highlight .gt{color:#D95350;}.css-ob6uua .highlight .kc{font-weight:600;}.css-ob6uua .highlight .kd{font-weight:600;}.css-ob6uua .highlight .kn{font-weight:600;}.css-ob6uua .highlight .kp{font-weight:600;}.css-ob6uua .highlight .kr{font-weight:600;}.css-ob6uua .highlight .kt{font-weight:600;color:#09408e;}.css-ob6uua .highlight .m{color:#1772F6;}.css-ob6uua .highlight .s{color:#D95350;}.css-ob6uua .highlight .na{color:#1772F6;}.css-ob6uua .highlight .nb{color:#1772F6;}.css-ob6uua .highlight .nc{font-weight:600;color:#09408e;}.css-ob6uua .highlight .no{color:#1772F6;}.css-ob6uua .highlight .ni{color:#6A5FF3;}.css-ob6uua .highlight .ne{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nf{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nn{color:#535861;}.css-ob6uua .highlight .nt{color:#09408e;}.css-ob6uua .highlight .nv{color:#1772F6;}.css-ob6uua .highlight .ow{font-weight:600;}.css-ob6uua .highlight .w{color:#adb0b7;}.css-ob6uua .highlight .mf{color:#1772F6;}.css-ob6uua .highlight .mh{color:#1772F6;}.css-ob6uua .highlight .mi{color:#1772F6;}.css-ob6uua .highlight .mo{color:#1772F6;}.css-ob6uua .highlight .sb{color:#D95350;}.css-ob6uua .highlight .sc{color:#D95350;}.css-ob6uua .highlight .sd{color:#D95350;}.css-ob6uua .highlight .s2{color:#D95350;}.css-ob6uua .highlight .se{color:#D95350;}.css-ob6uua .highlight .sh{color:#D95350;}.css-ob6uua .highlight .si{color:#D95350;}.css-ob6uua .highlight .sx{color:#D95350;}.css-ob6uua .highlight .sr{color:#A5542F;}.css-ob6uua .highlight .s1{color:#D95350;}.css-ob6uua .highlight .ss{color:#D95350;}.css-ob6uua .highlight .bp{color:#9196a1;}.css-ob6uua .highlight .vc{color:#1772F6;}.css-ob6uua .highlight .vg{color:#1772F6;}.css-ob6uua .highlight .vi{color:#1772F6;}.css-ob6uua .highlight .il{color:#1772F6;}.css-ob6uua .highlight::-webkit-scrollbar{width:6px;height:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal{background-color:rgba(25,27,31,0.5);border-radius:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal:hover{background-color:rgba(25,27,31,0.6);}.css-ob6uua .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-ob6uua .LinkCard.old,.css-ob6uua .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-ob6uua .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-ob6uua .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-ob6uua .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-ob6uua .LinkCard.new,.css-ob6uua .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-ob6uua .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-ob6uua .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-ob6uua .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-ob6uua .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-ob6uua .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-ob6uua .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-ob6uua .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-ob6uua .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-ob6uua .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-ob6uua .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-ob6uua .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-ob6uua .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-ob6uua .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-ob6uua .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-ob6uua .FileLinkCard-info{margin-left:12px;}.css-ob6uua .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-ob6uua .FileLinkCard-source{white-space:pre;}.css-ob6uua img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-ob6uua img.content_image[data-size="normal"],.css-ob6uua img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-ob6uua img.content_image[data-size="small"],.css-ob6uua img.origin_image[data-size="small"]{width:320px;max-width:100%;}@-webkit-keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}@keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}</style><style data-emotion-css="zein01">.css-zein01{border-radius:4px;padding:0 12px;border:1px solid #ebeced;}</style><style data-emotion-css="1xlfegr">.css-1xlfegr{background:transparent;box-shadow:none;}</style><style data-emotion-css="1gomreu">.css-1gomreu{position:relative;display:inline-block;}</style><style data-emotion-css="1u7r5c9">.css-1u7r5c9{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:40px;height:40px;border-radius:50%;}</style><style data-emotion-css="ch8ocw">.css-ch8ocw{position:relative;display:inline-block;height:30px;padding:0 12px;font-size:14px;line-height:30px;color:#1772F6;vertical-align:top;border-radius:100px;background:rgba(23,114,246,0.1);}.css-ch8ocw:hover{background-color:rgba(23,114,246,0.15);}</style><style type="text/css">/* toast 打包后 css 的有先层级有问题，自定义的样式会被覆盖，先加个 important 吧 */
.Toast_module_toast__e741a14e {
  top: 40px !important;
  border-radius: 34px !important;
  box-shadow: 0px 4px 16px #00000014 !important;
  background-color: #fff !important;
  padding: 11px 24px !important;
  font-weight: 500 !important;
  font-size: 14px !important;
  line-height: 22px !important;
  color: #121212 !important;
  transform: translate(-50%, 0%) !important;
}
</style><style type="text/css">.Marquee_module_marquee__218919a6 {
  overflow: hidden;
}

.Marquee_module_marqueeText__218919a6 {
  position: relative;
  transition: all 0.5s ease-in-out;
}
.Marquee_module_noAnimation__218919a6 {
  transition: none;
}

.Marquee_module_marqueeItem__218919a6 {
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  overflow: hidden;
  flex: 1;
}
</style><style data-emotion="css"></style></head><body class="WhiteBg-body PostIndex-body" aria-status="false" aria-ofstatus="false" aria-basefontsize="16" data-rh="class"><a id="ariaTipText" role="pagedescription" aria-label="欢迎进入 UE4中的委托及实现原理 - 知乎,盲人用户使用操作智能引导，请按快捷键Ctrl+Alt+R；阅读详细操作说明请按快捷键Ctrl+Alt+问号键。" aria-atomic="true" href="javascript:void(0)" class="skipAutoFix" style="width: 1px; height: 1px;"><img src="" style="width:1px !important;height:1px !important;position:absolute;top:0;"></a><div id="root"><div class="App"><div class="LoadingBar  css-55n9hh"></div><div><span style="position:absolute;top:-10000px;left:-10000px" role="log" aria-live="assertive"></span></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;13-37-60-50-30&quot;}" data-zop="{&quot;authorName&quot;:&quot;足迹三万里&quot;,&quot;itemId&quot;:&quot;575671003&quot;,&quot;title&quot;:&quot;UE4中的委托及实现原理&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-detail-view-path-module="PostItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;575671003&quot;,&quot;id&quot;:&quot;575671003&quot;}}}"><div class="ColumnPageHeader-Wrapper"><div><div class="Sticky ColumnPageHeader is-fixed css-1l12z7y" style="width: 1000px; top: 0px; left: 0px;"><div class="ColumnPageHeader-content"><a href="https://www.zhihu.com/" aria-label="知乎"><svg viewBox="0 0 64 30" fill="#1772F6" width="64" height="30" class="css-1hlrcxk"><path d="M29.05 4.582H16.733V25.94h3.018l.403 2.572 4.081-2.572h4.815V4.582zm-5.207 18.69l-2.396 1.509-.235-1.508h-1.724V7.233h6.78v16.04h-2.425zM14.46 14.191H9.982c0-.471.033-.954.039-1.458v-5.5h5.106V5.935a1.352 1.352 0 0 0-.404-.957 1.378 1.378 0 0 0-.968-.396H5.783c.028-.088.056-.177.084-.255.274-.82 1.153-3.326 1.153-3.326a4.262 4.262 0 0 0-2.413.698c-.57.4-.912.682-1.371 1.946-.532 1.453-.997 2.856-1.31 3.693C1.444 8.674.28 11.025.28 11.025a5.85 5.85 0 0 0 2.52-.61c1.119-.593 1.679-1.502 2.054-2.883l.09-.3h2.334v5.5c0 .5-.045.982-.073 1.46h-4.12c-.71 0-1.39.278-1.893.775a2.638 2.638 0 0 0-.783 1.874h6.527a17.717 17.717 0 0 1-.778 3.649 16.796 16.796 0 0 1-3.012 5.273A33.104 33.104 0 0 1 0 28.74s3.13 1.175 5.425-.954c1.388-1.292 2.631-3.814 3.23-5.727a28.09 28.09 0 0 0 1.12-5.229h5.967v-1.37a1.254 1.254 0 0 0-.373-.899 1.279 1.279 0 0 0-.909-.37z"></path><path d="M11.27 19.675l-2.312 1.491 5.038 7.458a6.905 6.905 0 0 0 .672-2.218 3.15 3.15 0 0 0-.28-2.168l-3.118-4.563zM51.449 15.195V5.842c4.181-.205 7.988-.405 9.438-.483l.851-.05c.387-.399.885-2.395.689-3.021-.073-.25-.213-.666-.638-.555a33.279 33.279 0 0 1-4.277.727c-2.766.321-3.97.404-7.804.682-6.718.487-12.709.72-12.709.72a2.518 2.518 0 0 0 .788 1.834 2.567 2.567 0 0 0 1.883.706c2.278-.095 5.598-.25 8.996-.41v9.203h-12.78c0 .703.281 1.377.783 1.874a2.69 2.69 0 0 0 1.892.777h10.105v7.075c0 .887-.464 1.192-1.231 1.214h-3.92a4.15 4.15 0 0 0 .837 1.544 4.2 4.2 0 0 0 1.403 1.067 6.215 6.215 0 0 0 2.71.277c1.36-.066 2.967-.826 2.967-3.57v-7.607h11.28c.342 0 .67-.135.91-.374.242-.239.378-.563.378-.902v-1.375H51.449z"></path><path d="M42.614 8.873a2.304 2.304 0 0 0-1.508-.926 2.334 2.334 0 0 0-1.727.405l-.376.272 4.255 5.85 2.24-1.62-2.884-3.98zM57.35 8.68l-3.125 4.097 2.24 1.663 4.517-5.927-.375-.277a2.32 2.32 0 0 0-1.722-.452 2.327 2.327 0 0 0-1.536.896z"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="https://www.zhihu.com/column/c_1329804107125780480">Unreal入门精要</a></div></div><div class="ColumnPageHeader-Button"><div class="Popover"><button title="更多" id="Popover1-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button ColumnPageHeader-MenuToggler FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--Dots" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></button></div><button type="button" class="Button ColumnPageHeader-WriteButton FEfUrdfMIKpQDJDqkjte Button--blue JmYzaky7MEPMFcJDLNMG"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--EditSurround" fill="currentColor"><path d="M4.352 6.804A2.554 2.554 0 0 1 6.905 4.25h6.072a.875.875 0 0 0 0-1.75H6.905a4.304 4.304 0 0 0-4.303 4.304v10.142a4.304 4.304 0 0 0 4.303 4.304h10.143a4.304 4.304 0 0 0 4.304-4.304v-6.071a.875.875 0 0 0-1.75 0v6.071a2.554 2.554 0 0 1-2.554 2.554H6.905a2.554 2.554 0 0 1-2.553-2.554V6.804Z"></path><path d="M20.595 4.731a.875.875 0 1 0-1.237-1.237l-7.763 7.762a.875.875 0 1 0 1.238 1.238l7.762-7.763Z"></path></svg>写文章</button></div></div><div class="ColumnPageHeader-profile"><div class="Popover AppHeader-menu"><button id="Popover4-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button AppHeader-profileEntry FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><img class="Avatar AppHeader-profileAvatar css-fnnb9l" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x" alt="点击打开没有了想念的主页"></button></div><div class="Popover ddLajxN_Q0AuobBZjX9m AppHeaderProfileMenu-creatorHintPopover"><div class="AppHeaderProfileMenu-creatorHintToggler" id="Popover5-toggle" aria-haspopup="true" aria-expanded="false"></div></div></div></div><div class="Sticky--holder" style="position: relative; inset: 0px; display: block; float: none; margin: 0px; height: 52px;"></div></div></div><div class="css-78p1r9"><div class="css-1h1xzpn"><div class="css-1ld0bim"><span style="box-sizing:border-box;display:block;overflow:hidden;width:initial;height:initial;background:none;opacity:1;border:0;margin:0;padding:0"><picture><source type="image/avif" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w.webp 1x, UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w.webp 2x" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w.webp"><source type="image/webp" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w_002.webp 1x, UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w_002.webp 2x" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w_002.webp"><img alt="UE4中的委托及实现原理" decoding="async" style="position: absolute; inset: 0px; box-sizing: border-box; padding: 0px; border: medium; margin: auto; display: block; width: 0px; height: 0px; min-width: 100%; max-width: 100%; min-height: 100%; max-height: 100%;" width="100%" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w.jpg" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w.jpg 1x, UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-86e79fd183ce4bf6af267032da5829da_1440w.jpg 2x"></picture></span></div></div></div><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">UE4中的委托及实现原理</h1><div class="Post-Author"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><div class="AuthorInfo"><meta itemprop="name" content="足迹三万里"><meta itemprop="image" content="https://pic1.zhimg.com/v2-2772001ae921f61e44f78917374905d8_l.jpg?source=172ae18b"><meta itemprop="url" content="https://www.zhihu.com/people/tencentboy"><meta itemprop="zhihu:followerCount"><span class="UserLink AuthorInfo-avatarWrapper"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/tencentboy" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User"><img class="Avatar AuthorInfo-avatar css-1syywx2" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2772001ae921f61e44f78917374905d8_l_002.jpg" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2772001ae921f61e44f78917374905d8_l_002.jpg 2x" alt="足迹三万里"></a></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/tencentboy" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User">足迹三万里</a></div></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"></div></div></div></div></div><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Plus FollowButton-icon" fill="currentColor"><path fill-rule="evenodd" d="M13.25 3.25a1.25 1.25 0 1 0-2.5 0v7.5h-7.5a1.25 1.25 0 1 0 0 2.5h7.5v7.5a1.25 1.25 0 1 0 2.5 0v-7.5h7.5a1.25 1.25 0 0 0 0-2.5h-7.5v-7.5Z" clip-rule="evenodd"></path></svg></span>关注他</button></div><div class="LabelContainer-wrapper"></div><div><div class="css-dvccr2"><div class="css-1lr85n">64 人赞同了该文章</div><svg width="14px" height="14px" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRight16 css-z4ujak" fill="currentColor"><path fill-rule="evenodd" d="M6.252 2.328a.75.75 0 0 1 1.04.213l3.334 5.05a.75.75 0 0 1 0 .826L7.292 13.46a.75.75 0 0 1-1.251-.828L9.1 8.004 6.04 3.367a.75.75 0 0 1 .212-1.039Z" clip-rule="evenodd"></path></svg></div></div><span class="css-z4ujak"></span></header><div class="Post-RichTextContainer"><div class="css-1od93p9"><div class="css-376mun"><div class="css-h7wqi8"><div class="css-17yi3iy"><div class="css-lcgmxk"><div><div class="Catalog isCatalogV2 css-2hy5iv" data-za-detail-view-name="正文"><div class="css-8kjoqe"><div class="css-u56wtg"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--Catalog24" fill="currentColor"><path d="M10 5a1 1 0 011-1h10a1 1 0 110 2H11a1 1 0 01-1-1zm4 6a1 1 0 100 2h7a1 1 0 100-2h-7zm0 7a1 1 0 100 2h7a1 1 0 100-2h-7zm-8.335.25a.915.915 0 01-.915-.915V12.75H10a.75.75 0 000-1.5H4.75V6.665c0-.505.41-.915.915-.915H7a.75.75 0 000-1.5H5.665A2.415 2.415 0 003.25 6.665v10.67a2.415 2.415 0 002.415 2.415H10a.75.75 0 000-1.5H5.665z"></path></svg></span><div class="css-1czzy4f">目录</div></div></div></div></div></div></div></div><div class="RichText ztext Post-RichText css-ob6uua" options="[object Object]"><h2 data-first-child="" id="h_575671003_0" data-into-catalog-status=""><b>委托的区别</b></h2><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6a2a16a85d142879f7694f13ebaadbe1_1440w.png" data-caption="" data-size="normal" data-rawwidth="661" data-rawheight="497" data-original-token="v2-6a2a16a85d142879f7694f13ebaadbe1" class="origin_image zh-lightbox-thumb" width="661" data-original="https://pic2.zhimg.com/v2-6a2a16a85d142879f7694f13ebaadbe1_r.jpg"></div></figure><p data-pid="j_XEpXQL"><b>不同点</b></p><ol><li data-pid="43fm9Br_">按照可以绑定的方法个数区分： 可以分为两大类：单播和多播。<br><span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=%E5%8D%95%E6%92%AD%E4%BB%A3%E7%90%86%E5%A7%94%E6%89%98&amp;zhida_source=entity" target="_blank">单播代理委托<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>，指的是只能绑定一个函数指针的委托，实现一对一的通知。<br><span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=%E5%A4%9A%E6%92%AD%E4%BB%A3%E7%90%86%E5%A7%94%E6%89%98&amp;zhida_source=entity" target="_blank">多播代理委托<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>，指的是能绑定多个函数指针的委托，实现一对多的通知。<br>单播调用方式为 <span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=ExecuteIfBound&amp;zhida_source=entity" target="_blank">ExecuteIfBound<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>()<br>多播调用方式为 <span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=BroadCast&amp;zhida_source=entity" target="_blank">BroadCast<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>()<br>单播删除方式为 <span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=Unbind&amp;zhida_source=entity" target="_blank">Unbind<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>()<br>多播的删除方式为 <span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=Remove&amp;zhida_source=entity" target="_blank">Remove<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>()，<span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=RemoveAll&amp;zhida_source=entity" target="_blank">RemoveAll<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>()<br>单播绑定方法为 Bind...(如 BindStatic，BindRaw，BindUObject等)<br>多播绑定方式为 Add...(如 AddUObject...)；</li><li data-pid="-ivub0T4">按照是否支持序列化区分，<b>只有带有关键字 "DYNAMIC"的委托，才支持序列化</b>。<b>只有动态多播可以被蓝图绑定</b>，通过宏 BlueprintAssignable。</li><li data-pid="rzo1U3f9">按照是否有返回值区分，通过关键字 "RetVal"，注意<b>只有单播委托和动态单播委托，才有返回值</b>。</li></ol><div class="highlight"><pre><code class="language-text">DECLARE_DELEGATE_RetVal_OneParam( ReturnValueType, DelegateName, Param1Type ) 
DECLARE_DYNAMIC_DELEGATE_RetVal_OneParam( ReturnValueType, DelegateName, Param1Type, Param1Name ) </code></pre></div><p data-pid="XOIDgiJN">例如：</p><div class="highlight"><pre><code class="language-text">DECLARE_DELEGATE_RetVal_OneParam(bool, FIsMontagePlayingExceptSlots, const TArray&lt;FName&gt;&amp;); </code></pre></div><p data-pid="fiZPoUur"><b>补充点：</b></p><ol><li data-pid="o2kBFRRs">多播委托与单播委托都支持多参数传入，引擎支持最多9个参数。</li><li data-pid="jGv_j_qu"><b>委托的命名开头必须为F，否则会编译报错。</b></li><li data-pid="fGVlNfLY">动态委托可以进行序列化，可以通过名称查找它们函数，其执行速度比常规代理慢。</li></ol><h2 id="h_575671003_1" data-into-catalog-status=""><b>委托实现原理</b></h2><p data-pid="S-Yhu0Cq">引擎版本UE 4.21</p><p data-pid="s_wURptF">涉及源码：</p><p data-pid="c2AHHQ_h">大部分源码都在Engine\Source\Runtime\Core\Public\Delegates文件夹下</p><p data-pid="K253wm9C">DelegateCombinations.h</p><p data-pid="DEqHdXnK">Delegate.h</p><p data-pid="2ubmZgzG">DelegateSignatureImpl.inl</p><p data-pid="eI0deUYx">DelegateBase.h</p><p data-pid="24GWmPfU">IDelegateInstance.h</p><p data-pid="gWlG1B7q">DelegateInstancesImpl.h</p><p data-pid="yakUDK4b">DelegateInstanceInterface.h</p><p data-pid="FSt1GXND">MulticastDelegateBase.h</p><p data-pid="u6w2zQEn">ScriptDelegates.h</p><p data-pid="y_UCGw_U">虚幻引擎支持下面这几种类型的委托：</p><p data-pid="BSgpgpCb">一、单播委托</p><p data-pid="DHUPnted">单播委托能绑定一个函数指针，委托被执行的时候也会触发这个函数。</p><p data-pid="CqZ4zgWh">二、多播委托</p><p data-pid="jXOIiagX">多播委托维护了一个由单播委托组成的TArray数组，依托单播委托实现的。</p><p data-pid="zzenY6yX">多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。</p><p data-pid="q1LQ6je6">三、事件</p><p data-pid="411Gc6To">Event的底层实现其实是一个Multicast Delegate</p><p data-pid="k0QFaG-r">四、动态单播委托</p><p data-pid="AOnmFm1O">动态单播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度慢。</p><p data-pid="n4a7Wnwe"><b>动态绑定的函数，需要加标记UFUNCTION</b></p><p data-pid="SnaHiqDX">五、动态多播委托</p><p data-pid="SLg-tJv5">动态多播委托维护了一个由动态单播委托组成的TArray数组，依托动态单播委托实现的。</p><p data-pid="APbUaatQ">动态多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。</p><p data-pid="FNfsuqX2">动态多播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度慢。</p><p data-pid="jutKBg4K"><b>动态绑定的函数，需要加标记UFUNCTION</b></p><p data-pid="nvyoI3nG"><b>只有动态多播可以被蓝图绑定，需要加标记<span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=UPROPERTY%28BlueprintAssignable%29&amp;zhida_source=entity" target="_blank">UPROPERTY(BlueprintAssignable)<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span></b></p><p class="ztext-empty-paragraph"><br></p><h2 id="h_575671003_2" data-into-catalog-status=""><b>一、单播委托</b></h2><h3 id="h_575671003_3" data-into-catalog-status=""><b>定义</b></h3><div class="highlight"><pre><code class="language-text">#define DECLARE_DELEGATE( DelegateName ) FUNC_DECLARE_DELEGATE( DelegateName, void ) </code></pre></div><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2b9c2df4dcce3b0252f189e212801b77_1440w.png" data-caption="" data-size="normal" data-rawwidth="1199" data-rawheight="177" data-original-token="v2-2b9c2df4dcce3b0252f189e212801b77" class="origin_image zh-lightbox-thumb" width="1199" data-original="https://picx.zhimg.com/v2-2b9c2df4dcce3b0252f189e212801b77_r.jpg"></div></figure><p data-pid="ZGFSAlHG">单播委托通过<span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=TBaseDelegate&amp;zhida_source=entity" target="_blank">TBaseDelegate<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>这个类实现的，支持了多个参数。定义宏定义委托时，就是通过调用TBaseDelegate&lt;__VA_ARGS__&gt;，创建委托类型，并通过typedef重命名委托的名字为给定的委托名字。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-8e883a766545ad190ad2e3d8d33bdbbe_1440w.png" data-caption="" data-size="normal" data-rawwidth="702" data-rawheight="67" data-original-token="v2-8e883a766545ad190ad2e3d8d33bdbbe" class="origin_image zh-lightbox-thumb" width="702" data-original="https://pic1.zhimg.com/v2-8e883a766545ad190ad2e3d8d33bdbbe_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-d771476e85a6e5e77633619da6ebbf6f_1440w.png" data-caption="" data-size="small" data-rawwidth="305" data-rawheight="323" data-original-token="v2-d771476e85a6e5e77633619da6ebbf6f" class="content_image" width="305"></div></figure><p data-pid="6AXnPH-x"><b>绑定函数指针到委托</b></p><p data-pid="fEzsL7JP">绑定函数实际可能传入的函数指针类型非常多，例如可能传入一个在UObject对象中的成员函数，可能传入一个Lambda函数等。所以实际上，<b>委托绑定函数，会根据各种传入函数指针类型进行适配，生成以IDelegateInstance为基类的派生类实例</b>。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4e09cdbc16e0bf453c7804f40bf5be1f_1440w.png" data-caption="" data-size="small" data-rawwidth="297" data-rawheight="563" data-original-token="v2-4e09cdbc16e0bf453c7804f40bf5be1f" class="content_image" width="297"></div></figure><p data-pid="nqMcNV3I">例如BindUObject()，适配派生出TBaseUObjectMethodDelegateInstance类</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-34aeb358ca1afd865991df09fd711bcb_1440w.png" data-caption="" data-size="normal" data-rawwidth="933" data-rawheight="225" data-original-token="v2-34aeb358ca1afd865991df09fd711bcb" class="origin_image zh-lightbox-thumb" width="933" data-original="https://pic4.zhimg.com/v2-34aeb358ca1afd865991df09fd711bcb_r.jpg"></div></figure><p data-pid="c_BmgYkK">在TBaseUObjectMethodDelegateInstance类的构造函数中，保存成员函数的函数指针，指向成员函数所在类的弱指针。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2fd7ecb1567b4ab6f94041474904e2d2_1440w.png" data-caption="" data-size="normal" data-rawwidth="853" data-rawheight="325" data-original-token="v2-2fd7ecb1567b4ab6f94041474904e2d2" class="origin_image zh-lightbox-thumb" width="853" data-original="https://pic3.zhimg.com/v2-2fd7ecb1567b4ab6f94041474904e2d2_r.jpg"></div></figure><h3 id="h_575671003_4" data-into-catalog-status=""><b>BindUObject() 绑定</b></h3><p data-pid="pxgOfJpf">在TBaseDelegate类中，实现了绑定的一系列方法，这里以BindUObject()为例，</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-08fe6d75d1b148f44cbe94f75deeb718_1440w.png" data-caption="" data-size="normal" data-rawwidth="610" data-rawheight="237" data-original-token="v2-08fe6d75d1b148f44cbe94f75deeb718" class="origin_image zh-lightbox-thumb" width="610" data-original="https://pic3.zhimg.com/v2-08fe6d75d1b148f44cbe94f75deeb718_r.jpg"></div></figure><p data-pid="DIJMoEoJ">先看下CreateUObject方法的实现：</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-8524a55993dc652f1df36d65d56444b7_1440w.png" data-caption="" data-size="normal" data-rawwidth="1360" data-rawheight="344" data-original-token="v2-8524a55993dc652f1df36d65d56444b7" class="origin_image zh-lightbox-thumb" width="1360" data-original="https://pic4.zhimg.com/v2-8524a55993dc652f1df36d65d56444b7_r.jpg"></div></figure><p data-pid="MgQ_1oBH">通过C++ placement new的方式，创建了TBaseUObjectMethodDelegateInstance派生类实例，这里使用typedef重命名了</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-dac8d66da17fec9a8bf25b5faede4c83_1440w.png" data-caption="" data-size="normal" data-rawwidth="1166" data-rawheight="105" data-original-token="v2-dac8d66da17fec9a8bf25b5faede4c83" class="origin_image zh-lightbox-thumb" width="1166" data-original="https://picx.zhimg.com/v2-dac8d66da17fec9a8bf25b5faede4c83_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_1440w.png" data-caption="" data-size="normal" data-rawwidth="1293" data-rawheight="78" data-original-token="v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7" class="origin_image zh-lightbox-thumb" width="1293" data-original="https://picx.zhimg.com/v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_r.jpg"></div></figure><p data-pid="LADb-jGQ">在TBaseUObjectMethodDelegateInstance派生类的构造函数中，保存了成员函数的函数指针，指向成员函数所在类的弱指针。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-1c7b7a36f037ba1be6997d88b96268ee_1440w.png" data-caption="" data-size="normal" data-rawwidth="1028" data-rawheight="141" data-original-token="v2-1c7b7a36f037ba1be6997d88b96268ee" class="origin_image zh-lightbox-thumb" width="1028" data-original="https://pic3.zhimg.com/v2-1c7b7a36f037ba1be6997d88b96268ee_r.jpg"></div></figure><p data-pid="7E5xHH7S">因为CreateUObject返回的是右值，这里会调用到<span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=216059615&amp;content_type=Article&amp;match_order=1&amp;q=TDelegate&amp;zhida_source=entity" target="_blank">TDelegate<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>的移动赋值运算符。</p><p data-pid="GfEdjs5s">*this = CreateUObject(InUserObject, InFunc, Vars...); </p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2931641ac1cbf391260965b774e83d6b_1440w.png" data-caption="" data-size="normal" data-rawwidth="606" data-rawheight="248" data-original-token="v2-2931641ac1cbf391260965b774e83d6b" class="origin_image zh-lightbox-thumb" width="606" data-original="https://picx.zhimg.com/v2-2931641ac1cbf391260965b774e83d6b_r.jpg"></div></figure><p data-pid="g3GogHX8">最终，将创建出来的TBaseDelegate赋值给自身，实现绑定函数。</p><h3 id="h_575671003_5" data-into-catalog-status=""><b>Unbind() 解绑</b></h3><p data-pid="Pazn7WJu">在父类FDelegateBase中，定义了Unbind()解绑委托的方法。获取了当前对应的派生类实例，并调用实例的析构函数，回收分配的内存。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-ee23cc601e5a4f81593a3d78d176643c_1440w.png" data-caption="" data-size="normal" data-rawwidth="899" data-rawheight="254" data-original-token="v2-ee23cc601e5a4f81593a3d78d176643c" class="origin_image zh-lightbox-thumb" width="899" data-original="https://pica.zhimg.com/v2-ee23cc601e5a4f81593a3d78d176643c_r.jpg"></div></figure><h3 id="h_575671003_6" data-into-catalog-status=""><b>ExecuteIfBound() 执行委托</b></h3><p data-pid="6ccN-M51">在TBaseDelegate中，实现了执行委托的方法，这里以ExecuteIfBound()为例。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-edab8aefa8bd5ec36637dd5231723f5c_1440w.png" data-caption="" data-size="normal" data-rawwidth="840" data-rawheight="216" data-original-token="v2-edab8aefa8bd5ec36637dd5231723f5c" class="origin_image zh-lightbox-thumb" width="840" data-original="https://pica.zhimg.com/v2-edab8aefa8bd5ec36637dd5231723f5c_r.jpg"></div></figure><p data-pid="yUAPaBiS">这里的Super是TBaseDelegate&lt;TTypeWrapper&lt;void&gt;, ParamTypes...&gt;</p><p data-pid="Yd3PVHwG">typedef TBaseDelegate&lt;TTypeWrapper&lt;void&gt;, ParamTypes...&gt; Super; </p><p data-pid="7FJVsgUu">Super::GetDelegateInstanceProtected()获取了当前对应的派生类实例，然后执行对应派生类实例中的ExecuteIfSafe方法。</p><p data-pid="Qb8HUOcO">例如绑定的是UObject成员方法，在TBaseUObjectMethodDelegateInstance派生类中，实现了ExecuteIfSafe方法，当指向成员函数所在类对象有效，执行Execute方法。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-15466f87af5c7caabd9c0e075523b682_1440w.png" data-caption="" data-size="normal" data-rawwidth="995" data-rawheight="657" data-original-token="v2-15466f87af5c7caabd9c0e075523b682" class="origin_image zh-lightbox-thumb" width="995" data-original="https://pic1.zhimg.com/v2-15466f87af5c7caabd9c0e075523b682_r.jpg"></div></figure><p data-pid="Yy9goF__">在
Execute方法中，出现了Payload.ApplyAfter，Payload为委托绑定时传递的额外参数变量列表，这些参数会存储在代理对象内
部；在触发委托时，Payload会紧跟着Execute、ExecuteIfBound或Broadcast传入的参数之后，填充到绑定函数指针的参数
列表中。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-8b558a87f0e59ca091ab307e97a9bf85_1440w.png" data-caption="" data-size="normal" data-rawwidth="1267" data-rawheight="418" data-original-token="v2-8b558a87f0e59ca091ab307e97a9bf85" class="origin_image zh-lightbox-thumb" width="1267" data-original="https://pic4.zhimg.com/v2-8b558a87f0e59ca091ab307e97a9bf85_r.jpg"></div></figure><p data-pid="z6ed7mZd">Payload实际上是一个TTuple</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-028cdc9448ad2986935f905b562271ee_1440w.png" data-caption="" data-size="normal" data-rawwidth="427" data-rawheight="79" data-original-token="v2-028cdc9448ad2986935f905b562271ee" class="origin_image zh-lightbox-thumb" width="427" data-original="https://pic3.zhimg.com/v2-028cdc9448ad2986935f905b562271ee_r.jpg"></div></figure><p data-pid="FHTAlkE-">真正的函数调用在TMemberFunctionCaller中，重写了()符号，通过完美转发传入参数，获取成员函数所在类的对象，执行其成员函数。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-a16f36f20ca387abda7a6e73815d761d_1440w.png" data-caption="" data-size="normal" data-rawwidth="998" data-rawheight="447" data-original-token="v2-a16f36f20ca387abda7a6e73815d761d" class="origin_image zh-lightbox-thumb" width="998" data-original="https://pic2.zhimg.com/v2-a16f36f20ca387abda7a6e73815d761d_r.jpg"></div></figure><h3 id="h_575671003_7" data-into-catalog-status=""><b>测试代码</b></h3><p data-pid="UuHy9S3P">绑定：BindStatic方法</p><p data-pid="84ISIC77">解绑：Unbind方法</p><p data-pid="n2-nsvWD">执行：ExecuteIfBound方法</p><p data-pid="U8hPOdYt">1，BindStatic 绑定一个原始的C++静态函数指针。</p><p data-pid="8f4YPf5Q">2，BindStatic 带有Payload额外参数变量列表的绑定委托方式。</p><p data-pid="2Xj3FVTq">3，BindRaw 绑定一个原始的C++函数指针</p><p data-pid="DHDL799M">4，BindSP 绑定一个共享指针，使用MakeShared代替MakeShareable，可以避免二次内存分配，提高性能</p><p data-pid="VeqcQ8QJ">5，BindThreadSafeSP 绑定一个线程安全的共享指针，相比BindSP会慢一些</p><p data-pid="1Oq6cD1I">6，BindUObject 绑定一个基于UObject的成员函数</p><p data-pid="GzG6FPMQ">7，BindUFunction 绑定一个基于UFunction的成员函数</p><p data-pid="7dUqy97e">8，BindLambda 绑定一个Lambda表达式</p><p data-pid="3HRc7ulD">9，定时器，带参数的回调方式</p><p data-pid="AZ1sFbT4"><b>注意：</b></p><p data-pid="I6oTjcr1"><b>1，动态单播委托、动态多播委托不支持Payload，单播委托，多播委托支持Payload。</b></p><p data-pid="jCKWBh9C"><b>2，使用定时器时，需要#include "TimerManager.h"和#include "Engine/World.h"</b></p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-94c4974d484c04245e5264a6bcfcaabe_1440w.png" data-caption="" data-size="normal" data-rawwidth="844" data-rawheight="205" data-original-token="v2-94c4974d484c04245e5264a6bcfcaabe" class="origin_image zh-lightbox-thumb" width="844" data-original="https://pic1.zhimg.com/v2-94c4974d484c04245e5264a6bcfcaabe_r.jpg"></div></figure><p data-pid="zlizDFpk">SimpleDelegateActor.h</p><div class="highlight"><pre><code class="language-text">#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"

#include "SimpleDelegateActor.generated.h"

DECLARE_DELEGATE_OneParam(FTestDelegate, int32);

UCLASS()
class TOAA_API ASimpleDelegateActor : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	ASimpleDelegateActor();
	
	UFUNCTION(BlueprintCallable)
	void TestDelegate();

	UFUNCTION(BlueprintCallable)
	void RemoveDelegate();

	static void StaticFunction(int32 param);
	static void StaticFuncWithPayload(int32 param1, float param2, FString param3);

	void ClearTimer(int32 index);
	FTimerHandle timerHandle;

	FTestDelegate testDelegate1;
	FTestDelegate testDelegate2;
	FTestDelegate testDelegate3;
	FTestDelegate testDelegate4;
	FTestDelegate testDelegate5;
	FTestDelegate testDelegate6;
	FTestDelegate testDelegate7;
	FTestDelegate testDelegate8;

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

};

// 继承UObject的C++Class
UCLASS()
class UDelegateTestClass : public UObject
{
	GENERATED_BODY()
protected:
	int m_Value = 0;
public:
	void UDelegateClassFunction1(int param)
	{
		this-&gt;m_Value = param;
		UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor UDelegateClassFunction1 : %d"), param);
	}

	UFUNCTION() 
	void UDelegateClassFunction2(int param)
	{
		this-&gt;m_Value = param;
		UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor UDelegateClassFunction1 : %d"), param);
	}
};

// 原始的C++Class
class DelegateTestClass
{
	int m_Value = 0;
public:

	void DelegateFunction1(int param)
	{
		this-&gt;m_Value = param;
		UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor DelegateFunction1 : %d"), param);
	}

	void DelegateFunction2(int param)
	{
		this-&gt;m_Value = param;
		UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor DelegateFunction2 : %d"), param);
	}

	void DelegateFunction3(int param)
	{
		this-&gt;m_Value = param;
		UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor DelegateFunction3 : %d"), param);
	}

};
</code></pre></div><p data-pid="ROskhBjc">SimpleDelegateActor.cpp</p><div class="highlight"><pre><code class="language-text">#include "SimpleDelegateActor.h"
#include "TimerManager.h"
#include "Engine/World.h"

// Sets default values
ASimpleDelegateActor::ASimpleDelegateActor()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = false;

}

// Called when the game starts or when spawned
void ASimpleDelegateActor::BeginPlay()
{
	Super::BeginPlay();
	
}

void ASimpleDelegateActor::TestDelegate()
{
	// BindStatic 绑定一个原始的C++静态函数指针
	testDelegate1.BindStatic(ASimpleDelegateActor::StaticFunction);
	testDelegate1.ExecuteIfBound(10);

	// BindStatic with payload
	testDelegate2.BindStatic(ASimpleDelegateActor::StaticFuncWithPayload, 15.5f, FString(TEXT("WithPayload")));
	testDelegate2.ExecuteIfBound(20);

	// BindRaw 绑定一个原始的C++函数指针
	DelegateTestClass testObj1;
	testDelegate3.BindRaw(&amp;testObj1, &amp;DelegateTestClass::DelegateFunction1);
	testDelegate3.ExecuteIfBound(30);

	// BindSP 绑定一个共享指针，使用MakeShared代替MakeShareable，可以避免二次内存分配，提高性能
	TSharedRef&lt;DelegateTestClass&gt; testObj2 = MakeShared&lt;DelegateTestClass&gt;();
	testDelegate4.BindSP(testObj2, &amp;DelegateTestClass::DelegateFunction2);
	testDelegate4.ExecuteIfBound(40);

	// BindThreadSafeSP 绑定一个线程安全的共享指针，相比BindSP会慢一些
	TSharedRef&lt;DelegateTestClass, ESPMode::ThreadSafe&gt; testObj3 = MakeShared&lt;DelegateTestClass, ESPMode::ThreadSafe&gt;();
	testDelegate5.BindThreadSafeSP(testObj3, &amp;DelegateTestClass::DelegateFunction3);
	testDelegate5.ExecuteIfBound(50);

	// BindUObject 绑定一个基于UObject的成员函数
	UDelegateTestClass* testObj4 = NewObject&lt;UDelegateTestClass&gt;(this, UDelegateTestClass::StaticClass());
	testDelegate6.BindUObject(testObj4, &amp;UDelegateTestClass::UDelegateClassFunction1);
	testDelegate6.ExecuteIfBound(60);

	// BindUFunction 绑定一个基于UObject的成员函数
	// STATIC_FUNCTION_FNAME为了提取类成员函数名中的函数名字符串，查找UFUNCTION函数
	UDelegateTestClass* testObj5 = NewObject&lt;UDelegateTestClass&gt;(this, UDelegateTestClass::StaticClass());
	testDelegate7.BindUFunction(testObj5, STATIC_FUNCTION_FNAME(TEXT("UDelegateTestClass::UDelegateClassFunction2")));
	testDelegate7.ExecuteIfBound(70);

	// BindLambda 绑定一个Lambda表达式
	auto LambdaFunction = [](int param)-&gt;void
	{
		UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor LambdaFunction : %d"), param);
	};
	testDelegate8.BindLambda(LambdaFunction);
	testDelegate8.ExecuteIfBound(80);

	// FTimerDelegate 一般这样写定时器的回调绑定
	// GetWorldTimerManager().SetTimer(timerHandle, this, &amp;ASimpleDelegateActor::ClearTimer, 2, false);

	// 但想要传递参数到回调函数时，上面的写法就不能满足了，这时，可以通过绑定Lambda表达式达到我们想要的结果
	// 如果不使用TWeakObjectPtr，定时器执行到回调函数时，this可能是野指针，导致崩溃。
	// 通过判断弱指针是否有效，就可以有效避免上面的崩溃问题。
	int index = 80;
	GetWorldTimerManager().SetTimer(timerHandle, [WeakThis = TWeakObjectPtr&lt;ASimpleDelegateActor&gt;(this), index]() {
		if (WeakThis.IsValid())
		{
			WeakThis-&gt;ClearTimer(index);
		}
	}, 2.0f, false);
}

void ASimpleDelegateActor::RemoveDelegate()
{
	testDelegate1.Unbind();
	testDelegate2.Unbind();
	testDelegate3.Unbind();
	testDelegate4.Unbind();
	testDelegate5.Unbind();
	testDelegate6.Unbind();
	testDelegate7.Unbind();
	testDelegate8.Unbind();
	UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor::RemoveDelegate"));
}

void ASimpleDelegateActor::StaticFunction(int32 param)
{
	UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor::StaticFunction : %d"), param);
}

void ASimpleDelegateActor::StaticFuncWithPayload(int32 param1, float param2, FString param3)
{
	UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor::StaticFuncWithPayload : %d, %f, %s"), param1, param2, *param3);
}

void ASimpleDelegateActor::ClearTimer(int32 index)
{
	UE_LOG(LogTemp, Log, TEXT("ASimpleDelegateActor::ClearTimer : %d"), index);
	GetWorldTimerManager().ClearTimer(timerHandle);
}

</code></pre></div><p class="ztext-empty-paragraph"><br></p><h2 id="h_575671003_8" data-into-catalog-status=""><b>二、多播委托</b></h2><p data-pid="ubRJy-p2">多播委托维护了一个由单播委托组成的TArray数组，依托单播委托实现的。</p><p data-pid="bLQwb158">多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。</p><h3 id="h_575671003_9" data-into-catalog-status=""><b>定义</b></h3><div class="highlight"><pre><code class="language-text">#define DECLARE_MULTICAST_DELEGATE( DelegateName ) FUNC_DECLARE_MULTICAST_DELEGATE( DelegateName, void ) </code></pre></div><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-172fda021bf47b2d5ed8f5ab33a0d6ee_1440w.png" data-caption="" data-size="normal" data-rawwidth="728" data-rawheight="71" data-original-token="v2-172fda021bf47b2d5ed8f5ab33a0d6ee" class="origin_image zh-lightbox-thumb" width="728" data-original="https://pic3.zhimg.com/v2-172fda021bf47b2d5ed8f5ab33a0d6ee_r.jpg"></div></figure><p data-pid="k9P6Ti-K">多播委托的实现是在父类TBaseMulticastDelegate类中，</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-a147cd0bd2a7189d317242b610e102d8_1440w.png" data-caption="" data-size="normal" data-rawwidth="1052" data-rawheight="71" data-original-token="v2-a147cd0bd2a7189d317242b610e102d8" class="origin_image zh-lightbox-thumb" width="1052" data-original="https://pic1.zhimg.com/v2-a147cd0bd2a7189d317242b610e102d8_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-74ee91d6787582dc9ff5bbb8136b3bf0_1440w.png" data-caption="" data-size="small" data-rawwidth="319" data-rawheight="461" data-original-token="v2-74ee91d6787582dc9ff5bbb8136b3bf0" class="content_image" width="319"></div></figure><h3 id="h_575671003_10" data-into-catalog-status=""><b>AddUObject() 绑定</b></h3><p data-pid="SQ9aQ0n_">例如绑定UObject的成员函数，调用AddUObject()方法</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-8aaf9e99ed8cddcfaa517f0ec46954dc_1440w.png" data-caption="" data-size="normal" data-rawwidth="1210" data-rawheight="243" data-original-token="v2-8aaf9e99ed8cddcfaa517f0ec46954dc" class="origin_image zh-lightbox-thumb" width="1210" data-original="https://pica.zhimg.com/v2-8aaf9e99ed8cddcfaa517f0ec46954dc_r.jpg"></div></figure><ol><li data-pid="dQQxwVkh">首先，调用TBaseDelegate类的CreateUObject，<br></li></ol><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-8524a55993dc652f1df36d65d56444b7_1440w.png" data-caption="" data-size="normal" data-rawwidth="1360" data-rawheight="344" data-original-token="v2-8524a55993dc652f1df36d65d56444b7" class="origin_image zh-lightbox-thumb" width="1360" data-original="https://pic4.zhimg.com/v2-8524a55993dc652f1df36d65d56444b7_r.jpg"></div></figure><p data-pid="A3FGt5Gy"><br>通过C++ placement new的方式，创建了TBaseUObjectMethodDelegateInstance派生类实例，这里使用typedef重命名了<br></p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-dac8d66da17fec9a8bf25b5faede4c83_1440w.png" data-caption="" data-size="normal" data-rawwidth="1166" data-rawheight="105" data-original-token="v2-dac8d66da17fec9a8bf25b5faede4c83" class="origin_image zh-lightbox-thumb" width="1166" data-original="https://picx.zhimg.com/v2-dac8d66da17fec9a8bf25b5faede4c83_r.jpg"></div></figure><p class="ztext-empty-paragraph"><br></p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_1440w.png" data-caption="" data-size="normal" data-rawwidth="1293" data-rawheight="78" data-original-token="v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7" class="origin_image zh-lightbox-thumb" width="1293" data-original="https://picx.zhimg.com/v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_r.jpg"></div></figure><p data-pid="Wrlicbop"><br>在派生类的构造函数中，保存了成员函数的函数指针，指向成员函数所在类的弱指针。<br></p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-1c7b7a36f037ba1be6997d88b96268ee_1440w.png" data-caption="" data-size="normal" data-rawwidth="1028" data-rawheight="141" data-original-token="v2-1c7b7a36f037ba1be6997d88b96268ee" class="origin_image zh-lightbox-thumb" width="1028" data-original="https://pic3.zhimg.com/v2-1c7b7a36f037ba1be6997d88b96268ee_r.jpg"></div></figure><ol><li data-pid="Fs8fkE2o">然后， 调用Add方法，获取根据传入的参数不同，调用不同的Add方法。</li></ol><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-e3b3c2f2901736346a050bcfca3f5c3e_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="866" data-rawheight="628" data-original-token="v2-e3b3c2f2901736346a050bcfca3f5c3e" class="origin_image zh-lightbox-thumb" width="866" data-original="https://pica.zhimg.com/v2-e3b3c2f2901736346a050bcfca3f5c3e_r.jpg"></div></figure><p data-pid="GJrT0EJ4">GetDelegateInstanceProtectedHelper获取对应的委托实例，判断委托实例是否有效。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-654a36fe11d9e12de7df61b678b8e8e6_1440w.png" data-caption="" data-size="normal" data-rawwidth="1034" data-rawheight="170" data-original-token="v2-654a36fe11d9e12de7df61b678b8e8e6" class="origin_image zh-lightbox-thumb" width="1034" data-original="https://pic3.zhimg.com/v2-654a36fe11d9e12de7df61b678b8e8e6_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-84d44e1fa0671ce45cce523376a756b2_1440w.png" data-caption="" data-size="normal" data-rawwidth="687" data-rawheight="105" data-original-token="v2-84d44e1fa0671ce45cce523376a756b2" class="origin_image zh-lightbox-thumb" width="687" data-original="https://pica.zhimg.com/v2-84d44e1fa0671ce45cce523376a756b2_r.jpg"></div></figure><p data-pid="8gM0bher">FMulticastDelegateBase的AddInternal方法，从调用列表中，移除无效的函数绑定，把委托实例加入到调用列表中。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-a002cd275e32fc0e24adfa18a359c220_1440w.png" data-caption="" data-size="normal" data-rawwidth="729" data-rawheight="182" data-original-token="v2-a002cd275e32fc0e24adfa18a359c220" class="origin_image zh-lightbox-thumb" width="729" data-original="https://pica.zhimg.com/v2-a002cd275e32fc0e24adfa18a359c220_r.jpg"></div></figure><h3 id="h_575671003_11" data-into-catalog-status=""><b>Remove() 解绑</b></h3><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-10b9e52959927e0b0955f294013caec9_1440w.png" data-caption="" data-size="normal" data-rawwidth="386" data-rawheight="116" data-original-token="v2-10b9e52959927e0b0955f294013caec9" class="content_image" width="386"></div></figure><p data-pid="b6iXHL_M">在RemoveDelegateInstance()中，遍历调用列表，获取对应的IDelegateInstance委托实例，执行FDelegateBase的Unbind()方法。同时，从调用列表中，移除无效的函数绑定。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abbf3aabe1fa908b5758001aca6ff4ec_1440w.png" data-caption="" data-size="normal" data-rawwidth="1136" data-rawheight="473" data-original-token="v2-abbf3aabe1fa908b5758001aca6ff4ec" class="origin_image zh-lightbox-thumb" width="1136" data-original="https://pic1.zhimg.com/v2-abbf3aabe1fa908b5758001aca6ff4ec_r.jpg"></div></figure><p data-pid="agCkN9Wc">获取对应的委托实例，执行委托实例的析构函数，回收之前分配的内存。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-401d599b9c5a6b7a455e76b9a592f6c1_1440w.png" data-caption="" data-size="normal" data-rawwidth="871" data-rawheight="205" data-original-token="v2-401d599b9c5a6b7a455e76b9a592f6c1" class="origin_image zh-lightbox-thumb" width="871" data-original="https://pic4.zhimg.com/v2-401d599b9c5a6b7a455e76b9a592f6c1_r.jpg"></div></figure><h3 id="h_575671003_12" data-into-catalog-status=""><b>RemoveAll() 解绑所有</b></h3><p data-pid="rxANit1K">从多播委托的调用列表中移除绑定到指定对象的所有函数。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-b0f702eb60d295d3d25617a56dc8598b_1440w.png" data-caption="" data-size="normal" data-rawwidth="1017" data-rawheight="833" data-original-token="v2-b0f702eb60d295d3d25617a56dc8598b" class="origin_image zh-lightbox-thumb" width="1017" data-original="https://picx.zhimg.com/v2-b0f702eb60d295d3d25617a56dc8598b_r.jpg"></div></figure><h3 id="h_575671003_13" data-into-catalog-status=""><b>Broadcast() 执行委托</b></h3><p data-pid="CHpBcyZz">剔除无效的函数绑定，广播所有委托到所有绑定的对象。</p><p data-pid="JXzXz6oG">遍历调用列表，通过GetDelegateInstanceProtectedHelper获取IDelegateInstance委托实例，执行委托实例的ExecuteIfSafe方法，</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-e0d44dbd0dccdf20957f1a8377eea009_1440w.png" data-caption="" data-size="normal" data-rawwidth="1411" data-rawheight="695" data-original-token="v2-e0d44dbd0dccdf20957f1a8377eea009" class="origin_image zh-lightbox-thumb" width="1411" data-original="https://pic4.zhimg.com/v2-e0d44dbd0dccdf20957f1a8377eea009_r.jpg"></div></figure><p data-pid="GK5ihgR1">下面的流程就跟单播委托的执行一样了。</p><p data-pid="kVn8x_dI">例如，绑定的是UObject的成员函数，执行的就是委托实例为TBaseUObjectMethodDelegateInstance的ExecuteIfSafe方法</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-bc67219664b7b54f43f66767d889e3dc_1440w.png" data-caption="" data-size="normal" data-rawwidth="1301" data-rawheight="676" data-original-token="v2-bc67219664b7b54f43f66767d889e3dc" class="origin_image zh-lightbox-thumb" width="1301" data-original="https://pic1.zhimg.com/v2-bc67219664b7b54f43f66767d889e3dc_r.jpg"></div></figure><p data-pid="BSk40SMv">在
Execute方法中，出现了Payload.ApplyAfter，Payload为委托绑定时传递的额外参数变量列表，这些参数会存储在代理对象内
部；在触发委托时，Payload会紧跟着Execute、ExecuteIfBound或Broadcast传入的参数之后，填充到绑定函数指针的参数
列表中。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-8b558a87f0e59ca091ab307e97a9bf85_1440w.png" data-caption="" data-size="normal" data-rawwidth="1267" data-rawheight="418" data-original-token="v2-8b558a87f0e59ca091ab307e97a9bf85" class="origin_image zh-lightbox-thumb" width="1267" data-original="https://pic4.zhimg.com/v2-8b558a87f0e59ca091ab307e97a9bf85_r.jpg"></div></figure><p data-pid="v1gf1KBf">Payload实际上是一个TTuple</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-028cdc9448ad2986935f905b562271ee_1440w.png" data-caption="" data-size="normal" data-rawwidth="427" data-rawheight="79" data-original-token="v2-028cdc9448ad2986935f905b562271ee" class="origin_image zh-lightbox-thumb" width="427" data-original="https://pic3.zhimg.com/v2-028cdc9448ad2986935f905b562271ee_r.jpg"></div></figure><p data-pid="8i_RAS9B">真正的函数调用在TMemberFunctionCaller中，重写了()符号，通过完美转发传入参数，获取成员函数所在类的对象，执行其成员函数。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-a16f36f20ca387abda7a6e73815d761d_1440w.png" data-caption="" data-size="normal" data-rawwidth="998" data-rawheight="447" data-original-token="v2-a16f36f20ca387abda7a6e73815d761d" class="origin_image zh-lightbox-thumb" width="998" data-original="https://pic2.zhimg.com/v2-a16f36f20ca387abda7a6e73815d761d_r.jpg"></div></figure><h3 id="h_575671003_14" data-into-catalog-status=""><b>测试代码</b></h3><p data-pid="JklD-3cA">绑定：AddStatic方法</p><p data-pid="6twCT27o">解绑：Remove方法和RemoveAll方法</p><p data-pid="hQJjg8lc">执行：Broadcast方法</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-a9af844363eb3011980c479c306cf3ab_1440w.png" data-caption="" data-size="normal" data-rawwidth="577" data-rawheight="86" data-original-token="v2-a9af844363eb3011980c479c306cf3ab" class="origin_image zh-lightbox-thumb" width="577" data-original="https://pic4.zhimg.com/v2-a9af844363eb3011980c479c306cf3ab_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-59717b05403756ac9422cad410b15cb1_1440w.png" data-caption="" data-size="normal" data-rawwidth="622" data-rawheight="72" data-original-token="v2-59717b05403756ac9422cad410b15cb1" class="origin_image zh-lightbox-thumb" width="622" data-original="https://pic4.zhimg.com/v2-59717b05403756ac9422cad410b15cb1_r.jpg"></div></figure><p data-pid="Wj9P_l7K">MulticastDelegateActor.h</p><div class="highlight"><pre><code class="language-text">#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "MulticastDelegateActor.generated.h"

DECLARE_MULTICAST_DELEGATE_OneParam(FTestMulticastDelegate, int32);

UCLASS()
class TOAA_API AMulticastDelegateActor : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	AMulticastDelegateActor();

	UFUNCTION(BlueprintCallable)
	void TestMulticastDelegate();

	UFUNCTION(BlueprintCallable)
	void RemoveMulticastDelegate();

	UFUNCTION(BlueprintCallable)
	void RemoveAllMulticastDelegate();

	static void StaticFunction(int32 param);

	FTestMulticastDelegate multicastDelegate;
	FDelegateHandle handle;

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

};
 </code></pre></div><p data-pid="pNkHn5lK">MulticastDelegateActor.cpp</p><div class="highlight"><pre><code class="language-text">#include "MulticastDelegateActor.h"

// Sets default values
AMulticastDelegateActor::AMulticastDelegateActor()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = false;

}

// Called when the game starts or when spawned
void AMulticastDelegateActor::BeginPlay()
{
	Super::BeginPlay();

}

void AMulticastDelegateActor::TestMulticastDelegate()
{
	handle = multicastDelegate.AddStatic(AMulticastDelegateActor::StaticFunction);
	multicastDelegate.Broadcast(10);
}

void AMulticastDelegateActor::RemoveMulticastDelegate()
{
	multicastDelegate.Remove(handle);
	UE_LOG(LogTemp, Log, TEXT("AMulticastDelegateActor::RemoveMulticastDelegate"));
}

void AMulticastDelegateActor::RemoveAllMulticastDelegate()
{
	multicastDelegate.RemoveAll(this);
	UE_LOG(LogTemp, Log, TEXT("AMulticastDelegateActor::RemoveAllMulticastDelegate"));
}

void AMulticastDelegateActor::StaticFunction(int32 param)
{
	UE_LOG(LogTemp, Log, TEXT("AMulticastDelegateActor::StaticFunction : %d"), param);
}


</code></pre></div><h2 id="h_575671003_15" data-into-catalog-status=""><b>三、事件</b></h2><p data-pid="XgRME8H7">只能够通过声明它的对象来BoardCast、IsBound、Clear，不能通过外部来调用，但是实际上并不是这样，现在外部类一样可以拥有Event的全部访问权限。</p><p data-pid="lnLo3y24"><b>Event的底层实现其实是一个Multicast Delegate</b>，然后他把传进来的OwningType其实就是绑定的ClassType，声明为它的友元类，这样一来这个OwningClass就对这个Event的成员有完全Public的访问权限。</p><h3 id="h_575671003_16" data-into-catalog-status=""><b>定义</b></h3><div class="highlight"><pre><code class="language-text">#define DECLARE_EVENT( OwningType, EventName ) FUNC_DECLARE_EVENT( OwningType, EventName, void ) </code></pre></div><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2c14e4cb648553f3d8c3d2acb69f60fe_1440w.png" data-caption="" data-size="normal" data-rawwidth="695" data-rawheight="146" data-original-token="v2-2c14e4cb648553f3d8c3d2acb69f60fe" class="origin_image zh-lightbox-thumb" width="695" data-original="https://pic3.zhimg.com/v2-2c14e4cb648553f3d8c3d2acb69f60fe_r.jpg"></div></figure><h2 id="h_575671003_17" data-into-catalog-status=""><b>四、动态单播委托</b></h2><p data-pid="xP8EpTDx">动态单播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度很慢，少用。</p><p data-pid="0kbY6_c2"><b>动态绑定的函数，需要加标记UFUNCTION</b></p><h3 id="h_575671003_18" data-into-catalog-status=""><b>定义</b></h3><div class="highlight"><pre><code class="language-text">#define DECLARE_DYNAMIC_DELEGATE( DelegateName ) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_DELEGATE) FUNC_DECLARE_DYNAMIC_DELEGATE( FWeakObjectPtr, DelegateName, DelegateName##_DelegateWrapper, , FUNC_CONCAT( *this ), void ) </code></pre></div><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-acab75a8fc2272717e693a95af1e7805_1440w.png" data-caption="" data-size="normal" data-rawwidth="1279" data-rawheight="796" data-original-token="v2-acab75a8fc2272717e693a95af1e7805" class="origin_image zh-lightbox-thumb" width="1279" data-original="https://pic2.zhimg.com/v2-acab75a8fc2272717e693a95af1e7805_r.jpg"></div></figure><p data-pid="zO_owIYM">动态单播委托，通过TBaseDynamicDelegate这个类实现</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-acbe98aec89d190eed45f7aa977d9166_1440w.png" data-caption="" data-size="normal" data-rawwidth="736" data-rawheight="63" data-original-token="v2-acbe98aec89d190eed45f7aa977d9166" class="origin_image zh-lightbox-thumb" width="736" data-original="https://pic3.zhimg.com/v2-acbe98aec89d190eed45f7aa977d9166_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-dc4ac2fb981d948a7c84c79dd0b21e8d_1440w.png" data-caption="" data-size="small" data-rawwidth="307" data-rawheight="265" data-original-token="v2-dc4ac2fb981d948a7c84c79dd0b21e8d" class="content_image" width="307"></div></figure><h3 id="h_575671003_19" data-into-catalog-status=""><b>BindDynamic() 绑定</b></h3><p data-pid="cABObZVQ">宏定义BindDynamic绑定委托的方法，实际调用的方法是在TBaseDynamicDelegate类中的__Internal_BindDynamic方法。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c96ae1aedb87798480ef27b77dbb92e5_1440w.png" data-caption="" data-size="normal" data-rawwidth="1380" data-rawheight="69" data-original-token="v2-c96ae1aedb87798480ef27b77dbb92e5" class="origin_image zh-lightbox-thumb" width="1380" data-original="https://picx.zhimg.com/v2-c96ae1aedb87798480ef27b77dbb92e5_r.jpg"></div></figure><p data-pid="G1ybeZHI">在__Internal_BindDynamic方法中，保存了指向绑定的对象的弱指针，绑定的函数名。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f5a5f958673f73542d6b1c85ef7a45f6_1440w.png" data-caption="" data-size="normal" data-rawwidth="1206" data-rawheight="367" data-original-token="v2-f5a5f958673f73542d6b1c85ef7a45f6" class="origin_image zh-lightbox-thumb" width="1206" data-original="https://pica.zhimg.com/v2-f5a5f958673f73542d6b1c85ef7a45f6_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-ee0ab6def2c2913b13f834ffad2c2c2b_1440w.png" data-caption="" data-size="normal" data-rawwidth="797" data-rawheight="271" data-original-token="v2-ee0ab6def2c2913b13f834ffad2c2c2b" class="origin_image zh-lightbox-thumb" width="797" data-original="https://pic4.zhimg.com/v2-ee0ab6def2c2913b13f834ffad2c2c2b_r.jpg"></div></figure><h3 id="h_575671003_20" data-into-catalog-status=""><b>Unbind() 解绑</b></h3><p data-pid="g-yy8XQO">动态单播委托的解绑方法是Unbind()，对弱指针和函数名重置。</p><p data-pid="Ts-aUWlX">Clear()的实现就是调用Unbind()方法。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-8c09300b9dae9a32df76f8d167c8d84f_1440w.png" data-caption="" data-size="normal" data-rawwidth="343" data-rawheight="132" data-original-token="v2-8c09300b9dae9a32df76f8d167c8d84f" class="content_image" width="343"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-1d9369b7edb4a6d9e46610cfab6c86d9_1440w.png" data-caption="" data-size="small" data-rawwidth="187" data-rawheight="102" data-original-token="v2-1d9369b7edb4a6d9e46610cfab6c86d9" class="content_image" width="187"></div></figure><h3 id="h_575671003_21" data-into-catalog-status=""><b>ExecuteIfBound() 执行委托</b></h3><p data-pid="0CSce_hp">ExecuteIfBound() 方法在宏定义中，判断如果绑定，就会调用ExecFuntion方法执行委托。最终，会调用到父类TScriptDelegate的ProcessDelegate方法。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-977ffbcc83544d6aba605b2b4d1064c6_1440w.png" data-caption="" data-size="normal" data-rawwidth="835" data-rawheight="235" data-original-token="v2-977ffbcc83544d6aba605b2b4d1064c6" class="origin_image zh-lightbox-thumb" width="835" data-original="https://pica.zhimg.com/v2-977ffbcc83544d6aba605b2b4d1064c6_r.jpg"></div></figure><p data-pid="hlhYuYx7">ExecFuntion方法，在宏定义中，对应DelegateName##_DelegateWrapper函数，而这个函数会通过UHT生成。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2c583df49d5d2000814edfe650de5f75_1440w.png" data-caption="" data-size="normal" data-rawwidth="1293" data-rawheight="42" data-original-token="v2-2c583df49d5d2000814edfe650de5f75" class="origin_image zh-lightbox-thumb" width="1293" data-original="https://pic2.zhimg.com/v2-2c583df49d5d2000814edfe650de5f75_r.jpg"></div></figure><p data-pid="_nCuMx8X">DelegateName##_DelegateWrapper函数</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-57e23a24525eb85cb025485b47d0c6d9_1440w.png" data-caption="" data-size="normal" data-rawwidth="1033" data-rawheight="126" data-original-token="v2-57e23a24525eb85cb025485b47d0c6d9" class="origin_image zh-lightbox-thumb" width="1033" data-original="https://pic2.zhimg.com/v2-57e23a24525eb85cb025485b47d0c6d9_r.jpg"></div></figure><p data-pid="1qvmo1za">在ProcessDelegate方法中，判断弱指针是否有效，如果有效，通过指向对象的弱指针，获取对象。通过函数名找到对应的函数并执行。</p><p data-pid="elAQW-D8">ProcessEvent是UE通过反射执行对象上的函数的方式。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-39099368bdb6be1895cb0b593fcf884d_1440w.png" data-caption="" data-size="normal" data-rawwidth="1108" data-rawheight="637" data-original-token="v2-39099368bdb6be1895cb0b593fcf884d" class="origin_image zh-lightbox-thumb" width="1108" data-original="https://pic4.zhimg.com/v2-39099368bdb6be1895cb0b593fcf884d_r.jpg"></div></figure><h3 id="h_575671003_22" data-into-catalog-status=""><b>测试代码</b></h3><p data-pid="M61fEu7E"><b>注意：动态绑定的函数，需要加标记UFUNCTION</b></p><p data-pid="SY33DrLM">绑定：BindDynamic方法</p><p data-pid="CNF4T1Ek">解绑：Unbind方法</p><p data-pid="6cODxjd-">执行：ExecuteIfBound方法</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-1dcd94058d07dedd5b59366f454992a9_1440w.png" data-caption="" data-size="normal" data-rawwidth="573" data-rawheight="66" data-original-token="v2-1dcd94058d07dedd5b59366f454992a9" class="origin_image zh-lightbox-thumb" width="573" data-original="https://pic4.zhimg.com/v2-1dcd94058d07dedd5b59366f454992a9_r.jpg"></div></figure><p data-pid="Bba1kgBB">DynamicDelegateActor.h</p><div class="highlight"><pre><code class="language-text">#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "DynamicDelegateActor.generated.h"

DECLARE_DYNAMIC_DELEGATE_OneParam(FTestDynamicDelegate, int32, param);

UCLASS()
class TOAA_API ADynamicDelegateActor : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	ADynamicDelegateActor();

	UFUNCTION(BlueprintCallable)
	void TestDynamicDelegate();

	UFUNCTION(BlueprintCallable)
	void RemoveDynamicDelegate();

	UFUNCTION(BlueprintCallable)
	void TestFunction(int32 param);

	FTestDynamicDelegate dynamicDelegate;

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

};
</code></pre></div><p data-pid="7Xaxutkh">DynamicDelegateActor.cpp</p><div class="highlight"><pre><code class="language-text">#include "DynamicDelegateActor.h"

// Sets default values
ADynamicDelegateActor::ADynamicDelegateActor()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = false;

}

// Called when the game starts or when spawned
void ADynamicDelegateActor::BeginPlay()
{
	Super::BeginPlay();
	
}

void ADynamicDelegateActor::TestDynamicDelegate()
{
	// 动态绑定的函数，需要加标记UFUNCTION
	dynamicDelegate.BindDynamic(this, &amp;ADynamicDelegateActor::TestFunction);
	dynamicDelegate.ExecuteIfBound(10);
}

void ADynamicDelegateActor::RemoveDynamicDelegate()
{
	dynamicDelegate.Unbind();
	UE_LOG(LogTemp, Log, TEXT("ADynamicDelegateActor::RemoveDynamicDelegate"));
}

void ADynamicDelegateActor::TestFunction(int32 param)
{
	UE_LOG(LogTemp, Log, TEXT("ADynamicDelegateActor::TestFunction : %d"), param);
}


</code></pre></div><h2 id="h_575671003_23" data-into-catalog-status=""><b>五、动态多播委托</b></h2><p data-pid="Rp1pF1DH">动态多播委托维护了一个由动态单播委托组成的TArray数组，依托动态单播委托实现的。</p><p data-pid="tEELTjM1">动态多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。</p><p data-pid="CQOkfLtd">动态多播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度很慢，少用。</p><p data-pid="Y9_tA8Uy"><b>动态绑定的函数，需要加标记UFUNCTION</b></p><p data-pid="gLMPsjHX"><b>只有动态多播可以被蓝图绑定，需要加标记UPROPERTY(BlueprintAssignable)</b></p><h3 id="h_575671003_24" data-into-catalog-status=""><b>定义</b></h3><div class="highlight"><pre><code class="language-text">#define DECLARE_DYNAMIC_MULTICAST_DELEGATE( DelegateName ) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_DELEGATE) FUNC_DECLARE_DYNAMIC_MULTICAST_DELEGATE( FWeakObjectPtr, DelegateName, DelegateName##_DelegateWrapper, , FUNC_CONCAT( *this ), void ) </code></pre></div><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5343b6a37b537dce775038071f934920_1440w.png" data-caption="" data-size="normal" data-rawwidth="1433" data-rawheight="555" data-original-token="v2-5343b6a37b537dce775038071f934920" class="origin_image zh-lightbox-thumb" width="1433" data-original="https://pic1.zhimg.com/v2-5343b6a37b537dce775038071f934920_r.jpg"></div></figure><p data-pid="yDZzJ341">动态多播委托的实现在TBaseDynamicMulticastDelegate类中</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f6ad67254ba418bc46987aa8908e6b84_1440w.png" data-caption="" data-size="normal" data-rawwidth="830" data-rawheight="79" data-original-token="v2-f6ad67254ba418bc46987aa8908e6b84" class="origin_image zh-lightbox-thumb" width="830" data-original="https://pica.zhimg.com/v2-f6ad67254ba418bc46987aa8908e6b84_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-cfa39b10fc2dc8ebf436e82eb7cb186d_1440w.png" data-caption="" data-size="small" data-rawwidth="341" data-rawheight="347" data-original-token="v2-cfa39b10fc2dc8ebf436e82eb7cb186d" class="content_image" width="341"></div></figure><h3 id="h_575671003_25" data-into-catalog-status=""><b>AddDynamic() 绑定</b></h3><p data-pid="13kJuOAA">宏定义AddDynamic绑定委托的方法，实际调用的方法是TBaseDynamicMulticastDelegate类中的__Internal_AddDynamic方法。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-30b974fd9e61352084eede7c1f2c060c_1440w.png" data-caption="" data-size="normal" data-rawwidth="1334" data-rawheight="76" data-original-token="v2-30b974fd9e61352084eede7c1f2c060c" class="origin_image zh-lightbox-thumb" width="1334" data-original="https://pic1.zhimg.com/v2-30b974fd9e61352084eede7c1f2c060c_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c24166f319c43bed9e773a6be0416096_1440w.png" data-caption="" data-size="normal" data-rawwidth="1607" data-rawheight="520" data-original-token="v2-c24166f319c43bed9e773a6be0416096" class="origin_image zh-lightbox-thumb" width="1607" data-original="https://pica.zhimg.com/v2-c24166f319c43bed9e773a6be0416096_r.jpg"></div></figure><p data-pid="oikXquff">在__Internal_AddDynamic方法中，调用了FDelegate的__Internal_BindDynamic方法，保存了指向绑定的对象的弱指针，绑定的函数名。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5f4df63f8e70aa39fa97836001d4aa0c_1440w.png" data-caption="" data-size="normal" data-rawwidth="1452" data-rawheight="318" data-original-token="v2-5f4df63f8e70aa39fa97836001d4aa0c" class="origin_image zh-lightbox-thumb" width="1452" data-original="https://pic1.zhimg.com/v2-5f4df63f8e70aa39fa97836001d4aa0c_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-ee0ab6def2c2913b13f834ffad2c2c2b_1440w.png" data-caption="" data-size="normal" data-rawwidth="797" data-rawheight="271" data-original-token="v2-ee0ab6def2c2913b13f834ffad2c2c2b" class="origin_image zh-lightbox-thumb" width="797" data-original="https://pic4.zhimg.com/v2-ee0ab6def2c2913b13f834ffad2c2c2b_r.jpg"></div></figure><p data-pid="G4O_VPHL">然后，调用了父类TMulticastScriptDelegate的Add方法，从调用列表中，清除过期无效的绑定函数，并添加新绑定的委托到调用列表中。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c67e471344d207c6db8069c7f644a399_1440w.png" data-caption="" data-size="normal" data-rawwidth="751" data-rawheight="309" data-original-token="v2-c67e471344d207c6db8069c7f644a399" class="origin_image zh-lightbox-thumb" width="751" data-original="https://picx.zhimg.com/v2-c67e471344d207c6db8069c7f644a399_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-39de4a0145721573344e437c82ae9963_1440w.png" data-caption="" data-size="normal" data-rawwidth="899" data-rawheight="299" data-original-token="v2-39de4a0145721573344e437c82ae9963" class="origin_image zh-lightbox-thumb" width="899" data-original="https://picx.zhimg.com/v2-39de4a0145721573344e437c82ae9963_r.jpg"></div></figure><h3 id="h_575671003_26" data-into-catalog-status=""><b>RemoveDynamic() 解绑</b></h3><p data-pid="tvjYj4xQ">解绑动态单播委托，宏定义RemoveDynamic()，实际调用TBaseDynamicMulticastDelegate类中的方法__Internal_RemoveDynamic方法，</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-132c31963d4ac4ee1dce1fa616ae4fa3_1440w.png" data-caption="" data-size="normal" data-rawwidth="1430" data-rawheight="56" data-original-token="v2-132c31963d4ac4ee1dce1fa616ae4fa3" class="origin_image zh-lightbox-thumb" width="1430" data-original="https://pic2.zhimg.com/v2-132c31963d4ac4ee1dce1fa616ae4fa3_r.jpg"></div></figure><p data-pid="50_U63-3">在__Internal_RemoveDynamic方法中，调用了父类TMulticastScriptDelegate中的Remove方法，</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-445cb2bb8a670bfaa0fd5b3fbfed366d_1440w.png" data-caption="" data-size="normal" data-rawwidth="920" data-rawheight="433" data-original-token="v2-445cb2bb8a670bfaa0fd5b3fbfed366d" class="origin_image zh-lightbox-thumb" width="920" data-original="https://picx.zhimg.com/v2-445cb2bb8a670bfaa0fd5b3fbfed366d_r.jpg"></div></figure><p data-pid="BeXCH08v">在Remove方法中，做了两件事，一个是从调用列表中移除绑定的委托，二是检测绑定的委托是否有效，删除所有过期的委托。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c7915625c3a90bf26e4db56c2aa612a3_1440w.png" data-caption="" data-size="normal" data-rawwidth="738" data-rawheight="206" data-original-token="v2-c7915625c3a90bf26e4db56c2aa612a3" class="origin_image zh-lightbox-thumb" width="738" data-original="https://pic2.zhimg.com/v2-c7915625c3a90bf26e4db56c2aa612a3_r.jpg"></div></figure><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-cc0550bcf89087b178ff15b62af3c901_1440w.png" data-caption="" data-size="normal" data-rawwidth="742" data-rawheight="119" data-original-token="v2-cc0550bcf89087b178ff15b62af3c901" class="origin_image zh-lightbox-thumb" width="742" data-original="https://pic2.zhimg.com/v2-cc0550bcf89087b178ff15b62af3c901_r.jpg"></div></figure><h3 id="h_575671003_27" data-into-catalog-status=""><b>RemoveAll() 解绑</b></h3><p data-pid="jx6aDlqv">RemoveAll()可以解绑所有有效的函数绑定。</p><p data-pid="Q9e-ITlZ">Clear()可以移除调用列表中所有的函数绑定。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-e4626814273c8b46440fe0f8c666ece9_1440w.png" data-caption="" data-size="normal" data-rawwidth="916" data-rawheight="574" data-original-token="v2-e4626814273c8b46440fe0f8c666ece9" class="origin_image zh-lightbox-thumb" width="916" data-original="https://pic2.zhimg.com/v2-e4626814273c8b46440fe0f8c666ece9_r.jpg"></div></figure><h3 id="h_575671003_28" data-into-catalog-status=""><b>Broadcast() 执行委托</b></h3><p data-pid="YOrfYfcu">Broadcast()
函数，调用ExecFuntion方法执行委托，在宏定义中，会通过UHT生成DelegateName##_DelegateWrapper函数，最终
会调用到父类TMulticastScriptDelegate类中的ProcessMulticastDelegate函数。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-622b329c492d9d8c66738574f455dd8d_1440w.png" data-caption="" data-size="normal" data-rawwidth="922" data-rawheight="119" data-original-token="v2-622b329c492d9d8c66738574f455dd8d" class="origin_image zh-lightbox-thumb" width="922" data-original="https://pic2.zhimg.com/v2-622b329c492d9d8c66738574f455dd8d_r.jpg"></div></figure><p data-pid="sARZNEBD">ExecFuntion方法，在宏定义中，对应DelegateName##_DelegateWrapper函数，而这个函数会通过UHT生成。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-b07067ba4ee900e4c17341360594fca3_1440w.png" data-caption="" data-size="normal" data-rawwidth="1363" data-rawheight="37" data-original-token="v2-b07067ba4ee900e4c17341360594fca3" class="origin_image zh-lightbox-thumb" width="1363" data-original="https://picx.zhimg.com/v2-b07067ba4ee900e4c17341360594fca3_r.jpg"></div></figure><p data-pid="k1nlh9vM">DelegateName##_DelegateWrapper函数</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6451d8f046661655f96fa74ca5c3e467_1440w.png" data-caption="" data-size="normal" data-rawwidth="1318" data-rawheight="139" data-original-token="v2-6451d8f046661655f96fa74ca5c3e467" class="origin_image zh-lightbox-thumb" width="1318" data-original="https://pic2.zhimg.com/v2-6451d8f046661655f96fa74ca5c3e467_r.jpg"></div></figure><p data-pid="hW152blS">在ProcessMulticastDelegate函数中，当调用列表数量大于0，首先，创建一个调用的拷贝，防止在Broadcast过程中，调用列表被改变。</p><p data-pid="SXNWsiuv">然后，遍历拷贝的调用列表，如果函数是绑定在委托上是有效的，就会执行委托。否则，从调用列表中，移除无效的函数绑定。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-9bd288e8f1948eea010ab34c69ff4a82_1440w.png" data-caption="" data-size="normal" data-rawwidth="1307" data-rawheight="774" data-original-token="v2-9bd288e8f1948eea010ab34c69ff4a82" class="origin_image zh-lightbox-thumb" width="1307" data-original="https://pic1.zhimg.com/v2-9bd288e8f1948eea010ab34c69ff4a82_r.jpg"></div></figure><p data-pid="hhMydFd4">最终调用到动态单播委托TScriptDelegate的ProcessDelegate方法，判断弱指针是否有效，如果有效，通过指向对象的弱指针，在对象中通过函数名找到对应的函数并执行。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-39099368bdb6be1895cb0b593fcf884d_1440w.png" data-caption="" data-size="normal" data-rawwidth="1108" data-rawheight="637" data-original-token="v2-39099368bdb6be1895cb0b593fcf884d" class="origin_image zh-lightbox-thumb" width="1108" data-original="https://pic4.zhimg.com/v2-39099368bdb6be1895cb0b593fcf884d_r.jpg"></div></figure><h3 id="h_575671003_29" data-into-catalog-status=""><b>测试代码</b></h3><p data-pid="8GJFEPBO"><b>注意：</b></p><ol><li data-pid="6e5QCV-j"><b>动态绑定的函数，需要加标记UFUNCTION</b></li><li data-pid="B2Q52zVj"><b>只有动态多播可以被蓝图绑定，需要加标记UPROPERTY(BlueprintAssignable)</b></li><li data-pid="wPbSDH90"><b>在绑定时，需要判断是否已经绑定，避免重复绑定。使用IsAlreadyBound方法判断</b></li></ol><p data-pid="pGVlxQHc">绑定：AddDynamic方法</p><p data-pid="PHA0kyDe">解绑：RemoveDynamic方法和RemoveAll两种删除方式</p><p data-pid="AHVpO6Pp">执行：Broadcast方法</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-647e629a80717c1708d01c9bfa0d5928_1440w.png" data-caption="" data-size="normal" data-rawwidth="1043" data-rawheight="104" data-original-token="v2-647e629a80717c1708d01c9bfa0d5928" class="origin_image zh-lightbox-thumb" width="1043" data-original="https://pica.zhimg.com/v2-647e629a80717c1708d01c9bfa0d5928_r.jpg"></div></figure><h3 id="h_575671003_30" data-into-catalog-status=""><b>蓝图中绑定动态多播</b></h3><p data-pid="2JAivRbX">Broadcast执行动态多播委托，也会触发到蓝图中的逻辑。</p><p data-pid="KpFmi6S6">首先，绑定C++中定义的dynamicMulticastDelegate动态多播委托，然后，在蓝图中使用"Add Custom Event"，添加自定义事件，执行蓝图中的逻辑。</p><figure data-size="normal"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-77783cbd9be8b10d3f6034c517fc86f8_1440w.png" data-caption="" data-size="normal" data-rawwidth="835" data-rawheight="505" data-original-token="v2-77783cbd9be8b10d3f6034c517fc86f8" class="origin_image zh-lightbox-thumb" width="835" data-original="https://pica.zhimg.com/v2-77783cbd9be8b10d3f6034c517fc86f8_r.jpg"></div></figure><p data-pid="d2pmXdKt">DynamicMulticastDelegateActor.h</p><div class="highlight"><pre><code class="language-text">#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "DynamicMulticastDelegateActor.generated.h"

DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FTestDynamicMulticastDelegate, int32, param);

UCLASS()
class TOAA_API ADynamicMulticastDelegateActor : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	ADynamicMulticastDelegateActor();

	UFUNCTION(BlueprintCallable)
	void TestDynamicMulticastDelegate();

	UFUNCTION(BlueprintCallable)
	void RemoveDynamicMulticastDelegate();

	UFUNCTION(BlueprintCallable)
	void RemoveAllDynamicMulticastDelegate();

	UFUNCTION(BlueprintCallable)
	void TestFunction(int32 param);

	UPROPERTY(BlueprintAssignable)
	FTestDynamicMulticastDelegate dynamicMulticastDelegate;

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

};
</code></pre></div><p data-pid="EI0q1a-n">DynamicMulticastDelegateActor.cpp</p><div class="highlight"><pre><code class="language-text">#include "DynamicMulticastDelegateActor.h"

// Sets default values
ADynamicMulticastDelegateActor::ADynamicMulticastDelegateActor()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = false;

}

// Called when the game starts or when spawned
void ADynamicMulticastDelegateActor::BeginPlay()
{
	Super::BeginPlay();
	
}

void ADynamicMulticastDelegateActor::TestDynamicMulticastDelegate()
{
	// 动态绑定的函数，TestFunction需要加标记UFUNCTION
	if (!dynamicMulticastDelegate.IsAlreadyBound(this, &amp;ADynamicMulticastDelegateActor::TestFunction))
	{
		dynamicMulticastDelegate.AddDynamic(this, &amp;ADynamicMulticastDelegateActor::TestFunction);
	}
	
	dynamicMulticastDelegate.Broadcast(10);
}

void ADynamicMulticastDelegateActor::RemoveDynamicMulticastDelegate()
{
	dynamicMulticastDelegate.RemoveDynamic(this, &amp;ADynamicMulticastDelegateActor::TestFunction);
	UE_LOG(LogTemp, Log, TEXT("ADynamicMulticastDelegateActor::RemoveDynamicMulticastDelegate"));
}

void ADynamicMulticastDelegateActor::RemoveAllDynamicMulticastDelegate()
{
	dynamicMulticastDelegate.RemoveAll(this);
	UE_LOG(LogTemp, Log, TEXT("ADynamicMulticastDelegateActor::RemoveAllDynamicMulticastDelegate"));
}

void ADynamicMulticastDelegateActor::TestFunction(int32 param)
{
	UE_LOG(LogTemp, Log, TEXT("ADynamicMulticastDelegateActor::TestFunction : %d"), param);
}</code></pre></div><div class="RichText-ADLinkCardContainer"><div class="FeeConsultCard"><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-2772001ae921f61e44f78917374905d8_l.jpg" alt=""><div><div class="FeeConsultCard-name">足迹三万里</div><div class="FeeConsultCard-times"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--CheckCircle" fill="currentColor"><path fill-rule="evenodd" d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10Zm-11.056 1.584-2.103-2.103a.75.75 0 0 0-1.06 1.06l2.628 2.63c.002 0 .003.003.005.004a.75.75 0 0 0 1.06 0l4.746-4.745a.75.75 0 0 0-1.061-1.06l-4.215 4.214Z" clip-rule="evenodd"></path></svg><span>6 次咨询</span><div class="Stars"><svg width="14" height="14" viewBox="0 0 24 24" fill="#FF9607" class="Zi Zi--Star"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg><svg width="14" height="14" viewBox="0 0 24 24" fill="#FF9607" class="Zi Zi--Star"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg><svg width="14" height="14" viewBox="0 0 24 24" fill="#FF9607" class="Zi Zi--Star"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg><svg width="14" height="14" viewBox="0 0 24 24" fill="#FF9607" class="Zi Zi--Star"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg><svg width="14" height="14" viewBox="0 0 24 24" fill="#FF9607" class="Zi Zi--Star"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg><span style="color: rgb(255, 150, 7); font-size: 13px;">5.0</span></div></div><div class="FeeConsultCard-like"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--Like" fill="currentColor"><path d="M10.008 1.275c-.717-.07-1.238.482-1.323 1.066-.406 2.806-2 5.043-4.539 6.4-.85.453-1.496 1.334-1.495 2.389 0 .762.002 1.523.004 2.284.003 1.658.007 3.315.003 4.972a2.757 2.757 0 0 0 2.755 2.764h10.742a3.75 3.75 0 0 0 3.636-2.832l1.807-7.154a2.75 2.75 0 0 0-2.666-3.423h-5.59c.205-1.306.259-2.783-.167-4.007-.217-.627-.568-1.209-1.108-1.656-.543-.45-1.231-.724-2.059-.803Z"></path></svg>2002 次赞同</div></div><div class="FeeConsultCard-fee" style="bottom: 12px;">去咨询<svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--ArrowRight" fill="currentColor"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></div></div></div><p></p></div></div></div></div><div role="button" tabindex="0" class="ContentItem-time">编辑于 2023-10-20 16:15<!-- -->・IP 属地广东</div><div class="PostIndex-Contributions"><h3 class="BlockTitle">内容所属专栏</h3><ul class="css-zein01"><div><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="https://www.zhihu.com/column/c_1329804107125780480"><div class="css-1gomreu"><img class="Avatar css-1u7r5c9" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f111d7ee1c41944859e975a712c0883b_l.png" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f111d7ee1c41944859e975a712c0883b_l.png 2x" alt="Unreal入门精要"></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="https://www.zhihu.com/column/c_1329804107125780480"><div class="css-1gomreu">Unreal入门精要</div></a></span></h2><div class="ContentItem-meta">总结平时的学习笔记，包括Unreal基础及进阶知识</div></div><div class="ContentItem-extra"><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG">订阅专栏</button></div></div></div></div><div><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="https://www.zhihu.com/column/UE4Dev"><div class="css-1gomreu"><img class="Avatar css-1u7r5c9" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f111d7ee1c41944859e975a712c0883b_l.png" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f111d7ee1c41944859e975a712c0883b_l.png 2x" alt="UE5-FromZeroToHero"></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="https://www.zhihu.com/column/UE4Dev"><div class="css-1gomreu">UE5-FromZeroToHero</div></a></span></h2><div class="ContentItem-meta">努力学习UE5的打开与关闭相关的操作</div></div><div class="ContentItem-extra"><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG">订阅专栏</button></div></div></div></div></ul></div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;20585911&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/20585911" target="_blank"><div class="css-1gomreu">虚幻4引擎</div></a></span></div><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;20052447&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/20052447" target="_blank"><div class="css-1gomreu">虚幻 4（游戏引擎）</div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-fixed is-bottom" style="width: 690px; bottom: 0px; left: 155px;"><div class="ContentItem-actions" data-za-detail-view-path-module="BottomBar" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;id&quot;:&quot;575671003&quot;,&quot;token&quot;:&quot;575671003&quot;}}}"><span><button aria-label="赞同 64 " aria-live="polite" type="button" class="Button VoteButton VoteButton--up FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor"><path fill-rule="evenodd" d="M13.792 3.681c-.781-1.406-2.803-1.406-3.584 0l-7.79 14.023c-.76 1.367.228 3.046 1.791 3.046h15.582c1.563 0 2.55-1.68 1.791-3.046l-7.79-14.023Z" clip-rule="evenodd"></path></svg></span>赞同 64</button><button aria-label="反对" aria-live="polite" type="button" class="Button VoteButton VoteButton--down FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleDown" fill="currentColor"><path fill-rule="evenodd" d="M13.792 20.319c-.781 1.406-2.803 1.406-3.584 0L2.418 6.296c-.76-1.367.228-3.046 1.791-3.046h15.582c1.563 0 2.55 1.68 1.791 3.046l-7.79 14.023Z" clip-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button BottomActions-CommentBtn FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Comment Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>2 条评论</button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover2-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Share Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M19.47 1.914a.8.8 0 0 1 1.204.778l-1.872 16.386a.9.9 0 0 1-1.204.743l-4.615-1.692a.7.7 0 0 0-.831.28l-1.927 3.02c-.43.674-1.474.369-1.474-.43v-3.865a.8.8 0 0 1 .179-.504l5.808-7.148a.595.595 0 0 0-.897-.781l-5.93 6.354a1.1 1.1 0 0 1-1.258.252L2.57 13.46a.8.8 0 0 1-.08-1.415l16.98-10.13Z"></path></svg></span>分享</button></div></div><button aria-live="polite" type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Heart Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Star Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Deliver Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><g fill-rule="evenodd" clip-rule="evenodd"><path d="M7.821 12a.75.75 0 0 1 .75-.75h6.857a.75.75 0 0 1 0 1.5H8.571a.75.75 0 0 1-.75-.75ZM8.965 8a.75.75 0 0 1 .75-.75h4.571a.75.75 0 0 1 0 1.5H9.715a.75.75 0 0 1-.75-.75Z"></path><path d="M7.527 3.15a2.35 2.35 0 0 0-2.309 1.91L3.165 15.84a.85.85 0 0 0-.015.16v2.5a2.35 2.35 0 0 0 2.35 2.35h13a2.35 2.35 0 0 0 2.35-2.35V16a.848.848 0 0 0-.015-.16L18.78 5.06a2.35 2.35 0 0 0-2.308-1.91H7.527Zm0 1.7a.65.65 0 0 0-.639.528l-1.88 9.872h13.984l-1.88-9.872a.65.65 0 0 0-.64-.528H7.528Z"></path></g></svg></span>申请转载</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="Popover3-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--iconOnly fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY hIwDV_tcL6XN1HprrnAq"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Dots Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></span></button></div></div></div></div></div><div class="Sticky--holder" style="position: static; inset: auto auto 0px 0px; display: block; float: none; margin: 0px 0px 10px; height: 54px;"></div></div></article><div class="Post-Sub Post-NormalSub"><div style="overflow: unset;" data-za-detail-view-path-module="CommentList" data-za-extra-module="{}"><div class="Comments-container css-plbgu"><div class="css-79elbk"><div><div class="css-1fo89v5"><img class="Avatar css-m4psdq" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x"><div class="css-14zbeoe"><div class="css-i6bazn"><div class="css-0"><div class="InputLike css-1rl4wxv Editable"><div style="min-height: 38px;" class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-elslo" style="white-space: pre-wrap;">理性发言，友善互动</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-elslo" class="notranslate public-DraftEditor-content" contenteditable="true" spellcheck="true" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;" tabindex="0" role="textbox"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="elslo" data-offset-key="ffai7-0-0"><div data-offset-key="ffai7-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="ffai7-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><div></div><input multiple="" type="file" style="display: none;" accept="image/webp,image/jpg,image/jpeg,image/png,image/gif"></div></div></div></div></div></div><div class="css-u76jt1"><div class="css-1onritu"><div class="css-r4op92"><div class="css-1k10w8f">2 条评论</div></div><div class="css-59erns"></div><div class="css-97fdvh"><div class="css-m0zh86">默认</div><div class="css-1fjr6cy">最新</div></div></div><div class="css-840pn3"><div class="css-18ld3w0"><div data-id="10554221164"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/1308b71050f2a590ffd914c31b82c310" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-942f04837c19f2b9718dd6f0768f7f67_l.png" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-942f04837c19f2b9718dd6f0768f7f67_l.png 2x" alt="finding" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/1308b71050f2a590ffd914c31b82c310" target="_blank" class="css-10u695f">finding</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>AddDynamic必须在UFUNCTION中执行吗</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2023-05-11</span><span> · </span><span class="css-ntkn7q" href="">广东</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div><div data-id="10705420087"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/67b684004f2a704b4c9a7274afcf9058" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-3dbb6d3989a532a3152fe134b7f42073_l.jpg" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-3dbb6d3989a532a3152fe134b7f42073_l.jpg 2x" alt="他化自在境" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/67b684004f2a704b4c9a7274afcf9058" target="_blank" class="css-10u695f">他化自在境</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>确实需要，AddDynamic用到反射，需要UFUNCTION标识，否则编译报错，还需要指定作用域。</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2023-10-16</span><span> · </span><span class="css-ntkn7q" href="">四川</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div></div><div></div></div></div></div></div></div></div><div role="complementary" aria-label="推荐阅读" class="Recommendations-Main" style="width: 1000px;"><h3 class="BlockTitle Recommendations-BlockTitle">推荐阅读</h3><ul class="Recommendations-List"><button class="PagingButton PagingButton-Previous" disabled="disabled" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowLeft"><path fill-rule="evenodd" d="M14.609 6.322c.349.335.36.889.026 1.237l-4.253 4.438 4.254 4.444a.875.875 0 1 1-1.264 1.21l-4.834-5.05a.875.875 0 0 1 0-1.21l4.834-5.043a.875.875 0 0 1 1.237-.026Z" clip-rule="evenodd"></path></svg></button><a href="https://zhuanlan.zhihu.com/p/438697427" class="PostItem"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-535eaf4e923addc5aacf92ee92af9697_250x0.png" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-535eaf4e923addc5aacf92ee92af9697_qhd.png 2x" class="PostItem-TitleImage" alt="UE4委托"><h1 class="PostItem-Title">UE4委托</h1><div class="PostItem-Footer"><span>Nice</span><span class="PostItem-FooterTitle">发表于UE4随笔</span></div></div></a><a href="https://zhuanlan.zhihu.com/p/56548096" class="PostItem"><div><h1 class="PostItem-Title">UE4网络同步思考（一）---经典同步方案</h1><p class="PostItem-Summary">思来想去还是在开篇写一下自己相对比较熟悉的网络模块，因为它对于刚入门做网游的同学来说，是一个必须要攻克的知识点，可以作为联网Gameplay开发学习的入门着手点。 看了下知乎上已经有几…</p><div class="PostItem-Footer"><span>Jerry</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/199236736" class="PostItem"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-94b08f6b3730f145b112b842cadf66e4_250x0.jpg" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-94b08f6b3730f145b112b842cadf66e4_qhd.jpg 2x" class="PostItem-TitleImage" alt="DAU、MAU、PCU、DUN、WAU、ACU、UV的意思是什么?"><h1 class="PostItem-Title">DAU、MAU、PCU、DUN、WAU、ACU、UV的意思是什么?</h1><div class="PostItem-Footer"><span>星鹿video</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/135963353" class="PostItem"><div><img src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f747dfa9b8430641874768e5dc8c0f79_250x0.png" srcset="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f747dfa9b8430641874768e5dc8c0f79_qhd.png 2x" class="PostItem-TitleImage" alt="在UE4中播放视频"><h1 class="PostItem-Title">在UE4中播放视频</h1><div class="PostItem-Footer"><span>LoongKeiZ</span><span class="PostItem-FooterTitle"></span></div></div></a><button class="PagingButton PagingButton-Next" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowRight"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></button></ul></div></div></div></main><div role="complementary"><div class="CornerButtons"><div class="CornerAnimayedFlex"><button data-tooltip="回到顶部" data-tooltip-position="left" data-tooltip-will-hide-on-click="true" aria-label="回到顶部" type="button" class="Button CornerButton Button--plain css-4lspwd"><svg width="24" height="24" viewBox="0 0 24 24" aria-hidden="true" class="Zi Zi--BackToTop" fill="currentColor"><path fill-rule="evenodd" d="M13.204 3.107a1.75 1.75 0 0 0-2.408 0L3.806 9.73c-1.148 1.088-.378 3.02 1.204 3.02h2.24V20c0 .966.784 1.75 1.75 1.75h6A1.75 1.75 0 0 0 16.75 20v-7.25h2.24c1.582 0 2.353-1.932 1.204-3.02l-6.99-6.623Z" clip-rule="evenodd"></path></svg></button></div></div></div></div></div><script id="js-clientConfig" type="text/json">{"fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","lens":"https:\u002F\u002Flens.zhihu.com","zhida":"https:\u002F\u002Fzhida.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fapi\u002F","walletpay":"https:\u002F\u002Fwalletpay.zhihu.com","captcha":"https:\u002F\u002Fcaptcha.zhihu.com","vzuu":"https:\u002F\u002Fv.vzuu.com","openapi":"https:\u002F\u002Fopenapi.zhihu.com","svip":"https:\u002F\u002Fsvip.zhihu.com","event":"https:\u002F\u002Fevent.zhihu.com","en":"https:\u002F\u002Fen.zhihu.com"},"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","enHost":"en.zhihu.com","videoHost":"video.zhihu.com","zhuanlanHost":"zhuanlan.zhihu.com","allowSignUp":true,"refreshValidityPeriod":"30","release":"2236-8a85c800","currentEntry":"column","isMobileEntry":false,"apollo":{"env":"prod","globalSilence":"","ncgModeSign":"3f8e56febda4fb3bbea72e379d76de1e","logMobileUnAuth":"1","topstory_rec_adp":"1","topstory_hot_adp":"1","editor_adapt_native":"0","editor_auto_rotate":"0","enable_request_filter":"1","balanceModalSign":"ChYHAcB5ihJECkAFnhDAYmdhsTWVJoNc","reportBackendPublishError":"1","dynamic_font_schema":"1","enable_vzuu_login":"office","za_zse_ck_refer":"1","gamekeeper_office":"blue","gamekeeper_production":"blue","enable_utm_id_0":"0","video_upload_config":"{\"parallel\":10,\"timeout\":0,\"partSize\":20971520,\"endpoint\":\"https:\u002F\u002Fzhihu-video-input.oss-cn-hangzhou.aliyuncs.com\"}","test_canary":"member|0-100,1-0","use_new_player":"member|0-100,1-0","player_vendor":"member|0-100,1-0,2-0","use_hevc":"member|0-0,1-100","upload_use_signature":"member|0-0,1-100","use_backdrop_blur":"member|0-0,1-100","article_title_imagex":"member|0-0,1-100","play_station":"member|0-0,1-100","use_cached_supported_countries":"device|1-100,0-0","contentItem_cover_imagex":"member|0-0,1-100","use_qrcode_login_v2":"device|1-100,0-0"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{},"cities":{"cityData":[]}},"loading":{"global":{"count":0},"local":{"env\u002FgetIpinfo\u002F":false,"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false,"article\u002FloadPostSearchEntity\u002F":false}},"entities":{"users":{"ffde95bc6a24b298d237f46e35a3eb71":{"uid":1614187562792312800,"userType":"people","id":"ffde95bc6a24b298d237f46e35a3eb71"},"tencentboy":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8.jpg?source=172ae18b","uid":"671672266975350784","userType":"people","isFollowing":false,"urlToken":"tencentboy","id":"8c55c5c887764c92edba04c1a021dfdd","description":"游戏开发工程师，参与开发《黎明觉醒》、《传奇世界》等手游。\n参与录制鹅厂《青少年职业启蒙》系列课程，帮助青少年建立更清晰的职业道路。","name":"足迹三万里","isAdvertiser":false,"headline":"","gender":1,"url":"\u002Fpeople\u002F8c55c5c887764c92edba04c1a021dfdd","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8_l.jpg?source=172ae18b","isOrg":false,"type":"people","badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972464154808860672","medalName":"社交达人","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c7e07b4d834217e9562ab38135351a19_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-c7e07b4d834217e9562ab38135351a19_l.png?source=172ae18b","description":"关注 50 个人","medalAvatarFrame":""}}},"questions":{},"answers":{},"articles":{"575671003":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fcontent_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=BiBUKF0xBSkqGGNWBWN0CV92AHMZes6RjR0PoA==&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__&zid=__ZONEID__"],"entityWords":[{"name":"BroadCast","mention":"BroadCast","matchorder":1,"begin":615,"end":624,"entityid":-1085394585748348300,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=BroadCast&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJdCglCcm9hZENhc3QSB1Vua25vd24Y5wQg8AQoATUAAPBAOgdhcnRpY2xlQJ3F2dr\u002F6\u002Fn38AFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj8gLOAQokNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2NjGgdhcnRpY2xlIgkyMTYwNTk2MTU6CUJyb2FkQ2FzdECdxdna\u002F+v59\u002FABSABSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJdCglCcm9hZENhc3QSB1Vua25vd24Y5wQg8AQoATUAAPBAOgdhcnRpY2xlQJ3F2dr\u002F6\u002Fn38AFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"Remove","mention":"Remove","matchorder":1,"begin":661,"end":667,"entityid":-9123184660616507000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=Remove&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJaCgZSZW1vdmUSB1Vua25vd24YlQUgmwUoATUAAPBAOgdhcnRpY2xlQIGfpN20\u002FPuxgQFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj8gLIAQokNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2NjGgdhcnRpY2xlIgkyMTYwNTk2MTU6BlJlbW92ZUCBn6TdtPz7sYEBSAFSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJaCgZSZW1vdmUSB1Vua25vd24YlQUgmwUoATUAAPBAOgdhcnRpY2xlQIGfpN20\u002FPuxgQFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"UPROPERTY(BlueprintAssignable)","mention":"UPROPERTY(BlueprintAssignable)","matchorder":1,"begin":3160,"end":3190,"entityid":7306703737674335000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=UPROPERTY%28BlueprintAssignable%29&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJxCh5VUFJPUEVSVFkoQmx1ZXByaW50QXNzaWduYWJsZSkSB1Vua25vd24Y2Bgg9hgoATUAAPBAOgdhcnRpY2xlQJiJ5NjjiqizZUgKUiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2PyAvYBCiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2MaB2FydGljbGUiCTIxNjA1OTYxNToeVVBST1BFUlRZKEJsdWVwcmludEFzc2lnbmFibGUpQJiJ5NjjiqizZUgDUhZhaV9lbnRpdHlfbGxtX3JlY2FsbGVyXQAA8EBicQoeVVBST1BFUlRZKEJsdWVwcmludEFzc2lnbmFibGUpEgdVbmtub3duGNgYIPYYKAE1AADwQDoHYXJ0aWNsZUCYieTY44qos2VIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"单播代理委托","mention":"单播代理委托","matchorder":1,"begin":503,"end":509,"entityid":-3607247904659077000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=%E5%8D%95%E6%92%AD%E4%BB%A3%E7%90%86%E5%A7%94%E6%89%98&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJmChLljZXmkq3ku6PnkIblp5TmiZgSB1Vua25vd24Y9wMg\u002FQMoATUAAPBAOgdhcnRpY2xlQOWOmNDI5J74zQFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj8gLgAQokNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2NjGgdhcnRpY2xlIgkyMTYwNTk2MTU6EuWNleaSreS7o+eQhuWnlOaJmEDljpjQyOSe+M0BSARSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJmChLljZXmkq3ku6PnkIblp5TmiZgSB1Vua25vd24Y9wMg\u002FQMoATUAAPBAOgdhcnRpY2xlQOWOmNDI5J74zQFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"ExecuteIfBound","mention":"ExecuteIfBound","matchorder":1,"begin":586,"end":600,"entityid":6087278808278145000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=ExecuteIfBound&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJhCg5FeGVjdXRlSWZCb3VuZBIHVW5rbm93bhjKBCDYBCgBNQAA8EA6B2FydGljbGVA0qy6wbD6lr1USApSJDQyYWM5ODA5LWYyYzctNDA3NS1hMTJiLWI2NmMwOWNlYWNjY\u002FIC1gEKJDQyYWM5ODA5LWYyYzctNDA3NS1hMTJiLWI2NmMwOWNlYWNjYxoHYXJ0aWNsZSIJMjE2MDU5NjE1Og5FeGVjdXRlSWZCb3VuZEDSrLrBsPqWvVRIBVIWYWlfZW50aXR5X2xsbV9yZWNhbGxlcl0AAPBAYmEKDkV4ZWN1dGVJZkJvdW5kEgdVbmtub3duGMoEINgEKAE1AADwQDoHYXJ0aWNsZUDSrLrBsPqWvVRIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"RemoveAll","mention":"RemoveAll","matchorder":1,"begin":670,"end":679,"entityid":8508683686214536000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=RemoveAll&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJcCglSZW1vdmVBbGwSB1Vua25vd24YngUgpwUoATUAAPBAOgdhcnRpY2xlQK2U6ve017qKdkgKUiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2PyAswBCiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2MaB2FydGljbGUiCTIxNjA1OTYxNToJUmVtb3ZlQWxsQK2U6ve017qKdkgGUhZhaV9lbnRpdHlfbGxtX3JlY2FsbGVyXQAA8EBiXAoJUmVtb3ZlQWxsEgdVbmtub3duGJ4FIKcFKAE1AADwQDoHYXJ0aWNsZUCtlOr3tNe6inZIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"TBaseDelegate","mention":"TBaseDelegate","matchorder":1,"begin":3854,"end":3867,"entityid":6008195577903887000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=TBaseDelegate&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJgCg1UQmFzZURlbGVnYXRlEgdVbmtub3duGI4eIJseKAE1AADwQDoHYXJ0aWNsZUCe6qLQucHZsFNIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj8gLUAQokNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2NjGgdhcnRpY2xlIgkyMTYwNTk2MTU6DVRCYXNlRGVsZWdhdGVAnuqi0LnB2bBTSAhSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJgCg1UQmFzZURlbGVnYXRlEgdVbmtub3duGI4eIJseKAE1AADwQDoHYXJ0aWNsZUCe6qLQucHZsFNIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"TDelegate","mention":"TDelegate","matchorder":1,"begin":8401,"end":8410,"entityid":7600842166232317000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=TDelegate&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJcCglURGVsZWdhdGUSB1Vua25vd24Y0UEg2kEoATUAAPBAOgdhcnRpY2xlQMH32YDetee9aUgKUiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2PyAswBCiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2MaB2FydGljbGUiCTIxNjA1OTYxNToJVERlbGVnYXRlQMH32YDetee9aUgKUhZhaV9lbnRpdHlfbGxtX3JlY2FsbGVyXQAA8EBiXAoJVERlbGVnYXRlEgdVbmtub3duGNFBINpBKAE1AADwQDoHYXJ0aWNsZUDB99mA3rXnvWlIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"多播代理委托","mention":"多播代理委托","matchorder":1,"begin":541,"end":547,"entityid":-5845315393525642000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=%E5%A4%9A%E6%92%AD%E4%BB%A3%E7%90%86%E5%A7%94%E6%89%98&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJmChLlpJrmkq3ku6PnkIblp5TmiZgSB1Vua25vd24YnQQgowQoATUAAPBAOgdhcnRpY2xlQMiWoIbpk9HwrgFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj8gLgAQokNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2NjGgdhcnRpY2xlIgkyMTYwNTk2MTU6EuWkmuaSreS7o+eQhuWnlOaJmEDIlqCG6ZPR8K4BSAtSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJmChLlpJrmkq3ku6PnkIblp5TmiZgSB1Vua25vd24YnQQgowQoATUAAPBAOgdhcnRpY2xlQMiWoIbpk9HwrgFIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""},{"name":"Unbind","mention":"Unbind","matchorder":1,"begin":639,"end":645,"entityid":1521344669704711200,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=216059615&content_type=Article&match_order=1&q=Unbind&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJZCgZVbmJpbmQSB1Vua25vd24Y\u002FwQghQUoATUAAPBAOgdhcnRpY2xlQPzXu9Wq3bmOFUgKUiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2PyAsYBCiQ0MmFjOTgwOS1mMmM3LTQwNzUtYTEyYi1iNjZjMDljZWFjY2MaB2FydGljbGUiCTIxNjA1OTYxNToGVW5iaW5kQPzXu9Wq3bmOFUgMUhZhaV9lbnRpdHlfbGxtX3JlY2FsbGVyXQAA8EBiWQoGVW5iaW5kEgdVbmtub3duGP8EIIUFKAE1AADwQDoHYXJ0aWNsZUD817vVqt25jhVIClIkNDJhYzk4MDktZjJjNy00MDc1LWExMmItYjY2YzA5Y2VhY2Nj","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""}],"id":"575671003","title":"UE4中的委托及实现原理","type":"article","articleType":"normal","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F575671003","imageUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-86e79fd183ce4bf6af267032da5829da_720w.jpg?source=172ae18b","titleImage":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-86e79fd183ce4bf6af267032da5829da_720w.jpg?source=172ae18b","excerpt":"\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-6a2a16a85d142879f7694f13ebaadbe1_200x112.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"497\" data-watermark=\"original\" data-original-src=\"v2-6a2a16a85d142879f7694f13ebaadbe1\" data-watermark-src=\"v2-8a80e3b40466316deb75353500c72afe\" data-private-watermark-src=\"\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-6a2a16a85d142879f7694f13ebaadbe1_r.png\" class=\"origin_image inline-img zh-lightbox-thumb\"\u002F\u003E\u003Cb\u003E委托的区别\u003C\u002Fb\u003E \u003Cb\u003E不同点\u003C\u002Fb\u003E按照可以绑定的方法个数区分： 可以分为两大类：单播和多播。 单播代理委托，指的是只能绑定一个函数指针的委托，实现一对一的通知。 多播代理委托，指的是能绑定多个函数指针的委托，实现一对多的通知。 单播调用方式为 ExecuteIfBound()…","created":1666324300,"updated":1697789720,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8.jpg?source=172ae18b","uid":"671672266975350784","userType":"people","isFollowing":false,"urlToken":"tencentboy","id":"8c55c5c887764c92edba04c1a021dfdd","description":"游戏开发工程师，参与开发《黎明觉醒》、《传奇世界》等手游。\n参与录制鹅厂《青少年职业启蒙》系列课程，帮助青少年建立更清晰的职业道路。","name":"足迹三万里","isAdvertiser":false,"headline":"","gender":1,"url":"\u002Fpeople\u002F8c55c5c887764c92edba04c1a021dfdd","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8_l.jpg?source=172ae18b","isOrg":false,"type":"people","badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972464154808860672","medalName":"社交达人","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c7e07b4d834217e9562ab38135351a19_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-c7e07b4d834217e9562ab38135351a19_l.png?source=172ae18b","description":"关注 50 个人","medalAvatarFrame":""}},"commentPermission":"all","copyrightPermission":"need_review","state":"published","ipInfo":"IP 属地广东","imageWidth":1440,"imageHeight":810,"content":"\u003Ch2\u003E\u003Cb\u003E委托的区别\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-6a2a16a85d142879f7694f13ebaadbe1_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"661\" data-rawheight=\"497\" data-original-token=\"v2-6a2a16a85d142879f7694f13ebaadbe1\" class=\"origin_image zh-lightbox-thumb\" width=\"661\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-6a2a16a85d142879f7694f13ebaadbe1_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"j_XEpXQL\"\u003E\u003Cb\u003E不同点\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"43fm9Br_\"\u003E按照可以绑定的方法个数区分： 可以分为两大类：单播和多播。\u003Cbr\u002F\u003E单播代理委托，指的是只能绑定一个函数指针的委托，实现一对一的通知。\u003Cbr\u002F\u003E多播代理委托，指的是能绑定多个函数指针的委托，实现一对多的通知。\u003Cbr\u002F\u003E单播调用方式为 ExecuteIfBound()\u003Cbr\u002F\u003E多播调用方式为 BroadCast()\u003Cbr\u002F\u003E单播删除方式为 Unbind()\u003Cbr\u002F\u003E多播的删除方式为 Remove()，RemoveAll()\u003Cbr\u002F\u003E单播绑定方法为 Bind...(如 BindStatic，BindRaw，BindUObject等)\u003Cbr\u002F\u003E多播绑定方式为 Add...(如 AddUObject...)；\u003C\u002Fli\u003E\u003Cli data-pid=\"-ivub0T4\"\u003E按照是否支持序列化区分，\u003Cb\u003E只有带有关键字 &#34;DYNAMIC&#34;的委托，才支持序列化\u003C\u002Fb\u003E。\u003Cb\u003E只有动态多播可以被蓝图绑定\u003C\u002Fb\u003E，通过宏 BlueprintAssignable。\u003C\u002Fli\u003E\u003Cli data-pid=\"rzo1U3f9\"\u003E按照是否有返回值区分，通过关键字 &#34;RetVal&#34;，注意\u003Cb\u003E只有单播委托和动态单播委托，才有返回值\u003C\u002Fb\u003E。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003EDECLARE_DELEGATE_RetVal_OneParam( ReturnValueType, DelegateName, Param1Type ) \nDECLARE_DYNAMIC_DELEGATE_RetVal_OneParam( ReturnValueType, DelegateName, Param1Type, Param1Name ) \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"XOIDgiJN\"\u003E例如：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003EDECLARE_DELEGATE_RetVal_OneParam(bool, FIsMontagePlayingExceptSlots, const TArray&lt;FName&gt;&amp;); \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"fiZPoUur\"\u003E\u003Cb\u003E补充点：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"o2kBFRRs\"\u003E多播委托与单播委托都支持多参数传入，引擎支持最多9个参数。\u003C\u002Fli\u003E\u003Cli data-pid=\"jGv_j_qu\"\u003E\u003Cb\u003E委托的命名开头必须为F，否则会编译报错。\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"fGVlNfLY\"\u003E动态委托可以进行序列化，可以通过名称查找它们函数，其执行速度比常规代理慢。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch2\u003E\u003Cb\u003E委托实现原理\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"S-Yhu0Cq\"\u003E引擎版本UE 4.21\u003C\u002Fp\u003E\u003Cp data-pid=\"s_wURptF\"\u003E涉及源码：\u003C\u002Fp\u003E\u003Cp data-pid=\"c2AHHQ_h\"\u003E大部分源码都在Engine\\Source\\Runtime\\Core\\Public\\Delegates文件夹下\u003C\u002Fp\u003E\u003Cp data-pid=\"K253wm9C\"\u003EDelegateCombinations.h\u003C\u002Fp\u003E\u003Cp data-pid=\"DEqHdXnK\"\u003EDelegate.h\u003C\u002Fp\u003E\u003Cp data-pid=\"2ubmZgzG\"\u003EDelegateSignatureImpl.inl\u003C\u002Fp\u003E\u003Cp data-pid=\"eI0deUYx\"\u003EDelegateBase.h\u003C\u002Fp\u003E\u003Cp data-pid=\"24GWmPfU\"\u003EIDelegateInstance.h\u003C\u002Fp\u003E\u003Cp data-pid=\"gWlG1B7q\"\u003EDelegateInstancesImpl.h\u003C\u002Fp\u003E\u003Cp data-pid=\"yakUDK4b\"\u003EDelegateInstanceInterface.h\u003C\u002Fp\u003E\u003Cp data-pid=\"FSt1GXND\"\u003EMulticastDelegateBase.h\u003C\u002Fp\u003E\u003Cp data-pid=\"u6w2zQEn\"\u003EScriptDelegates.h\u003C\u002Fp\u003E\u003Cp data-pid=\"y_UCGw_U\"\u003E虚幻引擎支持下面这几种类型的委托：\u003C\u002Fp\u003E\u003Cp data-pid=\"BSgpgpCb\"\u003E一、单播委托\u003C\u002Fp\u003E\u003Cp data-pid=\"DHUPnted\"\u003E单播委托能绑定一个函数指针，委托被执行的时候也会触发这个函数。\u003C\u002Fp\u003E\u003Cp data-pid=\"CqZ4zgWh\"\u003E二、多播委托\u003C\u002Fp\u003E\u003Cp data-pid=\"jXOIiagX\"\u003E多播委托维护了一个由单播委托组成的TArray数组，依托单播委托实现的。\u003C\u002Fp\u003E\u003Cp data-pid=\"zzenY6yX\"\u003E多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。\u003C\u002Fp\u003E\u003Cp data-pid=\"q1LQ6je6\"\u003E三、事件\u003C\u002Fp\u003E\u003Cp data-pid=\"411Gc6To\"\u003EEvent的底层实现其实是一个Multicast Delegate\u003C\u002Fp\u003E\u003Cp data-pid=\"k0QFaG-r\"\u003E四、动态单播委托\u003C\u002Fp\u003E\u003Cp data-pid=\"AOnmFm1O\"\u003E动态单播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度慢。\u003C\u002Fp\u003E\u003Cp data-pid=\"n4a7Wnwe\"\u003E\u003Cb\u003E动态绑定的函数，需要加标记UFUNCTION\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"SnaHiqDX\"\u003E五、动态多播委托\u003C\u002Fp\u003E\u003Cp data-pid=\"SLg-tJv5\"\u003E动态多播委托维护了一个由动态单播委托组成的TArray数组，依托动态单播委托实现的。\u003C\u002Fp\u003E\u003Cp data-pid=\"APbUaatQ\"\u003E动态多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。\u003C\u002Fp\u003E\u003Cp data-pid=\"FNfsuqX2\"\u003E动态多播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度慢。\u003C\u002Fp\u003E\u003Cp data-pid=\"jutKBg4K\"\u003E\u003Cb\u003E动态绑定的函数，需要加标记UFUNCTION\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"nvyoI3nG\"\u003E\u003Cb\u003E只有动态多播可以被蓝图绑定，需要加标记UPROPERTY(BlueprintAssignable)\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E一、单播委托\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Ch3\u003E\u003Cb\u003E定义\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#define DECLARE_DELEGATE( DelegateName ) FUNC_DECLARE_DELEGATE( DelegateName, void ) \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-2b9c2df4dcce3b0252f189e212801b77_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1199\" data-rawheight=\"177\" data-original-token=\"v2-2b9c2df4dcce3b0252f189e212801b77\" class=\"origin_image zh-lightbox-thumb\" width=\"1199\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-2b9c2df4dcce3b0252f189e212801b77_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"ZGFSAlHG\"\u003E单播委托通过TBaseDelegate这个类实现的，支持了多个参数。定义宏定义委托时，就是通过调用TBaseDelegate&lt;__VA_ARGS__&gt;，创建委托类型，并通过typedef重命名委托的名字为给定的委托名字。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-8e883a766545ad190ad2e3d8d33bdbbe_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"702\" data-rawheight=\"67\" data-original-token=\"v2-8e883a766545ad190ad2e3d8d33bdbbe\" class=\"origin_image zh-lightbox-thumb\" width=\"702\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-8e883a766545ad190ad2e3d8d33bdbbe_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-d771476e85a6e5e77633619da6ebbf6f_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"305\" data-rawheight=\"323\" data-original-token=\"v2-d771476e85a6e5e77633619da6ebbf6f\" class=\"content_image\" width=\"305\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"6AXnPH-x\"\u003E\u003Cb\u003E绑定函数指针到委托\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"fEzsL7JP\"\u003E绑定函数实际可能传入的函数指针类型非常多，例如可能传入一个在UObject对象中的成员函数，可能传入一个Lambda函数等。所以实际上，\u003Cb\u003E委托绑定函数，会根据各种传入函数指针类型进行适配，生成以IDelegateInstance为基类的派生类实例\u003C\u002Fb\u003E。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-4e09cdbc16e0bf453c7804f40bf5be1f_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"297\" data-rawheight=\"563\" data-original-token=\"v2-4e09cdbc16e0bf453c7804f40bf5be1f\" class=\"content_image\" width=\"297\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"nqMcNV3I\"\u003E例如BindUObject()，适配派生出TBaseUObjectMethodDelegateInstance类\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-34aeb358ca1afd865991df09fd711bcb_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"933\" data-rawheight=\"225\" data-original-token=\"v2-34aeb358ca1afd865991df09fd711bcb\" class=\"origin_image zh-lightbox-thumb\" width=\"933\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-34aeb358ca1afd865991df09fd711bcb_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"c_BmgYkK\"\u003E在TBaseUObjectMethodDelegateInstance类的构造函数中，保存成员函数的函数指针，指向成员函数所在类的弱指针。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-2fd7ecb1567b4ab6f94041474904e2d2_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"853\" data-rawheight=\"325\" data-original-token=\"v2-2fd7ecb1567b4ab6f94041474904e2d2\" class=\"origin_image zh-lightbox-thumb\" width=\"853\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-2fd7ecb1567b4ab6f94041474904e2d2_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EBindUObject() 绑定\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"pxgOfJpf\"\u003E在TBaseDelegate类中，实现了绑定的一系列方法，这里以BindUObject()为例，\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-08fe6d75d1b148f44cbe94f75deeb718_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"610\" data-rawheight=\"237\" data-original-token=\"v2-08fe6d75d1b148f44cbe94f75deeb718\" class=\"origin_image zh-lightbox-thumb\" width=\"610\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-08fe6d75d1b148f44cbe94f75deeb718_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"DIJMoEoJ\"\u003E先看下CreateUObject方法的实现：\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8524a55993dc652f1df36d65d56444b7_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1360\" data-rawheight=\"344\" data-original-token=\"v2-8524a55993dc652f1df36d65d56444b7\" class=\"origin_image zh-lightbox-thumb\" width=\"1360\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8524a55993dc652f1df36d65d56444b7_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"MgQ_1oBH\"\u003E通过C++ placement new的方式，创建了TBaseUObjectMethodDelegateInstance派生类实例，这里使用typedef重命名了\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-dac8d66da17fec9a8bf25b5faede4c83_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1166\" data-rawheight=\"105\" data-original-token=\"v2-dac8d66da17fec9a8bf25b5faede4c83\" class=\"origin_image zh-lightbox-thumb\" width=\"1166\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-dac8d66da17fec9a8bf25b5faede4c83_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1293\" data-rawheight=\"78\" data-original-token=\"v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7\" class=\"origin_image zh-lightbox-thumb\" width=\"1293\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"LADb-jGQ\"\u003E在TBaseUObjectMethodDelegateInstance派生类的构造函数中，保存了成员函数的函数指针，指向成员函数所在类的弱指针。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1c7b7a36f037ba1be6997d88b96268ee_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1028\" data-rawheight=\"141\" data-original-token=\"v2-1c7b7a36f037ba1be6997d88b96268ee\" class=\"origin_image zh-lightbox-thumb\" width=\"1028\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1c7b7a36f037ba1be6997d88b96268ee_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"7E5xHH7S\"\u003E因为CreateUObject返回的是右值，这里会调用到TDelegate的移动赋值运算符。\u003C\u002Fp\u003E\u003Cp data-pid=\"GfEdjs5s\"\u003E*this = CreateUObject(InUserObject, InFunc, Vars...); \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-2931641ac1cbf391260965b774e83d6b_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"248\" data-original-token=\"v2-2931641ac1cbf391260965b774e83d6b\" class=\"origin_image zh-lightbox-thumb\" width=\"606\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-2931641ac1cbf391260965b774e83d6b_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"g3GogHX8\"\u003E最终，将创建出来的TBaseDelegate赋值给自身，实现绑定函数。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003EUnbind() 解绑\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"Pazn7WJu\"\u003E在父类FDelegateBase中，定义了Unbind()解绑委托的方法。获取了当前对应的派生类实例，并调用实例的析构函数，回收分配的内存。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-ee23cc601e5a4f81593a3d78d176643c_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"254\" data-original-token=\"v2-ee23cc601e5a4f81593a3d78d176643c\" class=\"origin_image zh-lightbox-thumb\" width=\"899\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-ee23cc601e5a4f81593a3d78d176643c_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EExecuteIfBound() 执行委托\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"6ccN-M51\"\u003E在TBaseDelegate中，实现了执行委托的方法，这里以ExecuteIfBound()为例。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-edab8aefa8bd5ec36637dd5231723f5c_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"840\" data-rawheight=\"216\" data-original-token=\"v2-edab8aefa8bd5ec36637dd5231723f5c\" class=\"origin_image zh-lightbox-thumb\" width=\"840\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-edab8aefa8bd5ec36637dd5231723f5c_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"yUAPaBiS\"\u003E这里的Super是TBaseDelegate&lt;TTypeWrapper&lt;void&gt;, ParamTypes...&gt;\u003C\u002Fp\u003E\u003Cp data-pid=\"Yd3PVHwG\"\u003Etypedef TBaseDelegate&lt;TTypeWrapper&lt;void&gt;, ParamTypes...&gt; Super; \u003C\u002Fp\u003E\u003Cp data-pid=\"7FJVsgUu\"\u003ESuper::GetDelegateInstanceProtected()获取了当前对应的派生类实例，然后执行对应派生类实例中的ExecuteIfSafe方法。\u003C\u002Fp\u003E\u003Cp data-pid=\"Qb8HUOcO\"\u003E例如绑定的是UObject成员方法，在TBaseUObjectMethodDelegateInstance派生类中，实现了ExecuteIfSafe方法，当指向成员函数所在类对象有效，执行Execute方法。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-15466f87af5c7caabd9c0e075523b682_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"995\" data-rawheight=\"657\" data-original-token=\"v2-15466f87af5c7caabd9c0e075523b682\" class=\"origin_image zh-lightbox-thumb\" width=\"995\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-15466f87af5c7caabd9c0e075523b682_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"Yy9goF__\"\u003E在Execute方法中，出现了Payload.ApplyAfter，Payload为委托绑定时传递的额外参数变量列表，这些参数会存储在代理对象内部；在触发委托时，Payload会紧跟着Execute、ExecuteIfBound或Broadcast传入的参数之后，填充到绑定函数指针的参数列表中。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8b558a87f0e59ca091ab307e97a9bf85_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"418\" data-original-token=\"v2-8b558a87f0e59ca091ab307e97a9bf85\" class=\"origin_image zh-lightbox-thumb\" width=\"1267\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8b558a87f0e59ca091ab307e97a9bf85_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"z6ed7mZd\"\u003EPayload实际上是一个TTuple\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-028cdc9448ad2986935f905b562271ee_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"427\" data-rawheight=\"79\" data-original-token=\"v2-028cdc9448ad2986935f905b562271ee\" class=\"origin_image zh-lightbox-thumb\" width=\"427\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-028cdc9448ad2986935f905b562271ee_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"FHTAlkE-\"\u003E真正的函数调用在TMemberFunctionCaller中，重写了()符号，通过完美转发传入参数，获取成员函数所在类的对象，执行其成员函数。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-a16f36f20ca387abda7a6e73815d761d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"998\" data-rawheight=\"447\" data-original-token=\"v2-a16f36f20ca387abda7a6e73815d761d\" class=\"origin_image zh-lightbox-thumb\" width=\"998\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-a16f36f20ca387abda7a6e73815d761d_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003E测试代码\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"UuHy9S3P\"\u003E绑定：BindStatic方法\u003C\u002Fp\u003E\u003Cp data-pid=\"84ISIC77\"\u003E解绑：Unbind方法\u003C\u002Fp\u003E\u003Cp data-pid=\"n2-nsvWD\"\u003E执行：ExecuteIfBound方法\u003C\u002Fp\u003E\u003Cp data-pid=\"U8hPOdYt\"\u003E1，BindStatic 绑定一个原始的C++静态函数指针。\u003C\u002Fp\u003E\u003Cp data-pid=\"8f4YPf5Q\"\u003E2，BindStatic 带有Payload额外参数变量列表的绑定委托方式。\u003C\u002Fp\u003E\u003Cp data-pid=\"2Xj3FVTq\"\u003E3，BindRaw 绑定一个原始的C++函数指针\u003C\u002Fp\u003E\u003Cp data-pid=\"DHDL799M\"\u003E4，BindSP 绑定一个共享指针，使用MakeShared代替MakeShareable，可以避免二次内存分配，提高性能\u003C\u002Fp\u003E\u003Cp data-pid=\"VeqcQ8QJ\"\u003E5，BindThreadSafeSP 绑定一个线程安全的共享指针，相比BindSP会慢一些\u003C\u002Fp\u003E\u003Cp data-pid=\"1Oq6cD1I\"\u003E6，BindUObject 绑定一个基于UObject的成员函数\u003C\u002Fp\u003E\u003Cp data-pid=\"GzG6FPMQ\"\u003E7，BindUFunction 绑定一个基于UFunction的成员函数\u003C\u002Fp\u003E\u003Cp data-pid=\"7dUqy97e\"\u003E8，BindLambda 绑定一个Lambda表达式\u003C\u002Fp\u003E\u003Cp data-pid=\"3HRc7ulD\"\u003E9，定时器，带参数的回调方式\u003C\u002Fp\u003E\u003Cp data-pid=\"AZ1sFbT4\"\u003E\u003Cb\u003E注意：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"I6oTjcr1\"\u003E\u003Cb\u003E1，动态单播委托、动态多播委托不支持Payload，单播委托，多播委托支持Payload。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"jCKWBh9C\"\u003E\u003Cb\u003E2，使用定时器时，需要#include &#34;TimerManager.h&#34;和#include &#34;Engine\u002FWorld.h&#34;\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-94c4974d484c04245e5264a6bcfcaabe_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"844\" data-rawheight=\"205\" data-original-token=\"v2-94c4974d484c04245e5264a6bcfcaabe\" class=\"origin_image zh-lightbox-thumb\" width=\"844\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-94c4974d484c04245e5264a6bcfcaabe_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"zlizDFpk\"\u003ESimpleDelegateActor.h\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#pragma once\n\n#include &#34;CoreMinimal.h&#34;\n#include &#34;GameFramework\u002FActor.h&#34;\n\n#include &#34;SimpleDelegateActor.generated.h&#34;\n\nDECLARE_DELEGATE_OneParam(FTestDelegate, int32);\n\nUCLASS()\nclass TOAA_API ASimpleDelegateActor : public AActor\n{\n\tGENERATED_BODY()\n\t\npublic:\t\n\t\u002F\u002F Sets default values for this actor&#39;s properties\n\tASimpleDelegateActor();\n\t\n\tUFUNCTION(BlueprintCallable)\n\tvoid TestDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid RemoveDelegate();\n\n\tstatic void StaticFunction(int32 param);\n\tstatic void StaticFuncWithPayload(int32 param1, float param2, FString param3);\n\n\tvoid ClearTimer(int32 index);\n\tFTimerHandle timerHandle;\n\n\tFTestDelegate testDelegate1;\n\tFTestDelegate testDelegate2;\n\tFTestDelegate testDelegate3;\n\tFTestDelegate testDelegate4;\n\tFTestDelegate testDelegate5;\n\tFTestDelegate testDelegate6;\n\tFTestDelegate testDelegate7;\n\tFTestDelegate testDelegate8;\n\nprotected:\n\t\u002F\u002F Called when the game starts or when spawned\n\tvirtual void BeginPlay() override;\n\n};\n\n\u002F\u002F 继承UObject的C++Class\nUCLASS()\nclass UDelegateTestClass : public UObject\n{\n\tGENERATED_BODY()\nprotected:\n\tint m_Value = 0;\npublic:\n\tvoid UDelegateClassFunction1(int param)\n\t{\n\t\tthis-&gt;m_Value = param;\n\t\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor UDelegateClassFunction1 : %d&#34;), param);\n\t}\n\n\tUFUNCTION() \n\tvoid UDelegateClassFunction2(int param)\n\t{\n\t\tthis-&gt;m_Value = param;\n\t\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor UDelegateClassFunction1 : %d&#34;), param);\n\t}\n};\n\n\u002F\u002F 原始的C++Class\nclass DelegateTestClass\n{\n\tint m_Value = 0;\npublic:\n\n\tvoid DelegateFunction1(int param)\n\t{\n\t\tthis-&gt;m_Value = param;\n\t\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor DelegateFunction1 : %d&#34;), param);\n\t}\n\n\tvoid DelegateFunction2(int param)\n\t{\n\t\tthis-&gt;m_Value = param;\n\t\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor DelegateFunction2 : %d&#34;), param);\n\t}\n\n\tvoid DelegateFunction3(int param)\n\t{\n\t\tthis-&gt;m_Value = param;\n\t\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor DelegateFunction3 : %d&#34;), param);\n\t}\n\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"ROskhBjc\"\u003ESimpleDelegateActor.cpp\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#include &#34;SimpleDelegateActor.h&#34;\n#include &#34;TimerManager.h&#34;\n#include &#34;Engine\u002FWorld.h&#34;\n\n\u002F\u002F Sets default values\nASimpleDelegateActor::ASimpleDelegateActor()\n{\n \t\u002F\u002F Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don&#39;t need it.\n\tPrimaryActorTick.bCanEverTick = false;\n\n}\n\n\u002F\u002F Called when the game starts or when spawned\nvoid ASimpleDelegateActor::BeginPlay()\n{\n\tSuper::BeginPlay();\n\t\n}\n\nvoid ASimpleDelegateActor::TestDelegate()\n{\n\t\u002F\u002F BindStatic 绑定一个原始的C++静态函数指针\n\ttestDelegate1.BindStatic(ASimpleDelegateActor::StaticFunction);\n\ttestDelegate1.ExecuteIfBound(10);\n\n\t\u002F\u002F BindStatic with payload\n\ttestDelegate2.BindStatic(ASimpleDelegateActor::StaticFuncWithPayload, 15.5f, FString(TEXT(&#34;WithPayload&#34;)));\n\ttestDelegate2.ExecuteIfBound(20);\n\n\t\u002F\u002F BindRaw 绑定一个原始的C++函数指针\n\tDelegateTestClass testObj1;\n\ttestDelegate3.BindRaw(&amp;testObj1, &amp;DelegateTestClass::DelegateFunction1);\n\ttestDelegate3.ExecuteIfBound(30);\n\n\t\u002F\u002F BindSP 绑定一个共享指针，使用MakeShared代替MakeShareable，可以避免二次内存分配，提高性能\n\tTSharedRef&lt;DelegateTestClass&gt; testObj2 = MakeShared&lt;DelegateTestClass&gt;();\n\ttestDelegate4.BindSP(testObj2, &amp;DelegateTestClass::DelegateFunction2);\n\ttestDelegate4.ExecuteIfBound(40);\n\n\t\u002F\u002F BindThreadSafeSP 绑定一个线程安全的共享指针，相比BindSP会慢一些\n\tTSharedRef&lt;DelegateTestClass, ESPMode::ThreadSafe&gt; testObj3 = MakeShared&lt;DelegateTestClass, ESPMode::ThreadSafe&gt;();\n\ttestDelegate5.BindThreadSafeSP(testObj3, &amp;DelegateTestClass::DelegateFunction3);\n\ttestDelegate5.ExecuteIfBound(50);\n\n\t\u002F\u002F BindUObject 绑定一个基于UObject的成员函数\n\tUDelegateTestClass* testObj4 = NewObject&lt;UDelegateTestClass&gt;(this, UDelegateTestClass::StaticClass());\n\ttestDelegate6.BindUObject(testObj4, &amp;UDelegateTestClass::UDelegateClassFunction1);\n\ttestDelegate6.ExecuteIfBound(60);\n\n\t\u002F\u002F BindUFunction 绑定一个基于UObject的成员函数\n\t\u002F\u002F STATIC_FUNCTION_FNAME为了提取类成员函数名中的函数名字符串，查找UFUNCTION函数\n\tUDelegateTestClass* testObj5 = NewObject&lt;UDelegateTestClass&gt;(this, UDelegateTestClass::StaticClass());\n\ttestDelegate7.BindUFunction(testObj5, STATIC_FUNCTION_FNAME(TEXT(&#34;UDelegateTestClass::UDelegateClassFunction2&#34;)));\n\ttestDelegate7.ExecuteIfBound(70);\n\n\t\u002F\u002F BindLambda 绑定一个Lambda表达式\n\tauto LambdaFunction = [](int param)-&gt;void\n\t{\n\t\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor LambdaFunction : %d&#34;), param);\n\t};\n\ttestDelegate8.BindLambda(LambdaFunction);\n\ttestDelegate8.ExecuteIfBound(80);\n\n\t\u002F\u002F FTimerDelegate 一般这样写定时器的回调绑定\n\t\u002F\u002F GetWorldTimerManager().SetTimer(timerHandle, this, &amp;ASimpleDelegateActor::ClearTimer, 2, false);\n\n\t\u002F\u002F 但想要传递参数到回调函数时，上面的写法就不能满足了，这时，可以通过绑定Lambda表达式达到我们想要的结果\n\t\u002F\u002F 如果不使用TWeakObjectPtr，定时器执行到回调函数时，this可能是野指针，导致崩溃。\n\t\u002F\u002F 通过判断弱指针是否有效，就可以有效避免上面的崩溃问题。\n\tint index = 80;\n\tGetWorldTimerManager().SetTimer(timerHandle, [WeakThis = TWeakObjectPtr&lt;ASimpleDelegateActor&gt;(this), index]() {\n\t\tif (WeakThis.IsValid())\n\t\t{\n\t\t\tWeakThis-&gt;ClearTimer(index);\n\t\t}\n\t}, 2.0f, false);\n}\n\nvoid ASimpleDelegateActor::RemoveDelegate()\n{\n\ttestDelegate1.Unbind();\n\ttestDelegate2.Unbind();\n\ttestDelegate3.Unbind();\n\ttestDelegate4.Unbind();\n\ttestDelegate5.Unbind();\n\ttestDelegate6.Unbind();\n\ttestDelegate7.Unbind();\n\ttestDelegate8.Unbind();\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor::RemoveDelegate&#34;));\n}\n\nvoid ASimpleDelegateActor::StaticFunction(int32 param)\n{\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor::StaticFunction : %d&#34;), param);\n}\n\nvoid ASimpleDelegateActor::StaticFuncWithPayload(int32 param1, float param2, FString param3)\n{\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor::StaticFuncWithPayload : %d, %f, %s&#34;), param1, param2, *param3);\n}\n\nvoid ASimpleDelegateActor::ClearTimer(int32 index)\n{\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ASimpleDelegateActor::ClearTimer : %d&#34;), index);\n\tGetWorldTimerManager().ClearTimer(timerHandle);\n}\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E二、多播委托\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"ubRJy-p2\"\u003E多播委托维护了一个由单播委托组成的TArray数组，依托单播委托实现的。\u003C\u002Fp\u003E\u003Cp data-pid=\"bLQwb158\"\u003E多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E定义\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#define DECLARE_MULTICAST_DELEGATE( DelegateName ) FUNC_DECLARE_MULTICAST_DELEGATE( DelegateName, void ) \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-172fda021bf47b2d5ed8f5ab33a0d6ee_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"71\" data-original-token=\"v2-172fda021bf47b2d5ed8f5ab33a0d6ee\" class=\"origin_image zh-lightbox-thumb\" width=\"728\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-172fda021bf47b2d5ed8f5ab33a0d6ee_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"k9P6Ti-K\"\u003E多播委托的实现是在父类TBaseMulticastDelegate类中，\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-a147cd0bd2a7189d317242b610e102d8_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1052\" data-rawheight=\"71\" data-original-token=\"v2-a147cd0bd2a7189d317242b610e102d8\" class=\"origin_image zh-lightbox-thumb\" width=\"1052\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-a147cd0bd2a7189d317242b610e102d8_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-74ee91d6787582dc9ff5bbb8136b3bf0_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"319\" data-rawheight=\"461\" data-original-token=\"v2-74ee91d6787582dc9ff5bbb8136b3bf0\" class=\"content_image\" width=\"319\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EAddUObject() 绑定\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"SQ9aQ0n_\"\u003E例如绑定UObject的成员函数，调用AddUObject()方法\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-8aaf9e99ed8cddcfaa517f0ec46954dc_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"243\" data-original-token=\"v2-8aaf9e99ed8cddcfaa517f0ec46954dc\" class=\"origin_image zh-lightbox-thumb\" width=\"1210\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-8aaf9e99ed8cddcfaa517f0ec46954dc_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Col\u003E\u003Cli data-pid=\"dQQxwVkh\"\u003E首先，调用TBaseDelegate类的CreateUObject，\u003Cbr\u002F\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8524a55993dc652f1df36d65d56444b7_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1360\" data-rawheight=\"344\" data-original-token=\"v2-8524a55993dc652f1df36d65d56444b7\" class=\"origin_image zh-lightbox-thumb\" width=\"1360\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8524a55993dc652f1df36d65d56444b7_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"A3FGt5Gy\"\u003E\u003Cbr\u002F\u003E通过C++ placement new的方式，创建了TBaseUObjectMethodDelegateInstance派生类实例，这里使用typedef重命名了\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-dac8d66da17fec9a8bf25b5faede4c83_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1166\" data-rawheight=\"105\" data-original-token=\"v2-dac8d66da17fec9a8bf25b5faede4c83\" class=\"origin_image zh-lightbox-thumb\" width=\"1166\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-dac8d66da17fec9a8bf25b5faede4c83_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1293\" data-rawheight=\"78\" data-original-token=\"v2-4ae2d0ac20a1d7a3599cbb7ef2c682f7\" class=\"origin_image zh-lightbox-thumb\" width=\"1293\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-4ae2d0ac20a1d7a3599cbb7ef2c682f7_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"Wrlicbop\"\u003E\u003Cbr\u002F\u003E在派生类的构造函数中，保存了成员函数的函数指针，指向成员函数所在类的弱指针。\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1c7b7a36f037ba1be6997d88b96268ee_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1028\" data-rawheight=\"141\" data-original-token=\"v2-1c7b7a36f037ba1be6997d88b96268ee\" class=\"origin_image zh-lightbox-thumb\" width=\"1028\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-1c7b7a36f037ba1be6997d88b96268ee_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Col\u003E\u003Cli data-pid=\"Fs8fkE2o\"\u003E然后， 调用Add方法，获取根据传入的参数不同，调用不同的Add方法。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-e3b3c2f2901736346a050bcfca3f5c3e_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"866\" data-rawheight=\"628\" data-original-token=\"v2-e3b3c2f2901736346a050bcfca3f5c3e\" class=\"origin_image zh-lightbox-thumb\" width=\"866\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-e3b3c2f2901736346a050bcfca3f5c3e_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"GJrT0EJ4\"\u003EGetDelegateInstanceProtectedHelper获取对应的委托实例，判断委托实例是否有效。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-654a36fe11d9e12de7df61b678b8e8e6_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1034\" data-rawheight=\"170\" data-original-token=\"v2-654a36fe11d9e12de7df61b678b8e8e6\" class=\"origin_image zh-lightbox-thumb\" width=\"1034\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-654a36fe11d9e12de7df61b678b8e8e6_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-84d44e1fa0671ce45cce523376a756b2_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"105\" data-original-token=\"v2-84d44e1fa0671ce45cce523376a756b2\" class=\"origin_image zh-lightbox-thumb\" width=\"687\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-84d44e1fa0671ce45cce523376a756b2_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"8gM0bher\"\u003EFMulticastDelegateBase的AddInternal方法，从调用列表中，移除无效的函数绑定，把委托实例加入到调用列表中。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-a002cd275e32fc0e24adfa18a359c220_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"729\" data-rawheight=\"182\" data-original-token=\"v2-a002cd275e32fc0e24adfa18a359c220\" class=\"origin_image zh-lightbox-thumb\" width=\"729\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-a002cd275e32fc0e24adfa18a359c220_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003ERemove() 解绑\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-10b9e52959927e0b0955f294013caec9_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"386\" data-rawheight=\"116\" data-original-token=\"v2-10b9e52959927e0b0955f294013caec9\" class=\"content_image\" width=\"386\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"b6iXHL_M\"\u003E在RemoveDelegateInstance()中，遍历调用列表，获取对应的IDelegateInstance委托实例，执行FDelegateBase的Unbind()方法。同时，从调用列表中，移除无效的函数绑定。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-abbf3aabe1fa908b5758001aca6ff4ec_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1136\" data-rawheight=\"473\" data-original-token=\"v2-abbf3aabe1fa908b5758001aca6ff4ec\" class=\"origin_image zh-lightbox-thumb\" width=\"1136\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-abbf3aabe1fa908b5758001aca6ff4ec_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"agCkN9Wc\"\u003E获取对应的委托实例，执行委托实例的析构函数，回收之前分配的内存。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-401d599b9c5a6b7a455e76b9a592f6c1_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"871\" data-rawheight=\"205\" data-original-token=\"v2-401d599b9c5a6b7a455e76b9a592f6c1\" class=\"origin_image zh-lightbox-thumb\" width=\"871\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-401d599b9c5a6b7a455e76b9a592f6c1_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003ERemoveAll() 解绑所有\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"rxANit1K\"\u003E从多播委托的调用列表中移除绑定到指定对象的所有函数。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-b0f702eb60d295d3d25617a56dc8598b_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1017\" data-rawheight=\"833\" data-original-token=\"v2-b0f702eb60d295d3d25617a56dc8598b\" class=\"origin_image zh-lightbox-thumb\" width=\"1017\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-b0f702eb60d295d3d25617a56dc8598b_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EBroadcast() 执行委托\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"CHpBcyZz\"\u003E剔除无效的函数绑定，广播所有委托到所有绑定的对象。\u003C\u002Fp\u003E\u003Cp data-pid=\"JXzXz6oG\"\u003E遍历调用列表，通过GetDelegateInstanceProtectedHelper获取IDelegateInstance委托实例，执行委托实例的ExecuteIfSafe方法，\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-e0d44dbd0dccdf20957f1a8377eea009_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1411\" data-rawheight=\"695\" data-original-token=\"v2-e0d44dbd0dccdf20957f1a8377eea009\" class=\"origin_image zh-lightbox-thumb\" width=\"1411\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-e0d44dbd0dccdf20957f1a8377eea009_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"GK5ihgR1\"\u003E下面的流程就跟单播委托的执行一样了。\u003C\u002Fp\u003E\u003Cp data-pid=\"kVn8x_dI\"\u003E例如，绑定的是UObject的成员函数，执行的就是委托实例为TBaseUObjectMethodDelegateInstance的ExecuteIfSafe方法\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-bc67219664b7b54f43f66767d889e3dc_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1301\" data-rawheight=\"676\" data-original-token=\"v2-bc67219664b7b54f43f66767d889e3dc\" class=\"origin_image zh-lightbox-thumb\" width=\"1301\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-bc67219664b7b54f43f66767d889e3dc_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"BSk40SMv\"\u003E在Execute方法中，出现了Payload.ApplyAfter，Payload为委托绑定时传递的额外参数变量列表，这些参数会存储在代理对象内部；在触发委托时，Payload会紧跟着Execute、ExecuteIfBound或Broadcast传入的参数之后，填充到绑定函数指针的参数列表中。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8b558a87f0e59ca091ab307e97a9bf85_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"418\" data-original-token=\"v2-8b558a87f0e59ca091ab307e97a9bf85\" class=\"origin_image zh-lightbox-thumb\" width=\"1267\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8b558a87f0e59ca091ab307e97a9bf85_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"v1gf1KBf\"\u003EPayload实际上是一个TTuple\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-028cdc9448ad2986935f905b562271ee_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"427\" data-rawheight=\"79\" data-original-token=\"v2-028cdc9448ad2986935f905b562271ee\" class=\"origin_image zh-lightbox-thumb\" width=\"427\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-028cdc9448ad2986935f905b562271ee_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"8i_RAS9B\"\u003E真正的函数调用在TMemberFunctionCaller中，重写了()符号，通过完美转发传入参数，获取成员函数所在类的对象，执行其成员函数。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-a16f36f20ca387abda7a6e73815d761d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"998\" data-rawheight=\"447\" data-original-token=\"v2-a16f36f20ca387abda7a6e73815d761d\" class=\"origin_image zh-lightbox-thumb\" width=\"998\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-a16f36f20ca387abda7a6e73815d761d_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003E测试代码\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"JklD-3cA\"\u003E绑定：AddStatic方法\u003C\u002Fp\u003E\u003Cp data-pid=\"6twCT27o\"\u003E解绑：Remove方法和RemoveAll方法\u003C\u002Fp\u003E\u003Cp data-pid=\"hQJjg8lc\"\u003E执行：Broadcast方法\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-a9af844363eb3011980c479c306cf3ab_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"577\" data-rawheight=\"86\" data-original-token=\"v2-a9af844363eb3011980c479c306cf3ab\" class=\"origin_image zh-lightbox-thumb\" width=\"577\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-a9af844363eb3011980c479c306cf3ab_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-59717b05403756ac9422cad410b15cb1_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"622\" data-rawheight=\"72\" data-original-token=\"v2-59717b05403756ac9422cad410b15cb1\" class=\"origin_image zh-lightbox-thumb\" width=\"622\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-59717b05403756ac9422cad410b15cb1_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"Wj9P_l7K\"\u003EMulticastDelegateActor.h\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#pragma once\n\n#include &#34;CoreMinimal.h&#34;\n#include &#34;GameFramework\u002FActor.h&#34;\n#include &#34;MulticastDelegateActor.generated.h&#34;\n\nDECLARE_MULTICAST_DELEGATE_OneParam(FTestMulticastDelegate, int32);\n\nUCLASS()\nclass TOAA_API AMulticastDelegateActor : public AActor\n{\n\tGENERATED_BODY()\n\t\npublic:\t\n\t\u002F\u002F Sets default values for this actor&#39;s properties\n\tAMulticastDelegateActor();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid TestMulticastDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid RemoveMulticastDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid RemoveAllMulticastDelegate();\n\n\tstatic void StaticFunction(int32 param);\n\n\tFTestMulticastDelegate multicastDelegate;\n\tFDelegateHandle handle;\n\nprotected:\n\t\u002F\u002F Called when the game starts or when spawned\n\tvirtual void BeginPlay() override;\n\n};\n \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"pNkHn5lK\"\u003EMulticastDelegateActor.cpp\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#include &#34;MulticastDelegateActor.h&#34;\n\n\u002F\u002F Sets default values\nAMulticastDelegateActor::AMulticastDelegateActor()\n{\n \t\u002F\u002F Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don&#39;t need it.\n\tPrimaryActorTick.bCanEverTick = false;\n\n}\n\n\u002F\u002F Called when the game starts or when spawned\nvoid AMulticastDelegateActor::BeginPlay()\n{\n\tSuper::BeginPlay();\n\n}\n\nvoid AMulticastDelegateActor::TestMulticastDelegate()\n{\n\thandle = multicastDelegate.AddStatic(AMulticastDelegateActor::StaticFunction);\n\tmulticastDelegate.Broadcast(10);\n}\n\nvoid AMulticastDelegateActor::RemoveMulticastDelegate()\n{\n\tmulticastDelegate.Remove(handle);\n\tUE_LOG(LogTemp, Log, TEXT(&#34;AMulticastDelegateActor::RemoveMulticastDelegate&#34;));\n}\n\nvoid AMulticastDelegateActor::RemoveAllMulticastDelegate()\n{\n\tmulticastDelegate.RemoveAll(this);\n\tUE_LOG(LogTemp, Log, TEXT(&#34;AMulticastDelegateActor::RemoveAllMulticastDelegate&#34;));\n}\n\nvoid AMulticastDelegateActor::StaticFunction(int32 param)\n{\n\tUE_LOG(LogTemp, Log, TEXT(&#34;AMulticastDelegateActor::StaticFunction : %d&#34;), param);\n}\n\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2\u003E\u003Cb\u003E三、事件\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"XgRME8H7\"\u003E只能够通过声明它的对象来BoardCast、IsBound、Clear，不能通过外部来调用，但是实际上并不是这样，现在外部类一样可以拥有Event的全部访问权限。\u003C\u002Fp\u003E\u003Cp data-pid=\"lnLo3y24\"\u003E\u003Cb\u003EEvent的底层实现其实是一个Multicast Delegate\u003C\u002Fb\u003E，然后他把传进来的OwningType其实就是绑定的ClassType，声明为它的友元类，这样一来这个OwningClass就对这个Event的成员有完全Public的访问权限。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E定义\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#define DECLARE_EVENT( OwningType, EventName ) FUNC_DECLARE_EVENT( OwningType, EventName, void ) \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-2c14e4cb648553f3d8c3d2acb69f60fe_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"695\" data-rawheight=\"146\" data-original-token=\"v2-2c14e4cb648553f3d8c3d2acb69f60fe\" class=\"origin_image zh-lightbox-thumb\" width=\"695\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-2c14e4cb648553f3d8c3d2acb69f60fe_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch2\u003E\u003Cb\u003E四、动态单播委托\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"xP8EpTDx\"\u003E动态单播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度很慢，少用。\u003C\u002Fp\u003E\u003Cp data-pid=\"0kbY6_c2\"\u003E\u003Cb\u003E动态绑定的函数，需要加标记UFUNCTION\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E定义\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#define DECLARE_DYNAMIC_DELEGATE( DelegateName ) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_DELEGATE) FUNC_DECLARE_DYNAMIC_DELEGATE( FWeakObjectPtr, DelegateName, DelegateName##_DelegateWrapper, , FUNC_CONCAT( *this ), void ) \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-acab75a8fc2272717e693a95af1e7805_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1279\" data-rawheight=\"796\" data-original-token=\"v2-acab75a8fc2272717e693a95af1e7805\" class=\"origin_image zh-lightbox-thumb\" width=\"1279\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-acab75a8fc2272717e693a95af1e7805_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"zO_owIYM\"\u003E动态单播委托，通过TBaseDynamicDelegate这个类实现\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-acbe98aec89d190eed45f7aa977d9166_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"736\" data-rawheight=\"63\" data-original-token=\"v2-acbe98aec89d190eed45f7aa977d9166\" class=\"origin_image zh-lightbox-thumb\" width=\"736\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-acbe98aec89d190eed45f7aa977d9166_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-dc4ac2fb981d948a7c84c79dd0b21e8d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"307\" data-rawheight=\"265\" data-original-token=\"v2-dc4ac2fb981d948a7c84c79dd0b21e8d\" class=\"content_image\" width=\"307\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EBindDynamic() 绑定\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"cABObZVQ\"\u003E宏定义BindDynamic绑定委托的方法，实际调用的方法是在TBaseDynamicDelegate类中的__Internal_BindDynamic方法。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c96ae1aedb87798480ef27b77dbb92e5_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1380\" data-rawheight=\"69\" data-original-token=\"v2-c96ae1aedb87798480ef27b77dbb92e5\" class=\"origin_image zh-lightbox-thumb\" width=\"1380\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c96ae1aedb87798480ef27b77dbb92e5_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"G1ybeZHI\"\u003E在__Internal_BindDynamic方法中，保存了指向绑定的对象的弱指针，绑定的函数名。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-f5a5f958673f73542d6b1c85ef7a45f6_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1206\" data-rawheight=\"367\" data-original-token=\"v2-f5a5f958673f73542d6b1c85ef7a45f6\" class=\"origin_image zh-lightbox-thumb\" width=\"1206\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-f5a5f958673f73542d6b1c85ef7a45f6_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-ee0ab6def2c2913b13f834ffad2c2c2b_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"271\" data-original-token=\"v2-ee0ab6def2c2913b13f834ffad2c2c2b\" class=\"origin_image zh-lightbox-thumb\" width=\"797\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-ee0ab6def2c2913b13f834ffad2c2c2b_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EUnbind() 解绑\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"g-yy8XQO\"\u003E动态单播委托的解绑方法是Unbind()，对弱指针和函数名重置。\u003C\u002Fp\u003E\u003Cp data-pid=\"Ts-aUWlX\"\u003EClear()的实现就是调用Unbind()方法。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-8c09300b9dae9a32df76f8d167c8d84f_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"343\" data-rawheight=\"132\" data-original-token=\"v2-8c09300b9dae9a32df76f8d167c8d84f\" class=\"content_image\" width=\"343\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-1d9369b7edb4a6d9e46610cfab6c86d9_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"187\" data-rawheight=\"102\" data-original-token=\"v2-1d9369b7edb4a6d9e46610cfab6c86d9\" class=\"content_image\" width=\"187\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EExecuteIfBound() 执行委托\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"0CSce_hp\"\u003EExecuteIfBound() 方法在宏定义中，判断如果绑定，就会调用ExecFuntion方法执行委托。最终，会调用到父类TScriptDelegate的ProcessDelegate方法。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-977ffbcc83544d6aba605b2b4d1064c6_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"835\" data-rawheight=\"235\" data-original-token=\"v2-977ffbcc83544d6aba605b2b4d1064c6\" class=\"origin_image zh-lightbox-thumb\" width=\"835\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-977ffbcc83544d6aba605b2b4d1064c6_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"hlhYuYx7\"\u003EExecFuntion方法，在宏定义中，对应DelegateName##_DelegateWrapper函数，而这个函数会通过UHT生成。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-2c583df49d5d2000814edfe650de5f75_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1293\" data-rawheight=\"42\" data-original-token=\"v2-2c583df49d5d2000814edfe650de5f75\" class=\"origin_image zh-lightbox-thumb\" width=\"1293\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-2c583df49d5d2000814edfe650de5f75_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"_nCuMx8X\"\u003EDelegateName##_DelegateWrapper函数\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-57e23a24525eb85cb025485b47d0c6d9_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1033\" data-rawheight=\"126\" data-original-token=\"v2-57e23a24525eb85cb025485b47d0c6d9\" class=\"origin_image zh-lightbox-thumb\" width=\"1033\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-57e23a24525eb85cb025485b47d0c6d9_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"1qvmo1za\"\u003E在ProcessDelegate方法中，判断弱指针是否有效，如果有效，通过指向对象的弱指针，获取对象。通过函数名找到对应的函数并执行。\u003C\u002Fp\u003E\u003Cp data-pid=\"elAQW-D8\"\u003EProcessEvent是UE通过反射执行对象上的函数的方式。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-39099368bdb6be1895cb0b593fcf884d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1108\" data-rawheight=\"637\" data-original-token=\"v2-39099368bdb6be1895cb0b593fcf884d\" class=\"origin_image zh-lightbox-thumb\" width=\"1108\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-39099368bdb6be1895cb0b593fcf884d_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003E测试代码\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"M61fEu7E\"\u003E\u003Cb\u003E注意：动态绑定的函数，需要加标记UFUNCTION\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"SY33DrLM\"\u003E绑定：BindDynamic方法\u003C\u002Fp\u003E\u003Cp data-pid=\"CNF4T1Ek\"\u003E解绑：Unbind方法\u003C\u002Fp\u003E\u003Cp data-pid=\"6cODxjd-\"\u003E执行：ExecuteIfBound方法\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-1dcd94058d07dedd5b59366f454992a9_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"573\" data-rawheight=\"66\" data-original-token=\"v2-1dcd94058d07dedd5b59366f454992a9\" class=\"origin_image zh-lightbox-thumb\" width=\"573\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-1dcd94058d07dedd5b59366f454992a9_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"Bba1kgBB\"\u003EDynamicDelegateActor.h\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#pragma once\n\n#include &#34;CoreMinimal.h&#34;\n#include &#34;GameFramework\u002FActor.h&#34;\n#include &#34;DynamicDelegateActor.generated.h&#34;\n\nDECLARE_DYNAMIC_DELEGATE_OneParam(FTestDynamicDelegate, int32, param);\n\nUCLASS()\nclass TOAA_API ADynamicDelegateActor : public AActor\n{\n\tGENERATED_BODY()\n\t\npublic:\t\n\t\u002F\u002F Sets default values for this actor&#39;s properties\n\tADynamicDelegateActor();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid TestDynamicDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid RemoveDynamicDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid TestFunction(int32 param);\n\n\tFTestDynamicDelegate dynamicDelegate;\n\nprotected:\n\t\u002F\u002F Called when the game starts or when spawned\n\tvirtual void BeginPlay() override;\n\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"7Xaxutkh\"\u003EDynamicDelegateActor.cpp\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#include &#34;DynamicDelegateActor.h&#34;\n\n\u002F\u002F Sets default values\nADynamicDelegateActor::ADynamicDelegateActor()\n{\n \t\u002F\u002F Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don&#39;t need it.\n\tPrimaryActorTick.bCanEverTick = false;\n\n}\n\n\u002F\u002F Called when the game starts or when spawned\nvoid ADynamicDelegateActor::BeginPlay()\n{\n\tSuper::BeginPlay();\n\t\n}\n\nvoid ADynamicDelegateActor::TestDynamicDelegate()\n{\n\t\u002F\u002F 动态绑定的函数，需要加标记UFUNCTION\n\tdynamicDelegate.BindDynamic(this, &amp;ADynamicDelegateActor::TestFunction);\n\tdynamicDelegate.ExecuteIfBound(10);\n}\n\nvoid ADynamicDelegateActor::RemoveDynamicDelegate()\n{\n\tdynamicDelegate.Unbind();\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ADynamicDelegateActor::RemoveDynamicDelegate&#34;));\n}\n\nvoid ADynamicDelegateActor::TestFunction(int32 param)\n{\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ADynamicDelegateActor::TestFunction : %d&#34;), param);\n}\n\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ch2\u003E\u003Cb\u003E五、动态多播委托\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"Rp1pF1DH\"\u003E动态多播委托维护了一个由动态单播委托组成的TArray数组，依托动态单播委托实现的。\u003C\u002Fp\u003E\u003Cp data-pid=\"tEELTjM1\"\u003E动态多播委托能绑定多个函数指针，委托被执行的时候也会触发多个函数。\u003C\u002Fp\u003E\u003Cp data-pid=\"CQOkfLtd\"\u003E动态多播委托在执行时需要实时在类中按照给定的函数名字查找对应的函数，因此执行速度很慢，少用。\u003C\u002Fp\u003E\u003Cp data-pid=\"Y9_tA8Uy\"\u003E\u003Cb\u003E动态绑定的函数，需要加标记UFUNCTION\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"gLMPsjHX\"\u003E\u003Cb\u003E只有动态多播可以被蓝图绑定，需要加标记UPROPERTY(BlueprintAssignable)\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E定义\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#define DECLARE_DYNAMIC_MULTICAST_DELEGATE( DelegateName ) BODY_MACRO_COMBINE(CURRENT_FILE_ID,_,__LINE__,_DELEGATE) FUNC_DECLARE_DYNAMIC_MULTICAST_DELEGATE( FWeakObjectPtr, DelegateName, DelegateName##_DelegateWrapper, , FUNC_CONCAT( *this ), void ) \u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-5343b6a37b537dce775038071f934920_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1433\" data-rawheight=\"555\" data-original-token=\"v2-5343b6a37b537dce775038071f934920\" class=\"origin_image zh-lightbox-thumb\" width=\"1433\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-5343b6a37b537dce775038071f934920_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"yDZzJ341\"\u003E动态多播委托的实现在TBaseDynamicMulticastDelegate类中\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-f6ad67254ba418bc46987aa8908e6b84_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"79\" data-original-token=\"v2-f6ad67254ba418bc46987aa8908e6b84\" class=\"origin_image zh-lightbox-thumb\" width=\"830\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-f6ad67254ba418bc46987aa8908e6b84_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-cfa39b10fc2dc8ebf436e82eb7cb186d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"341\" data-rawheight=\"347\" data-original-token=\"v2-cfa39b10fc2dc8ebf436e82eb7cb186d\" class=\"content_image\" width=\"341\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EAddDynamic() 绑定\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"13kJuOAA\"\u003E宏定义AddDynamic绑定委托的方法，实际调用的方法是TBaseDynamicMulticastDelegate类中的__Internal_AddDynamic方法。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-30b974fd9e61352084eede7c1f2c060c_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1334\" data-rawheight=\"76\" data-original-token=\"v2-30b974fd9e61352084eede7c1f2c060c\" class=\"origin_image zh-lightbox-thumb\" width=\"1334\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-30b974fd9e61352084eede7c1f2c060c_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-c24166f319c43bed9e773a6be0416096_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1607\" data-rawheight=\"520\" data-original-token=\"v2-c24166f319c43bed9e773a6be0416096\" class=\"origin_image zh-lightbox-thumb\" width=\"1607\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-c24166f319c43bed9e773a6be0416096_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"oikXquff\"\u003E在__Internal_AddDynamic方法中，调用了FDelegate的__Internal_BindDynamic方法，保存了指向绑定的对象的弱指针，绑定的函数名。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-5f4df63f8e70aa39fa97836001d4aa0c_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1452\" data-rawheight=\"318\" data-original-token=\"v2-5f4df63f8e70aa39fa97836001d4aa0c\" class=\"origin_image zh-lightbox-thumb\" width=\"1452\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-5f4df63f8e70aa39fa97836001d4aa0c_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-ee0ab6def2c2913b13f834ffad2c2c2b_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"271\" data-original-token=\"v2-ee0ab6def2c2913b13f834ffad2c2c2b\" class=\"origin_image zh-lightbox-thumb\" width=\"797\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-ee0ab6def2c2913b13f834ffad2c2c2b_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"G4O_VPHL\"\u003E然后，调用了父类TMulticastScriptDelegate的Add方法，从调用列表中，清除过期无效的绑定函数，并添加新绑定的委托到调用列表中。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c67e471344d207c6db8069c7f644a399_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"309\" data-original-token=\"v2-c67e471344d207c6db8069c7f644a399\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c67e471344d207c6db8069c7f644a399_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-39de4a0145721573344e437c82ae9963_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"299\" data-original-token=\"v2-39de4a0145721573344e437c82ae9963\" class=\"origin_image zh-lightbox-thumb\" width=\"899\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-39de4a0145721573344e437c82ae9963_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003ERemoveDynamic() 解绑\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"tvjYj4xQ\"\u003E解绑动态单播委托，宏定义RemoveDynamic()，实际调用TBaseDynamicMulticastDelegate类中的方法__Internal_RemoveDynamic方法，\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-132c31963d4ac4ee1dce1fa616ae4fa3_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1430\" data-rawheight=\"56\" data-original-token=\"v2-132c31963d4ac4ee1dce1fa616ae4fa3\" class=\"origin_image zh-lightbox-thumb\" width=\"1430\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-132c31963d4ac4ee1dce1fa616ae4fa3_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"50_U63-3\"\u003E在__Internal_RemoveDynamic方法中，调用了父类TMulticastScriptDelegate中的Remove方法，\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-445cb2bb8a670bfaa0fd5b3fbfed366d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"920\" data-rawheight=\"433\" data-original-token=\"v2-445cb2bb8a670bfaa0fd5b3fbfed366d\" class=\"origin_image zh-lightbox-thumb\" width=\"920\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-445cb2bb8a670bfaa0fd5b3fbfed366d_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"BeXCH08v\"\u003E在Remove方法中，做了两件事，一个是从调用列表中移除绑定的委托，二是检测绑定的委托是否有效，删除所有过期的委托。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-c7915625c3a90bf26e4db56c2aa612a3_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"738\" data-rawheight=\"206\" data-original-token=\"v2-c7915625c3a90bf26e4db56c2aa612a3\" class=\"origin_image zh-lightbox-thumb\" width=\"738\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-c7915625c3a90bf26e4db56c2aa612a3_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-cc0550bcf89087b178ff15b62af3c901_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"119\" data-original-token=\"v2-cc0550bcf89087b178ff15b62af3c901\" class=\"origin_image zh-lightbox-thumb\" width=\"742\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-cc0550bcf89087b178ff15b62af3c901_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003ERemoveAll() 解绑\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"jx6aDlqv\"\u003ERemoveAll()可以解绑所有有效的函数绑定。\u003C\u002Fp\u003E\u003Cp data-pid=\"Q9e-ITlZ\"\u003EClear()可以移除调用列表中所有的函数绑定。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-e4626814273c8b46440fe0f8c666ece9_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"574\" data-original-token=\"v2-e4626814273c8b46440fe0f8c666ece9\" class=\"origin_image zh-lightbox-thumb\" width=\"916\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-e4626814273c8b46440fe0f8c666ece9_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003EBroadcast() 执行委托\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"YOrfYfcu\"\u003EBroadcast()函数，调用ExecFuntion方法执行委托，在宏定义中，会通过UHT生成DelegateName##_DelegateWrapper函数，最终会调用到父类TMulticastScriptDelegate类中的ProcessMulticastDelegate函数。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-622b329c492d9d8c66738574f455dd8d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"922\" data-rawheight=\"119\" data-original-token=\"v2-622b329c492d9d8c66738574f455dd8d\" class=\"origin_image zh-lightbox-thumb\" width=\"922\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-622b329c492d9d8c66738574f455dd8d_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"sARZNEBD\"\u003EExecFuntion方法，在宏定义中，对应DelegateName##_DelegateWrapper函数，而这个函数会通过UHT生成。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-b07067ba4ee900e4c17341360594fca3_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1363\" data-rawheight=\"37\" data-original-token=\"v2-b07067ba4ee900e4c17341360594fca3\" class=\"origin_image zh-lightbox-thumb\" width=\"1363\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-b07067ba4ee900e4c17341360594fca3_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"k1nlh9vM\"\u003EDelegateName##_DelegateWrapper函数\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-6451d8f046661655f96fa74ca5c3e467_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1318\" data-rawheight=\"139\" data-original-token=\"v2-6451d8f046661655f96fa74ca5c3e467\" class=\"origin_image zh-lightbox-thumb\" width=\"1318\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-6451d8f046661655f96fa74ca5c3e467_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"hW152blS\"\u003E在ProcessMulticastDelegate函数中，当调用列表数量大于0，首先，创建一个调用的拷贝，防止在Broadcast过程中，调用列表被改变。\u003C\u002Fp\u003E\u003Cp data-pid=\"SXNWsiuv\"\u003E然后，遍历拷贝的调用列表，如果函数是绑定在委托上是有效的，就会执行委托。否则，从调用列表中，移除无效的函数绑定。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-9bd288e8f1948eea010ab34c69ff4a82_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1307\" data-rawheight=\"774\" data-original-token=\"v2-9bd288e8f1948eea010ab34c69ff4a82\" class=\"origin_image zh-lightbox-thumb\" width=\"1307\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-9bd288e8f1948eea010ab34c69ff4a82_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"hhMydFd4\"\u003E最终调用到动态单播委托TScriptDelegate的ProcessDelegate方法，判断弱指针是否有效，如果有效，通过指向对象的弱指针，在对象中通过函数名找到对应的函数并执行。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-39099368bdb6be1895cb0b593fcf884d_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1108\" data-rawheight=\"637\" data-original-token=\"v2-39099368bdb6be1895cb0b593fcf884d\" class=\"origin_image zh-lightbox-thumb\" width=\"1108\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-39099368bdb6be1895cb0b593fcf884d_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003E测试代码\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"8GJFEPBO\"\u003E\u003Cb\u003E注意：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"6e5QCV-j\"\u003E\u003Cb\u003E动态绑定的函数，需要加标记UFUNCTION\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"B2Q52zVj\"\u003E\u003Cb\u003E只有动态多播可以被蓝图绑定，需要加标记UPROPERTY(BlueprintAssignable)\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"wPbSDH90\"\u003E\u003Cb\u003E在绑定时，需要判断是否已经绑定，避免重复绑定。使用IsAlreadyBound方法判断\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"pGVlxQHc\"\u003E绑定：AddDynamic方法\u003C\u002Fp\u003E\u003Cp data-pid=\"PHA0kyDe\"\u003E解绑：RemoveDynamic方法和RemoveAll两种删除方式\u003C\u002Fp\u003E\u003Cp data-pid=\"AHVpO6Pp\"\u003E执行：Broadcast方法\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-647e629a80717c1708d01c9bfa0d5928_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1043\" data-rawheight=\"104\" data-original-token=\"v2-647e629a80717c1708d01c9bfa0d5928\" class=\"origin_image zh-lightbox-thumb\" width=\"1043\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-647e629a80717c1708d01c9bfa0d5928_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch3\u003E\u003Cb\u003E蓝图中绑定动态多播\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"2JAivRbX\"\u003EBroadcast执行动态多播委托，也会触发到蓝图中的逻辑。\u003C\u002Fp\u003E\u003Cp data-pid=\"KpFmi6S6\"\u003E首先，绑定C++中定义的dynamicMulticastDelegate动态多播委托，然后，在蓝图中使用&#34;Add Custom Event&#34;，添加自定义事件，执行蓝图中的逻辑。\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-77783cbd9be8b10d3f6034c517fc86f8_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"835\" data-rawheight=\"505\" data-original-token=\"v2-77783cbd9be8b10d3f6034c517fc86f8\" class=\"origin_image zh-lightbox-thumb\" width=\"835\" data-original=\"https:\u002F\u002Fpica.zhimg.com\u002Fv2-77783cbd9be8b10d3f6034c517fc86f8_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"d2pmXdKt\"\u003EDynamicMulticastDelegateActor.h\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#pragma once\n\n#include &#34;CoreMinimal.h&#34;\n#include &#34;GameFramework\u002FActor.h&#34;\n#include &#34;DynamicMulticastDelegateActor.generated.h&#34;\n\nDECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FTestDynamicMulticastDelegate, int32, param);\n\nUCLASS()\nclass TOAA_API ADynamicMulticastDelegateActor : public AActor\n{\n\tGENERATED_BODY()\n\t\npublic:\t\n\t\u002F\u002F Sets default values for this actor&#39;s properties\n\tADynamicMulticastDelegateActor();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid TestDynamicMulticastDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid RemoveDynamicMulticastDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid RemoveAllDynamicMulticastDelegate();\n\n\tUFUNCTION(BlueprintCallable)\n\tvoid TestFunction(int32 param);\n\n\tUPROPERTY(BlueprintAssignable)\n\tFTestDynamicMulticastDelegate dynamicMulticastDelegate;\n\nprotected:\n\t\u002F\u002F Called when the game starts or when spawned\n\tvirtual void BeginPlay() override;\n\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"EI0q1a-n\"\u003EDynamicMulticastDelegateActor.cpp\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003E#include &#34;DynamicMulticastDelegateActor.h&#34;\n\n\u002F\u002F Sets default values\nADynamicMulticastDelegateActor::ADynamicMulticastDelegateActor()\n{\n \t\u002F\u002F Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don&#39;t need it.\n\tPrimaryActorTick.bCanEverTick = false;\n\n}\n\n\u002F\u002F Called when the game starts or when spawned\nvoid ADynamicMulticastDelegateActor::BeginPlay()\n{\n\tSuper::BeginPlay();\n\t\n}\n\nvoid ADynamicMulticastDelegateActor::TestDynamicMulticastDelegate()\n{\n\t\u002F\u002F 动态绑定的函数，TestFunction需要加标记UFUNCTION\n\tif (!dynamicMulticastDelegate.IsAlreadyBound(this, &amp;ADynamicMulticastDelegateActor::TestFunction))\n\t{\n\t\tdynamicMulticastDelegate.AddDynamic(this, &amp;ADynamicMulticastDelegateActor::TestFunction);\n\t}\n\t\n\tdynamicMulticastDelegate.Broadcast(10);\n}\n\nvoid ADynamicMulticastDelegateActor::RemoveDynamicMulticastDelegate()\n{\n\tdynamicMulticastDelegate.RemoveDynamic(this, &amp;ADynamicMulticastDelegateActor::TestFunction);\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ADynamicMulticastDelegateActor::RemoveDynamicMulticastDelegate&#34;));\n}\n\nvoid ADynamicMulticastDelegateActor::RemoveAllDynamicMulticastDelegate()\n{\n\tdynamicMulticastDelegate.RemoveAll(this);\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ADynamicMulticastDelegateActor::RemoveAllDynamicMulticastDelegate&#34;));\n}\n\nvoid ADynamicMulticastDelegateActor::TestFunction(int32 param)\n{\n\tUE_LOG(LogTemp, Log, TEXT(&#34;ADynamicMulticastDelegateActor::TestFunction : %d&#34;), param);\n}\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Ca data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_8c55c5c887764c92edba04c1a021dfdd\"\u003E\u003C\u002Fa\u003E\u003Cp\u003E\u003C\u002Fp\u003E","contentNeedTruncated":false,"forceLoginWhenClickReadMore":false,"adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F20585911","type":"topic","id":"20585911","name":"虚幻4引擎"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F20052447","type":"topic","id":"20052447","name":"虚幻 4（游戏引擎）"}],"voteupCount":64,"voting":0,"heavyUpStatus":"allow_heavy_up","column":{"description":"","canManage":false,"intro":"总结平时的学习笔记，包括Unreal基础及进阶知识","isFollowing":false,"urlToken":"c_1329804107125780480","id":"c_1329804107125780480","articlesCount":17,"acceptSubmission":false,"title":"Unreal入门精要","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1329804107125780480","commentPermission":"all","created":1609830005,"updated":1663831773,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f111d7ee1c41944859e975a712c0883b_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8.jpg?source=172ae18b","uid":"671672266975350784","userType":"people","isFollowing":false,"urlToken":"tencentboy","id":"8c55c5c887764c92edba04c1a021dfdd","description":"游戏开发工程师，参与开发《黎明觉醒》、《传奇世界》等手游。\n参与录制鹅厂《青少年职业启蒙》系列课程，帮助青少年建立更清晰的职业道路。","name":"足迹三万里","isAdvertiser":false,"headline":"","gender":1,"url":"\u002Fpeople\u002F8c55c5c887764c92edba04c1a021dfdd","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":3,"type":"column","columnType":"normal"},"commentCount":2,"contributions":[{"id":42961475,"state":"accepted","type":"first_publish","column":{"description":"","canManage":false,"intro":"总结平时的学习笔记，包括Unreal基础及进阶知识","isFollowing":false,"urlToken":"c_1329804107125780480","id":"c_1329804107125780480","articlesCount":17,"acceptSubmission":false,"title":"Unreal入门精要","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1329804107125780480","commentPermission":"all","created":1609830005,"updated":1663831773,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f111d7ee1c41944859e975a712c0883b_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8.jpg?source=172ae18b","uid":"671672266975350784","userType":"people","isFollowing":false,"urlToken":"tencentboy","id":"8c55c5c887764c92edba04c1a021dfdd","description":"游戏开发工程师，参与开发《黎明觉醒》、《传奇世界》等手游。\n参与录制鹅厂《青少年职业启蒙》系列课程，帮助青少年建立更清晰的职业道路。","name":"足迹三万里","isAdvertiser":false,"headline":"","gender":1,"url":"\u002Fpeople\u002F8c55c5c887764c92edba04c1a021dfdd","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":3,"type":"column","columnType":"normal"}},{"id":43228780,"state":"accepted","type":"first_publish","column":{"description":"UE表层知识的搬运工","canManage":false,"intro":"努力学习UE5的打开与关闭相关的操作","isFollowing":false,"urlToken":"UE4Dev","id":"UE4Dev","articlesCount":123,"acceptSubmission":true,"title":"UE5-FromZeroToHero","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002FUE4Dev","commentPermission":"all","created":1582181824,"updated":1685434183,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f111d7ee1c41944859e975a712c0883b_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-bccdaa64a4356b17389b314ce3d9d986.jpg?source=172ae18b","uid":"619981438804692992","userType":"people","isFollowing":false,"urlToken":"Smartuil.","id":"7ad562da3cb960267e75c5af469e3ac1","description":"VAR\u002FGame Developer\nWelcome to https:\u002F\u002Fgithub.com\u002FSmartuil","name":"Smartuil","isAdvertiser":false,"headline":"一个妄想集GamePlay、渲染、引擎技能于一身的UE程序员","gender":1,"url":"\u002Fpeople\u002F7ad562da3cb960267e75c5af469e3ac1","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-bccdaa64a4356b17389b314ce3d9d986_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":92,"type":"column","columnType":"normal"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":false,"tipjarorsCount":0,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"favlistsCount":144,"isNormal":true,"status":0,"activityToppingInfo":{"state":"untopped"},"shareText":"UE4中的委托及实现原理 - 来自知乎专栏「Unreal入门精要」，作者: 足迹三万里 https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F575671003 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":7,"hasColumn":true,"republishers":[{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-bccdaa64a4356b17389b314ce3d9d986.jpg?source=172ae18b","uid":"619981438804692992","userType":"people","isFollowing":false,"urlToken":"Smartuil.","id":"7ad562da3cb960267e75c5af469e3ac1","description":"VAR\u002FGame Developer\nWelcome to https:\u002F\u002Fgithub.com\u002FSmartuil","name":"Smartuil","isAdvertiser":false,"headline":"一个妄想集GamePlay、渲染、引擎技能于一身的UE程序员","gender":1,"url":"\u002Fpeople\u002F7ad562da3cb960267e75c5af469e3ac1","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-bccdaa64a4356b17389b314ce3d9d986_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}}],"isNewLinkCard":true,"emojiReaction":{"likeCount":7,"likeHasSet":false},"abParam":{"qaFotoolbar":"0","qaHiddenVoteup":"","qaNewdownvote":"1","rsInterest1":"","zpZhiStyle":""},"attachedInfo":"kgIkCgkyMTYwNTk2MTUSCTU3NTY3MTAwMxgHIgpJTUFHRV9URVhU","shareGuide":{"hasPositiveBubble":false,"hasTimeBubble":false,"hitShareGuideCluster":false},"settings":{"tableOfContents":{"enabled":true}},"canReference":false,"reactionInstruction":{"rEACTIONCONTENTSEGMENTLIKE":"HIDE"},"reaction":{"statistics":{"upVoteCount":64,"downVoteCount":0,"likeCount":7,"commentCount":2,"shareCount":0,"playCount":0,"interestPlayCount":0,"favorites":144,"pvCount":0,"bulletCount":0,"applaudCount":0,"questionFollowerCount":0,"questionAnswerCount":0,"plaincontentVoteUpCount":0,"plaincontentLikeCount":0,"imgLikeCount":{"v2028cdc9448ad2986935f905b562271ee":0,"v208fe6d75d1b148f44cbe94f75deeb718":0,"v210b9e52959927e0b0955f294013caec9":0,"v2132c31963d4ac4ee1dce1fa616ae4fa3":0,"v215466f87af5c7caabd9c0e075523b682":0,"v2172fda021bf47b2d5ed8f5ab33a0d6ee":0,"v21c7b7a36f037ba1be6997d88b96268ee":0,"v21d9369b7edb4a6d9e46610cfab6c86d9":0,"v21dcd94058d07dedd5b59366f454992a9":0,"v22931641ac1cbf391260965b774e83d6b":0,"v22b9c2df4dcce3b0252f189e212801b77":0,"v22c14e4cb648553f3d8c3d2acb69f60fe":0,"v22c583df49d5d2000814edfe650de5f75":0,"v22fd7ecb1567b4ab6f94041474904e2d2":3,"v230b974fd9e61352084eede7c1f2c060c":0,"v234aeb358ca1afd865991df09fd711bcb":0,"v239099368bdb6be1895cb0b593fcf884d":0,"v239de4a0145721573344e437c82ae9963":0,"v2401d599b9c5a6b7a455e76b9a592f6c1":0,"v2445cb2bb8a670bfaa0fd5b3fbfed366d":0,"v24ae2d0ac20a1d7a3599cbb7ef2c682f7":0,"v24e09cdbc16e0bf453c7804f40bf5be1f":0,"v25343b6a37b537dce775038071f934920":0,"v257e23a24525eb85cb025485b47d0c6d9":0,"v259717b05403756ac9422cad410b15cb1":0,"v25f4df63f8e70aa39fa97836001d4aa0c":0,"v2622b329c492d9d8c66738574f455dd8d":0,"v26451d8f046661655f96fa74ca5c3e467":0,"v2647e629a80717c1708d01c9bfa0d5928":0,"v2654a36fe11d9e12de7df61b678b8e8e6":0,"v26a2a16a85d142879f7694f13ebaadbe1":0,"v274ee91d6787582dc9ff5bbb8136b3bf0":0,"v277783cbd9be8b10d3f6034c517fc86f8":0,"v284d44e1fa0671ce45cce523376a756b2":0,"v28524a55993dc652f1df36d65d56444b7":0,"v286e79fd183ce4bf6af267032da5829da":0,"v28aaf9e99ed8cddcfaa517f0ec46954dc":0,"v28b558a87f0e59ca091ab307e97a9bf85":0,"v28c09300b9dae9a32df76f8d167c8d84f":0,"v28e883a766545ad190ad2e3d8d33bdbbe":0,"v294c4974d484c04245e5264a6bcfcaabe":0,"v2977ffbcc83544d6aba605b2b4d1064c6":0,"v29bd288e8f1948eea010ab34c69ff4a82":0,"v2A002cd275e32fc0e24adfa18a359c220":0,"v2A147cd0bd2a7189d317242b610e102d8":0,"v2A16f36f20ca387abda7a6e73815d761d":0,"v2A9af844363eb3011980c479c306cf3ab":0,"v2Abbf3aabe1fa908b5758001aca6ff4ec":0,"v2Acab75a8fc2272717e693a95af1e7805":0,"v2Acbe98aec89d190eed45f7aa977d9166":0,"v2B07067ba4ee900e4c17341360594fca3":0,"v2B0f702eb60d295d3d25617a56dc8598b":0,"v2Bc67219664b7b54f43f66767d889e3dc":0,"v2C24166f319c43bed9e773a6be0416096":0,"v2C67e471344d207c6db8069c7f644a399":0,"v2C7915625c3a90bf26e4db56c2aa612a3":0,"v2C96ae1aedb87798480ef27b77dbb92e5":0,"v2Cc0550bcf89087b178ff15b62af3c901":0,"v2Cfa39b10fc2dc8ebf436e82eb7cb186d":0,"v2D771476e85a6e5e77633619da6ebbf6f":0,"v2Dac8d66da17fec9a8bf25b5faede4c83":0,"v2Dc4ac2fb981d948a7c84c79dd0b21e8d":0,"v2E0d44dbd0dccdf20957f1a8377eea009":0,"v2E3b3c2f2901736346a050bcfca3f5c3e":0,"v2E4626814273c8b46440fe0f8c666ece9":0,"v2Edab8aefa8bd5ec36637dd5231723f5c":0,"v2Ee0ab6def2c2913b13f834ffad2c2c2b":0,"v2Ee23cc601e5a4f81593a3d78d176643c":0,"v2F5a5f958673f73542d6b1c85ef7a45f6":0,"v2F6ad67254ba418bc46987aa8908e6b84":0}},"relation":{"isAuthor":false,"vote":"Neutral","liked":false,"imgLiked":{"v2028cdc9448ad2986935f905b562271ee":false,"v208fe6d75d1b148f44cbe94f75deeb718":false,"v210b9e52959927e0b0955f294013caec9":false,"v2132c31963d4ac4ee1dce1fa616ae4fa3":false,"v215466f87af5c7caabd9c0e075523b682":false,"v2172fda021bf47b2d5ed8f5ab33a0d6ee":false,"v21c7b7a36f037ba1be6997d88b96268ee":false,"v21d9369b7edb4a6d9e46610cfab6c86d9":false,"v21dcd94058d07dedd5b59366f454992a9":false,"v22931641ac1cbf391260965b774e83d6b":false,"v22b9c2df4dcce3b0252f189e212801b77":false,"v22c14e4cb648553f3d8c3d2acb69f60fe":false,"v22c583df49d5d2000814edfe650de5f75":false,"v22fd7ecb1567b4ab6f94041474904e2d2":false,"v230b974fd9e61352084eede7c1f2c060c":false,"v234aeb358ca1afd865991df09fd711bcb":false,"v239099368bdb6be1895cb0b593fcf884d":false,"v239de4a0145721573344e437c82ae9963":false,"v2401d599b9c5a6b7a455e76b9a592f6c1":false,"v2445cb2bb8a670bfaa0fd5b3fbfed366d":false,"v24ae2d0ac20a1d7a3599cbb7ef2c682f7":false,"v24e09cdbc16e0bf453c7804f40bf5be1f":false,"v25343b6a37b537dce775038071f934920":false,"v257e23a24525eb85cb025485b47d0c6d9":false,"v259717b05403756ac9422cad410b15cb1":false,"v25f4df63f8e70aa39fa97836001d4aa0c":false,"v2622b329c492d9d8c66738574f455dd8d":false,"v26451d8f046661655f96fa74ca5c3e467":false,"v2647e629a80717c1708d01c9bfa0d5928":false,"v2654a36fe11d9e12de7df61b678b8e8e6":false,"v26a2a16a85d142879f7694f13ebaadbe1":false,"v274ee91d6787582dc9ff5bbb8136b3bf0":false,"v277783cbd9be8b10d3f6034c517fc86f8":false,"v284d44e1fa0671ce45cce523376a756b2":false,"v28524a55993dc652f1df36d65d56444b7":false,"v286e79fd183ce4bf6af267032da5829da":false,"v28aaf9e99ed8cddcfaa517f0ec46954dc":false,"v28b558a87f0e59ca091ab307e97a9bf85":false,"v28c09300b9dae9a32df76f8d167c8d84f":false,"v28e883a766545ad190ad2e3d8d33bdbbe":false,"v294c4974d484c04245e5264a6bcfcaabe":false,"v2977ffbcc83544d6aba605b2b4d1064c6":false,"v29bd288e8f1948eea010ab34c69ff4a82":false,"v2A002cd275e32fc0e24adfa18a359c220":false,"v2A147cd0bd2a7189d317242b610e102d8":false,"v2A16f36f20ca387abda7a6e73815d761d":false,"v2A9af844363eb3011980c479c306cf3ab":false,"v2Abbf3aabe1fa908b5758001aca6ff4ec":false,"v2Acab75a8fc2272717e693a95af1e7805":false,"v2Acbe98aec89d190eed45f7aa977d9166":false,"v2B07067ba4ee900e4c17341360594fca3":false,"v2B0f702eb60d295d3d25617a56dc8598b":false,"v2Bc67219664b7b54f43f66767d889e3dc":false,"v2C24166f319c43bed9e773a6be0416096":false,"v2C67e471344d207c6db8069c7f644a399":false,"v2C7915625c3a90bf26e4db56c2aa612a3":false,"v2C96ae1aedb87798480ef27b77dbb92e5":false,"v2Cc0550bcf89087b178ff15b62af3c901":false,"v2Cfa39b10fc2dc8ebf436e82eb7cb186d":false,"v2D771476e85a6e5e77633619da6ebbf6f":false,"v2Dac8d66da17fec9a8bf25b5faede4c83":false,"v2Dc4ac2fb981d948a7c84c79dd0b21e8d":false,"v2E0d44dbd0dccdf20957f1a8377eea009":false,"v2E3b3c2f2901736346a050bcfca3f5c3e":false,"v2E4626814273c8b46440fe0f8c666ece9":false,"v2Edab8aefa8bd5ec36637dd5231723f5c":false,"v2Ee0ab6def2c2913b13f834ffad2c2c2b":false,"v2Ee23cc601e5a4f81593a3d78d176643c":false,"v2F5a5f958673f73542d6b1c85ef7a45f6":false,"v2F6ad67254ba418bc46987aa8908e6b84":false},"faved":false,"following":false},"imageReactions":{"v2028cdc9448ad2986935f905b562271ee":{"likeCount":0,"isLiked":false},"v208fe6d75d1b148f44cbe94f75deeb718":{"likeCount":0,"isLiked":false},"v210b9e52959927e0b0955f294013caec9":{"likeCount":0,"isLiked":false},"v2132c31963d4ac4ee1dce1fa616ae4fa3":{"likeCount":0,"isLiked":false},"v215466f87af5c7caabd9c0e075523b682":{"likeCount":0,"isLiked":false},"v2172fda021bf47b2d5ed8f5ab33a0d6ee":{"likeCount":0,"isLiked":false},"v21c7b7a36f037ba1be6997d88b96268ee":{"likeCount":0,"isLiked":false},"v21d9369b7edb4a6d9e46610cfab6c86d9":{"likeCount":0,"isLiked":false},"v21dcd94058d07dedd5b59366f454992a9":{"likeCount":0,"isLiked":false},"v22931641ac1cbf391260965b774e83d6b":{"likeCount":0,"isLiked":false},"v22b9c2df4dcce3b0252f189e212801b77":{"likeCount":0,"isLiked":false},"v22c14e4cb648553f3d8c3d2acb69f60fe":{"likeCount":0,"isLiked":false},"v22c583df49d5d2000814edfe650de5f75":{"likeCount":0,"isLiked":false},"v22fd7ecb1567b4ab6f94041474904e2d2":{"likeCount":3,"isLiked":false},"v230b974fd9e61352084eede7c1f2c060c":{"likeCount":0,"isLiked":false},"v234aeb358ca1afd865991df09fd711bcb":{"likeCount":0,"isLiked":false},"v239099368bdb6be1895cb0b593fcf884d":{"likeCount":0,"isLiked":false},"v239de4a0145721573344e437c82ae9963":{"likeCount":0,"isLiked":false},"v2401d599b9c5a6b7a455e76b9a592f6c1":{"likeCount":0,"isLiked":false},"v2445cb2bb8a670bfaa0fd5b3fbfed366d":{"likeCount":0,"isLiked":false},"v24ae2d0ac20a1d7a3599cbb7ef2c682f7":{"likeCount":0,"isLiked":false},"v24e09cdbc16e0bf453c7804f40bf5be1f":{"likeCount":0,"isLiked":false},"v25343b6a37b537dce775038071f934920":{"likeCount":0,"isLiked":false},"v257e23a24525eb85cb025485b47d0c6d9":{"likeCount":0,"isLiked":false},"v259717b05403756ac9422cad410b15cb1":{"likeCount":0,"isLiked":false},"v25f4df63f8e70aa39fa97836001d4aa0c":{"likeCount":0,"isLiked":false},"v2622b329c492d9d8c66738574f455dd8d":{"likeCount":0,"isLiked":false},"v26451d8f046661655f96fa74ca5c3e467":{"likeCount":0,"isLiked":false},"v2647e629a80717c1708d01c9bfa0d5928":{"likeCount":0,"isLiked":false},"v2654a36fe11d9e12de7df61b678b8e8e6":{"likeCount":0,"isLiked":false},"v26a2a16a85d142879f7694f13ebaadbe1":{"likeCount":0,"isLiked":false},"v274ee91d6787582dc9ff5bbb8136b3bf0":{"likeCount":0,"isLiked":false},"v277783cbd9be8b10d3f6034c517fc86f8":{"likeCount":0,"isLiked":false},"v284d44e1fa0671ce45cce523376a756b2":{"likeCount":0,"isLiked":false},"v28524a55993dc652f1df36d65d56444b7":{"likeCount":0,"isLiked":false},"v286e79fd183ce4bf6af267032da5829da":{"likeCount":0,"isLiked":false},"v28aaf9e99ed8cddcfaa517f0ec46954dc":{"likeCount":0,"isLiked":false},"v28b558a87f0e59ca091ab307e97a9bf85":{"likeCount":0,"isLiked":false},"v28c09300b9dae9a32df76f8d167c8d84f":{"likeCount":0,"isLiked":false},"v28e883a766545ad190ad2e3d8d33bdbbe":{"likeCount":0,"isLiked":false},"v294c4974d484c04245e5264a6bcfcaabe":{"likeCount":0,"isLiked":false},"v2977ffbcc83544d6aba605b2b4d1064c6":{"likeCount":0,"isLiked":false},"v29bd288e8f1948eea010ab34c69ff4a82":{"likeCount":0,"isLiked":false},"v2A002cd275e32fc0e24adfa18a359c220":{"likeCount":0,"isLiked":false},"v2A147cd0bd2a7189d317242b610e102d8":{"likeCount":0,"isLiked":false},"v2A16f36f20ca387abda7a6e73815d761d":{"likeCount":0,"isLiked":false},"v2A9af844363eb3011980c479c306cf3ab":{"likeCount":0,"isLiked":false},"v2Abbf3aabe1fa908b5758001aca6ff4ec":{"likeCount":0,"isLiked":false},"v2Acab75a8fc2272717e693a95af1e7805":{"likeCount":0,"isLiked":false},"v2Acbe98aec89d190eed45f7aa977d9166":{"likeCount":0,"isLiked":false},"v2B07067ba4ee900e4c17341360594fca3":{"likeCount":0,"isLiked":false},"v2B0f702eb60d295d3d25617a56dc8598b":{"likeCount":0,"isLiked":false},"v2Bc67219664b7b54f43f66767d889e3dc":{"likeCount":0,"isLiked":false},"v2C24166f319c43bed9e773a6be0416096":{"likeCount":0,"isLiked":false},"v2C67e471344d207c6db8069c7f644a399":{"likeCount":0,"isLiked":false},"v2C7915625c3a90bf26e4db56c2aa612a3":{"likeCount":0,"isLiked":false},"v2C96ae1aedb87798480ef27b77dbb92e5":{"likeCount":0,"isLiked":false},"v2Cc0550bcf89087b178ff15b62af3c901":{"likeCount":0,"isLiked":false},"v2Cfa39b10fc2dc8ebf436e82eb7cb186d":{"likeCount":0,"isLiked":false},"v2D771476e85a6e5e77633619da6ebbf6f":{"likeCount":0,"isLiked":false},"v2Dac8d66da17fec9a8bf25b5faede4c83":{"likeCount":0,"isLiked":false},"v2Dc4ac2fb981d948a7c84c79dd0b21e8d":{"likeCount":0,"isLiked":false},"v2E0d44dbd0dccdf20957f1a8377eea009":{"likeCount":0,"isLiked":false},"v2E3b3c2f2901736346a050bcfca3f5c3e":{"likeCount":0,"isLiked":false},"v2E4626814273c8b46440fe0f8c666ece9":{"likeCount":0,"isLiked":false},"v2Edab8aefa8bd5ec36637dd5231723f5c":{"likeCount":0,"isLiked":false},"v2Ee0ab6def2c2913b13f834ffad2c2c2b":{"likeCount":0,"isLiked":false},"v2Ee23cc601e5a4f81593a3d78d176643c":{"likeCount":0,"isLiked":false},"v2F5a5f958673f73542d6b1c85ef7a45f6":{"likeCount":0,"isLiked":false},"v2F6ad67254ba418bc46987aa8908e6b84":{"likeCount":0,"isLiked":false}}},"interactionBarPlugins":[{"type":"comment","comment":{"enable":true,"placeholder":"发条带图评论"}}],"barPluginsFlipTime":3000,"podcastAudioEnter":{"text":"听内容","textColor":"MapBrand","textSize":13,"actionUrl":"zhihu:\u002F\u002Fpodcast\u002Faudio_player\u002F0?contentId=575671003&contentType=article"}}},"columns":{"c_1329804107125780480":{"description":"","canManage":false,"intro":"总结平时的学习笔记，包括Unreal基础及进阶知识","isFollowing":false,"urlToken":"c_1329804107125780480","id":"c_1329804107125780480","articlesCount":17,"acceptSubmission":false,"title":"Unreal入门精要","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_1329804107125780480","commentPermission":"all","created":1609830005,"updated":1663831773,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f111d7ee1c41944859e975a712c0883b_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8.jpg?source=172ae18b","uid":"671672266975350784","userType":"people","isFollowing":false,"urlToken":"tencentboy","id":"8c55c5c887764c92edba04c1a021dfdd","description":"游戏开发工程师，参与开发《黎明觉醒》、《传奇世界》等手游。\n参与录制鹅厂《青少年职业启蒙》系列课程，帮助青少年建立更清晰的职业道路。","name":"足迹三万里","isAdvertiser":false,"headline":"","gender":1,"url":"\u002Fpeople\u002F8c55c5c887764c92edba04c1a021dfdd","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-2772001ae921f61e44f78917374905d8_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":3,"type":"column","columnType":"normal"},"UE4Dev":{"description":"UE表层知识的搬运工","canManage":false,"intro":"努力学习UE5的打开与关闭相关的操作","isFollowing":false,"urlToken":"UE4Dev","id":"UE4Dev","articlesCount":123,"acceptSubmission":true,"title":"UE5-FromZeroToHero","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002FUE4Dev","commentPermission":"all","created":1582181824,"updated":1685434183,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-f111d7ee1c41944859e975a712c0883b_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-bccdaa64a4356b17389b314ce3d9d986.jpg?source=172ae18b","uid":"619981438804692992","userType":"people","isFollowing":false,"urlToken":"Smartuil.","id":"7ad562da3cb960267e75c5af469e3ac1","description":"VAR\u002FGame Developer\nWelcome to https:\u002F\u002Fgithub.com\u002FSmartuil","name":"Smartuil","isAdvertiser":false,"headline":"一个妄想集GamePlay、渲染、引擎技能于一身的UE程序员","gender":1,"url":"\u002Fpeople\u002F7ad562da3cb960267e75c5af469e3ac1","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-bccdaa64a4356b17389b314ce3d9d986_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":92,"type":"column","columnType":"normal"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"zvideos":{},"eduCourses":{}},"currentUser":"ffde95bc6a24b298d237f46e35a3eb71","account":{"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false},"cardUserInfo":{"vipInfo":{}},"handleWidget":{},"widgetList":[],"userWidgetId":""},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{},"infinity":{},"batchUsers":{},"profileInfinity":null},"env":{"abV2":{"config":{"paramMap":{"ws_zhishiku":{"value":"1","abId":"rl-zhishiku1-1"},"ws_hot_activate":{"value":"0","abId":"hot_activate-0"},"ws_pop_activate":{"value":"1","abId":"pop_activate-1"},"pc_mou_cre_remove":{"value":"1","abId":"rl-mou_create_remove-1"},"ws_new_call":{"value":"1","abId":"rl-mobileweb_call-1"}},"abMap":{"rl-zhishiku1-1":{"abId":"rl-zhishiku1-1","layerId":"rl-zhishiku1","diversionType":2},"hot_activate-0":{"abId":"hot_activate-0","layerId":"web_standard_domain_layer8"},"pop_activate-1":{"abId":"pop_activate-1","layerId":"pop_activate_layer"},"rl-mou_create_remove-1":{"abId":"rl-mou_create_remove-1","layerId":"rl-mou_create_remove","diversionType":2},"rl-mobileweb_call-1":{"abId":"rl-mobileweb_call-1","layerId":"rl-mobileweb_call"}}},"triggers":{}},"userAgent":{"Edge":false,"IE":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"HarmonyOS":false,"iOS":false,"isAppleDevice":false,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Quark":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"WxMiniProgram":false,"BaiduMiniProgram":false,"QQMiniProgram":false,"JDMiniProgram":false,"isWebView":false,"isMiniProgram":false,"origin":"Mozilla\u002F5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko\u002F20100101 Firefox\u002F136.0"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F575671003","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F575671003","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"oppoSearch":false,"baiduSearch":false,"googleSearch":false,"shenma":false,"miniProgram":false,"xiaomi":false,"huaweiSearch":false},"theme":"light","appHeaderTheme":{"current":"normal","disable":true,"normal":{"bgColor":"GBK99A"},"custom":{"bgColor":"GBK99A"}},"enableShortcut":true,"referer":"","xUDId":"AYDYfc1uQxiPTrrDN2Oi3_z1TueANaNaDu4=","mode":"ssr","conf":{},"xTrafficFreeOrigin":"","ipInfo":{"cityName":"武汉","countryName":"中国","regionName":"湖北","countryCode":"CN"},"logged":true,"query":{},"vars":{"passThroughHeaders":{}}},"me":{"columnContributions":[]},"label":{},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0}},"recommend":{"recommendTimes":{}}},"explore":{},"levelUpperLimit":10,"mcn":{},"mcnManage":{},"tasks":{},"announcement":{},"creatorsRecommendInfo":{}},"creators":{"common":{"applyStatus":{},"rightsStatus":{}},"bayesDomains":{"status":{},"options":{"topDomains":null,"allDomains":null,"editable":0},"contents":null},"school":{"tabs":[],"contents":[],"banner":null,"entities":{}},"faq":{"tabs":[],"article":{}},"knowledgeIncome":{},"safeguardRights":{},"analytics":{"all":{},"answer":{},"zvideo":{},"article":{},"pin":{},"singleContent":{}},"account":{"growthLevel":{}},"KMResource":{},"training":{},"ToolsQuestion":{"goodatTopics":[]},"ToolsHotspot":{"domains":[]},"ToolsRecommend":{},"ToolsCustomPromotion":{"itemLists":{},"baseInfo":{}},"ToolsSearchQuestion":{},"editorSetting":{},"MCNManage":{},"knowledgeTasks":{},"incomeAnalysis":{"income":{"aggregation":{}}},"creationManage":{"editModal":{"status":false}},"activity":{},"announcement":{},"home":{"currentCreatorUrlToken":null,"rights":[],"newRights":[],"scoreInfo":{},"menusShowControlByServer":{"bVipRecomend":false,"creationRelationship":false},"newTasks":{"creatorTask":{"tasks":[],"des":[]}},"bannerList":[],"recentlyCreated":[],"homecard":{},"homeData":{}},"videoSupport":{"textBenefit":{}},"videoDistribution":{},"profilePoster":{"creatorPosterConfig":{},"creatorPosterData":{}}},"answers":{"voters":{},"upvoters":{},"copyrightApplicants":{},"favlists":{},"newAnswer":{},"entityWords":{},"paidContent":{},"settings":{},"relationEndorsement":{},"growthCardOrder":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{},"upvoters":{},"relationEndorsement":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotList":[],"hotListHeadZone":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]},"hotDaily":{"data":[],"paging":{}},"hotHighlight":{"isFetching":false,"isDrained":false,"data":[],"paging":{}},"banner":{},"commercialBanner":{"show":false,"banner":{},"trackData":{}},"video":{"items":[],"next":null,"isLoading":false,"isDrained":false}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"c_1329804107125780480","UE4Dev"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[]},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":null,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"userProfit":{"permission":{"permissionStatus":{"zhiZixuan":0,"recommend":-1,"task":0,"plugin":0,"infinity":0},"visible":false},"linkCardLimit":0},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{},"banners":{},"protocolStatus":{"isAgreedNew":true,"isAgreedOld":true},"probationCountdownDays":0},"zvideos":{"campaignVideoList":{},"campaigns":{},"tagoreCategory":[],"recommendations":{},"insertable":{},"recruit":{"form":{"platform":"","nickname":"","followerCount":"","domain":"","contact":""},"submited":false,"ranking":[]},"qyActivityData":{},"talkActivityData":{},"party2022ActivityData":{},"batchVideos":{},"creationReferences":{},"zvideoCollection":{},"zvideoGrant":{},"collectData":{"isFetching":false,"list":[]},"videoSource":{"isLoaded":false},"paidColumnInfo":{}},"republish":{},"commentPermission":{},"creatorRightStatus":{"list":[]},"adPromotion":{"answer":{},"article":{}},"paidColumn":{"entities":{}},"followingColumns":{},"hotSpot":{},"contentColumnCard":{}},"fetchHost":"www.zhihu.com","subAppName":"column","spanName":"Post","canaryConfig":{"test_canary":"0","use_new_player":"0","player_vendor":"0","use_hevc":"1","upload_use_signature":"1","use_backdrop_blur":"1","article_title_imagex":"1","play_station":"1","use_cached_supported_countries":"1"}}</script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/vendor.4d4559ddd761145da535.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/react.production.min.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom.production.min.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom-server.browser.production.min.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/runtime.app.e1d429630add27dd6fae.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/lib-75fc9c18.app.3db651c252e14ef6658e.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/lib-79b5cf47.app.8b6b6bf4b6d894db9b07.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/lib-330004dc.app.7437cf54ac28fca0e302.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/lib-f3572862.app.8969770b2dc397a36b09.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/lib-0e5ce61e.app.ac8d5b7f48acd8aa0e32.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/lib-38cf5c11.app.a633ac4be38d02534172.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/7246.app.89391a117444c1b30991.js"></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/column.app.693c7dd1ee47f20ed7b3.js"></script><script defer="defer" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/aria.js" id="ariascripts" wapforceoldfixed="false" loaddata="false"></script><script src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/hm.js" async=""></script><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/zap.js"></script><div><div style="display: none;"><i>想来知乎工作？请发送邮件到 jobs@zhihu.com</i></div></div><script src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/push.js"></script><div><div><div class="css-8pdeid"></div></div></div><script crossorigin="" src="UE4%E4%B8%AD%E7%9A%84%E5%A7%94%E6%89%98%E5%8F%8A%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%20-%20%E7%9F%A5%E4%B9%8E_files/emoticon.js"></script><div><div><div style="left: -1179px; top: -999px;" class="Editable-languageSuggestions"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete7-0" id="Popover6-toggle" aria-haspopup="true" class="Input" placeholder="选择语言"><svg width="24" height="24" viewBox="0 0 24 24" fill="#afbdcf" class="Zi Zi--Select"><path fill-rule="evenodd" d="M12.53 3.47a.75.75 0 0 0-1.06 0l-5 5a.75.75 0 0 0 1.06 1.06L12 5.06l4.47 4.47a.75.75 0 1 0 1.06-1.06l-5-5Zm-5 11a.75.75 0 0 0-1.06 1.06l5 5a.75.75 0 0 0 1.06 0l5-5a.75.75 0 1 0-1.06-1.06L12 18.94l-4.47-4.47Z" clip-rule="evenodd"></path></svg></label></div></div></div></div></div></body></html>