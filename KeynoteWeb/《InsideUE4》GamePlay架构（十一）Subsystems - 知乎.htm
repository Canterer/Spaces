<!DOCTYPE html>
<html lang="zh" class="itcauecng" data-theme="light" data-rh="data-theme"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style class="ariareader ariareader--user-agent" media="screen" id="ariaab4luupvjdc" data-for="result" isaria="true">.ariafocus{outline:none;}body.useOldFixed [aria-fixedOldHidden=true],.ariaHide{display:none !important;}:focus{outline:none !important;}</style><meta charset="utf-8"><title>《InsideUE4》GamePlay架构（十一）Subsystems - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"><meta name="renderer" content="webkit"><meta name="force-rendering" content="webkit"><meta http-equiv="X-UA-Compatible" content="IE=10,chrome=1"><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"><meta data-rh="true" name="keywords" content="虚幻引擎,游戏引擎,游戏开发"><meta data-rh="true" name="description" content="大家好，我厚着脸皮又回来了引言非常惭愧，自从我更新完GamePlay架构十篇之后，我就断更了许久。如今说再多缘由也是借口，借着假期，在家继续重操旧业，继续写写技术文章。 UE在4.22版本的时候，开始引入Subsystem…"><meta data-rh="true" property="og:title" content="《InsideUE4》GamePlay架构（十一）Subsystems"><meta data-rh="true" property="og:url" content="https://zhuanlan.zhihu.com/p/158717151"><meta data-rh="true" property="og:description" content="大家好，我厚着脸皮又回来了引言非常惭愧，自从我更新完GamePlay架构十篇之后，我就断更了许久。如今说再多缘由也是借口，借着假期，在家继续重操旧业，继续写写技术文章。 UE在4.22版本的时候，开始引入Subsystem…"><meta data-rh="true" property="og:image" content="https://picx.zhimg.com/v2-7825335e062ee2125ea8c28efed80c9d_720w.jpg?source=172ae18b"><meta data-rh="true" property="og:type" content="article"><meta data-rh="true" property="og:site_name" content="知乎专栏"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.81060cab.png" sizes="152x152"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.d5793cac.png" sizes="120x120"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.7abf3393.png" sizes="76x76"><link data-rh="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.362a8eac.png" sizes="60x60"><link crossorigin="" rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/heifetz/favicon.ico"><link crossorigin="" rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/heifetz/search.xml" title="知乎"><link rel="dns-prefetch" href="https://static.zhimg.com/"><link rel="dns-prefetch" href="https://pica.zhimg.com/"><link rel="dns-prefetch" href="https://picx.zhimg.com/"><link rel="dns-prefetch" href="https://pic1.zhimg.com/"><link rel="dns-prefetch" href="https://pic2.zhimg.com/"><link rel="dns-prefetch" href="https://pic3.zhimg.com/"><link rel="dns-prefetch" href="https://pic4.zhimg.com/"><link rel="dns-prefetch" href="https://static.zhihu.com/"><style data-emotion-css="9mvwt1">:root{--zhc-padding-horizontal:20px;--zhc-padding-vertical:16px;--zhc-notification-top:75px;--app-padding:16px;--app-header-height:52px;--app-max-width:640px;--app-width:1000px;--app-font-size:15px;}</style><script nonce="" data-web-reporter-config="{&quot;platform&quot;:&quot;web&quot;,&quot;project&quot;:&quot;heifetz&quot;}">!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).webReporter={})}(this,function(e){"use strict";var t={},n=!1,o=function(){var e,o,r,a,i;return n||(e=document.querySelector("script[data-web-reporter-config]"),o=e&&e.dataset.webReporterConfig||"{}",r=JSON.parse(o),a=r.platform,i=r.project,t={platform:a,project:i},n=!0),t};function r(e){return a(function(){return localStorage.getItem(e)})()}function a(e){return function(){try{return e.apply(void 0,arguments)}catch(e){}}}var i=a(function(e,t){var n={platform:"web",project:o().project,clientTimestamp:+new Date};!function(e,t,n){"1"===r("weber:logenabled")&&console.log("[web-reporter]%o",{type:e,base:t,data:n})}(e,n,t),function(e,t){var n=btoa(JSON.stringify(t));if("undefined"!=typeof Blob&&window.navigator&&window.navigator.sendBeacon){var o=new Blob([n],{type:"text/plain"});navigator.sendBeacon(e,o)}else{var r=new XMLHttpRequest;r.open("POST",e),r.withCredentials=!1,r.setRequestHeader("Content-Type","text/plain;charset=UTF-8"),r.send(n)}}(r("weber:api")||"https://apm.zhihu.com/collector/web_json",{type:e,base:n,data:t})});e.report=i,Object.defineProperty(e,"__esModule",{value:!0})});
</script><link href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/7941.216a26f4.e07b5501c9707bef3df0.css" crossorigin="" rel="stylesheet"><link href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/column.216a26f4.65f86926949e6790f684.css" crossorigin="" rel="stylesheet"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/user-hover-card.216a26f4.abd617b43cb1ecfc3d93.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/GoodsRecommendGoodsCardList.216a26f4.d95ce79191cdf8d7ac28.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/report_modals.216a26f4.06f4ff608e9af861b520.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/9625.216a26f4.fab316e5d80ef71e9e23.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/ECommerceAd.216a26f4.cdbc0ed858e691df0a59.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/1468.216a26f4.101bb14a2c1d8d20b744.css" crossorigin="anonymous"><link rel="stylesheet" type="text/css" href="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/EditableV2.216a26f4.d180f7d6ef8bb7bb7c87.css" crossorigin="anonymous"><script nonce="">!function(){"use strict";!function(e,n){var r=[];function t(e){return function(){r.push([e,arguments])}}n.Raven={captureException:t("captureException"),captureMessage:t("captureMessage"),captureBreadcrumb:t("captureBreadcrumb")};var a,o,c,i,s,u="undefined"!=typeof DOMError;function d(e){var n=e instanceof Error||e instanceof ErrorEvent||u&&e instanceof DOMError||e instanceof DOMException;Raven.captureException(n?e:new Error(e.message||e.reason))}n.addEventListener("unhandledrejection",d),n.addEventListener("error",d,!0),a=e.src,o=e,c=function(){r.forEach(function(e){var n;(n=Raven)[e[0]].apply(n,e[1])}),n.removeEventListener("unhandledrejection",d),n.removeEventListener("error",d,!0)},i=document.head||document.getElementsByTagName("head")[0],(s=document.createElement("script")).crossOrigin=o.crossOrigin,s.dataset.sentryConfig=o["data-sentry-config"],s.onload=c,s.src=a,i.appendChild(s)}({"defer":true,"crossOrigin":"anonymous","src":"https://unpkg.zhimg.com/@cfe/sentry-script@1.3.1/dist/init.js","data-sentry-config":"{\"dsn\":\"https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224\",\"sampleRate\":0.1,\"release\":\"2208-77d63458\",\"ignoreErrorNames\":[\"NetworkError\",\"SecurityError\"],\"ignoreErrorsPreset\":\"ReactApp\",\"tags\":{\"app_name\":\"heifetz\"}}"},window)}();
</script><script crossorigin="anonymous" data-sentry-config="{&quot;dsn&quot;:&quot;https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224&quot;,&quot;sampleRate&quot;:0.1,&quot;release&quot;:&quot;2208-77d63458&quot;,&quot;ignoreErrorNames&quot;:[&quot;NetworkError&quot;,&quot;SecurityError&quot;],&quot;ignoreErrorsPreset&quot;:&quot;ReactApp&quot;,&quot;tags&quot;:{&quot;app_name&quot;:&quot;heifetz&quot;}}" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/init.js"></script><style data-emotion-css="55n9hh">.css-55n9hh{position:fixed;top:0;right:0;left:0;z-index:101;display:none;height:2px;pointer-events:none;background:#1772F6;-webkit-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);}</style><style data-emotion-css="1l12z7y">.css-1l12z7y{box-shadow:0px 16px 32px rgba(0,0,0,0.04);}</style><style data-emotion-css="1hlrcxk">.css-1hlrcxk{-webkit-transition-property:fill;transition-property:fill;-webkit-transition-duration:0.25s;transition-duration:0.25s;-webkit-transition-timing-function:ease-in;transition-timing-function:ease-in;}</style><style data-emotion-css="icip60">.css-icip60{border-radius:2px;}</style><style data-emotion-css="fnnb9l">.css-fnnb9l{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:30px;height:30px;border-radius:2px;}</style><style data-emotion-css="78p1r9">.css-78p1r9{box-sizing:border-box;margin:0;min-width:0;margin-left:auto;margin-right:auto;max-width:690px;margin-top:0;}@media screen and (min-width:40em){.css-78p1r9{margin-top:1em;}}</style><style data-emotion-css="1xa1hik">.css-1xa1hik{position:relative;padding-bottom:56%;height:0;border-radius:inherit;}</style><style data-emotion-css="1h1xzpn">.css-1h1xzpn{box-sizing:border-box;margin:0;min-width:0;position:relative;padding-bottom:56%;height:0;border-radius:inherit;}</style><style data-emotion-css="1ld0bim">.css-1ld0bim{position:absolute;top:0;left:0;width:100%;height:100%;border-radius:inherit;}</style><style data-emotion-css="uodor8">.css-uodor8{border-radius:50%;}</style><style data-emotion-css="1syywx2">.css-1syywx2{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:38px;height:38px;border-radius:50%;}</style><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style><style data-emotion-css="2dtzk2">.css-2dtzk2{cursor:pointer;display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:.3em;}</style><style data-emotion-css="1m3x3v9">.css-1m3x3v9{width:1em;height:1em;}</style><style data-emotion-css="z4ujak">.css-z4ujak{color:#8491a5;}</style><style data-emotion-css="1od93p9">.css-1od93p9{margin-top:16px;position:relative;}</style><style data-emotion-css="376mun">.css-376mun{position:relative;display:inline;}</style><style data-emotion-css="dg64xe">.css-dg64xe .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-dg64xe .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-dg64xe .FileLinkCard-info{margin-left:12px;}.css-dg64xe .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-dg64xe .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-dg64xe .FileLinkCard-source{white-space:pre;}.css-dg64xe img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-dg64xe img.content_image[data-size="normal"],.css-dg64xe img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-dg64xe img.content_image[data-size="small"],.css-dg64xe img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="1vqsdx1">.css-1vqsdx1 .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-1vqsdx1 .LinkCard.new,.css-1vqsdx1 .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-1vqsdx1 .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-1vqsdx1 .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-1vqsdx1 .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-1vqsdx1 .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-1vqsdx1 .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-1vqsdx1 .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-1vqsdx1 .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-1vqsdx1 .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-1vqsdx1 .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-1vqsdx1 .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-1vqsdx1 .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-1vqsdx1 .LinkCard.old,.css-1vqsdx1 .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-1vqsdx1 .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}</style><style data-emotion-css="yxro2d">.css-yxro2d .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-yxro2d .LinkCard.old,.css-yxro2d .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-yxro2d .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-yxro2d .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-yxro2d .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-yxro2d .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-yxro2d .LinkCard.new,.css-yxro2d .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-yxro2d .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-yxro2d .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-yxro2d .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-yxro2d .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-yxro2d .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-yxro2d .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-yxro2d .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-yxro2d .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-yxro2d .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-yxro2d .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-yxro2d .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-yxro2d .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-yxro2d .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-yxro2d .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-yxro2d .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-yxro2d .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-yxro2d .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-yxro2d .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-yxro2d .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-yxro2d .FileLinkCard-info{margin-left:12px;}.css-yxro2d .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-yxro2d .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-yxro2d .FileLinkCard-source{white-space:pre;}.css-yxro2d img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-yxro2d img.content_image[data-size="normal"],.css-yxro2d img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-yxro2d img.content_image[data-size="small"],.css-yxro2d img.origin_image[data-size="small"]{width:320px;max-width:100%;}</style><style data-emotion-css="ob6uua animation-1yvu044">.css-ob6uua{word-break:break-word;line-height:1.6;}.css-ob6uua > [data-first-child]{margin-top:0;}.css-ob6uua > :last-child{margin-bottom:0;}.css-ob6uua h1,.css-ob6uua h2{clear:left;margin-top:calc((1.4em * 2) / 1.2);margin-bottom:calc(1.4em / 1.2);font-size:1.2em;line-height:1.5;font-weight:600;}.css-ob6uua h3,.css-ob6uua h4,.css-ob6uua h5,.css-ob6uua h6{clear:left;margin-top:calc((1.4em * 1.5) / 1.1);margin-bottom:calc(1.4em / 1.1);font-size:1.1em;line-height:1.5;font-weight:600;}.css-ob6uua u{-webkit-text-decoration:none;text-decoration:none;border-bottom:1px solid #373a40;}.css-ob6uua b{font-weight:600;}.css-ob6uua sup{font-size:0.8em;}.css-ob6uua sup[data-draft-type='reference']{color:#09408e;}.css-ob6uua a:focus{outline:none;-webkit-transition:box-shadow 0.3s;transition:box-shadow 0.3s;}html[data-focus-visible] .css-ob6uua a:focus{box-shadow:0 0 0 2px #ffffff,0 0 0 4px rgba(23,114,246,0.3);}.css-ob6uua a.ztext-link,.css-ob6uua a.internal,.css-ob6uua a.external{-webkit-text-decoration:none;text-decoration:none;cursor:pointer;border-bottom:1px solid #81858f;}.css-ob6uua a.ztext-link:hover,.css-ob6uua a.internal:hover,.css-ob6uua a.external:hover{color:#09408e;border-bottom:1px solid #09408e;}.css-ob6uua a.ztext-link > .ellipsis::after,.css-ob6uua a.internal > .ellipsis::after,.css-ob6uua a.external > .ellipsis::after{content:'...';}.css-ob6uua a.ztext-link > .invisible,.css-ob6uua a.internal > .invisible,.css-ob6uua a.external > .invisible{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;}.css-ob6uua a.ztext-link u,.css-ob6uua a.internal u,.css-ob6uua a.external u{border:none;}.css-ob6uua a.member_mention{color:#09408e;}.css-ob6uua a.member_mention:hover{border-bottom:1px solid #09408e;}.css-ob6uua a.UserLink-link{color:#09408e;}.css-ob6uua a.UserLink-link:hover{border-bottom:1px solid #09408e;}.css-ob6uua p{margin:1.4em 0;}.css-ob6uua p.ztext-empty-paragraph{margin:calc((2.8em- (1.4em * 2 + 1.6em)) / 2) 0;}.css-ob6uua p.ztext-empty-paragraph + .ztext-empty-paragraph{margin:1.4em 0;}.css-ob6uua hr{margin:4em auto;width:240px;max-width:100%;border:none;border-top:1px solid #c4c7ce;}.css-ob6uua img[eeimg]{max-width:100%;vertical-align:middle;}.css-ob6uua img[eeimg="1"]{margin:0 3px;max-width:calc(100% - 6px);display:inline-block;}.css-ob6uua img[eeimg="2"]{margin:1.4em auto;display:block;}.css-ob6uua blockquote{margin:1.4em 0;padding-left:1em;color:#535861;border-left:3px solid #c4c7ce;}.css-ob6uua ol,.css-ob6uua ul{margin:1.4em 0;padding:0;width:100%;}.css-ob6uua ol ol,.css-ob6uua ul ol,.css-ob6uua ol ul,.css-ob6uua ul ul{margin:0;}.css-ob6uua ol li::before,.css-ob6uua ul li::before{width:1em;}.css-ob6uua ol > ol,.css-ob6uua ul > ol,.css-ob6uua ol > ul,.css-ob6uua ul > ul{padding-left:1em;box-sizing:border-box;}.css-ob6uua ul>li{display:table;width:100%;list-style:none;}.css-ob6uua ul>li::before{display:table-cell;content:'•  ';white-space:pre;}.css-ob6uua ol{counter-reset:ol;}.css-ob6uua ol > li{display:table;width:100%;list-style:none;}.css-ob6uua ol > li::before{display:table-cell;text-align:right;counter-increment:ol;content:counter(ol) '. ';white-space:pre;}.css-ob6uua ol ol{counter-reset:ol2;}.css-ob6uua ol ol li::before{counter-increment:ol2;content:counter(ol2) '. ';}.css-ob6uua ol ol ol{counter-reset:ol3;}.css-ob6uua ol ol ol li::before{counter-increment:ol3;content:counter(ol3) '. ';}.css-ob6uua ol ol ol ol{counter-reset:ol4;}.css-ob6uua ol ol ol ol li::before{counter-increment:ol4;content:counter(ol4) '. ';}.css-ob6uua figure{margin:1.4em 0;}.css-ob6uua figure .content_image,.css-ob6uua figure .origin_image{margin:0 auto;}.css-ob6uua figure figcaption{margin-top:calc(0.6em / 0.9);padding:0 1em;font-size:0.9em;line-height:1.5;text-align:center;color:#9196a1;}.css-ob6uua figure + figure{margin-top:calc(1.4em * 1.6);}.css-ob6uua figure[data-size='small'],.css-ob6uua figure:not([data-size]) > [data-size='small']{clear:both;}.css-ob6uua figure[data-size='left'],.css-ob6uua figure:not([data-size]) > [data-size='left']{float:left;margin:0 20px 20px 0;max-width:33%;}.css-ob6uua figure[data-size='right'],.css-ob6uua figure:not([data-size]) > [data-size='right']{float:right;margin:0 0 20px 20px;max-width:33%;}.css-ob6uua figure[data-size='collapse']{margin-bottom:0;}.css-ob6uua figure[data-size='collapse'] + figure{margin-top:0;}.css-ob6uua .content_image,.css-ob6uua .origin_image{display:block;max-width:100%;height:auto;margin:1.4em auto;background-color:#fff;}.css-ob6uua .content_image[data-size='small'],.css-ob6uua .origin_image[data-size='small']{max-width:40%;}.css-ob6uua .content_image.zh-lightbox-thumb,.css-ob6uua .origin_image.zh-lightbox-thumb{cursor:-webkit-zoom-in;cursor:-moz-zoom-in;cursor:zoom-in;}.css-ob6uua code{margin:0 2px;padding:3px 4px;border-radius:3px;font-family:Menlo,Monaco,Consolas,'Andale Mono','lucida console','Courier New',monospace;font-size:0.9em;background-color:#f8f8fa;}.css-ob6uua pre{margin:1.4em 0;padding:calc(0.8em / 0.9);font-size:0.9em;word-break:initial;word-wrap:initial;white-space:pre;overflow:auto;-webkit-overflow-scrolling:touch;background:#f8f8fa;border-radius:4px;}.css-ob6uua pre code{margin:0;padding:0;font-size:inherit;border-radius:0;background-color:inherit;}.css-ob6uua li pre{white-space:pre-wrap;}.css-ob6uua table[data-draft-type='table']{border-collapse:collapse;font-size:15px;margin:1.4em auto;max-width:100%;table-layout:fixed;text-align:left;width:100%;}.css-ob6uua table[data-draft-type='table'][data-size='small']{min-width:260px;width:40%;}.css-ob6uua table[data-draft-type='table'][data-row-style='striped'] tr:nth-of-type(2n + 1){background:#f8f8fa;}.css-ob6uua table[data-draft-type='table'] td,.css-ob6uua table[data-draft-type='table'] th{border:1px solid #c4c7ce;line-height:24px;height:24px;padding:3px 12px;}.css-ob6uua table[data-draft-type='table'] th{background:#ebeced;color:#191B1F;font-weight:500;}.css-ob6uua .video-box,.css-ob6uua .link-box{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;margin:1.4em 0;overflow:auto;white-space:normal;cursor:pointer;border:solid 1px #ebeced;border-radius:4px;}.css-ob6uua .lazy[data-lazy-status]{background-color:#f8f8fa;}.css-ob6uua .lazy[data-lazy-status="ok"]{background-color:#fff;-webkit-animation:animation-1yvu044 0.5s ease-in;animation:animation-1yvu044 0.5s ease-in;}.css-ob6uua .highlight{margin:1em 0;}.css-ob6uua .highlight pre{margin:0;}.css-ob6uua .highlight .hll{background-color:#f8f8fa;}.css-ob6uua .highlight .c{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .err{color:#D95350;}.css-ob6uua .highlight .k{font-weight:600;}.css-ob6uua .highlight .o{font-weight:600;}.css-ob6uua .highlight .cm{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cp{font-weight:600;color:#9196a1;}.css-ob6uua .highlight .c1{font-style:italic;color:#9196a1;}.css-ob6uua .highlight .cs{font-style:italic;font-weight:600;color:#9196a1;}.css-ob6uua .highlight .gd{color:#F05159;}.css-ob6uua .highlight .ge{font-style:italic;}.css-ob6uua .highlight .gr{color:#D95350;}.css-ob6uua .highlight .gh{color:#9196a1;}.css-ob6uua .highlight .gi{color:#12b370;}.css-ob6uua .highlight .go{color:#81858f;}.css-ob6uua .highlight .gp{color:#535861;}.css-ob6uua .highlight .gs{font-weight:600;}.css-ob6uua .highlight .gu{color:#9196a1;}.css-ob6uua .highlight .gt{color:#D95350;}.css-ob6uua .highlight .kc{font-weight:600;}.css-ob6uua .highlight .kd{font-weight:600;}.css-ob6uua .highlight .kn{font-weight:600;}.css-ob6uua .highlight .kp{font-weight:600;}.css-ob6uua .highlight .kr{font-weight:600;}.css-ob6uua .highlight .kt{font-weight:600;color:#09408e;}.css-ob6uua .highlight .m{color:#1772F6;}.css-ob6uua .highlight .s{color:#D95350;}.css-ob6uua .highlight .na{color:#1772F6;}.css-ob6uua .highlight .nb{color:#1772F6;}.css-ob6uua .highlight .nc{font-weight:600;color:#09408e;}.css-ob6uua .highlight .no{color:#1772F6;}.css-ob6uua .highlight .ni{color:#6A5FF3;}.css-ob6uua .highlight .ne{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nf{font-weight:600;color:#D95350;}.css-ob6uua .highlight .nn{color:#535861;}.css-ob6uua .highlight .nt{color:#09408e;}.css-ob6uua .highlight .nv{color:#1772F6;}.css-ob6uua .highlight .ow{font-weight:600;}.css-ob6uua .highlight .w{color:#adb0b7;}.css-ob6uua .highlight .mf{color:#1772F6;}.css-ob6uua .highlight .mh{color:#1772F6;}.css-ob6uua .highlight .mi{color:#1772F6;}.css-ob6uua .highlight .mo{color:#1772F6;}.css-ob6uua .highlight .sb{color:#D95350;}.css-ob6uua .highlight .sc{color:#D95350;}.css-ob6uua .highlight .sd{color:#D95350;}.css-ob6uua .highlight .s2{color:#D95350;}.css-ob6uua .highlight .se{color:#D95350;}.css-ob6uua .highlight .sh{color:#D95350;}.css-ob6uua .highlight .si{color:#D95350;}.css-ob6uua .highlight .sx{color:#D95350;}.css-ob6uua .highlight .sr{color:#A5542F;}.css-ob6uua .highlight .s1{color:#D95350;}.css-ob6uua .highlight .ss{color:#D95350;}.css-ob6uua .highlight .bp{color:#9196a1;}.css-ob6uua .highlight .vc{color:#1772F6;}.css-ob6uua .highlight .vg{color:#1772F6;}.css-ob6uua .highlight .vi{color:#1772F6;}.css-ob6uua .highlight .il{color:#1772F6;}.css-ob6uua .highlight::-webkit-scrollbar{width:6px;height:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal{background-color:rgba(25,27,31,0.5);border-radius:6px;}.css-ob6uua .highlight::-webkit-scrollbar-thumb:horizontal:hover{background-color:rgba(25,27,31,0.6);}.css-ob6uua .LinkCard.old{position:relative;display:block;margin:1em auto;width:390px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;}.css-ob6uua .LinkCard.old,.css-ob6uua .LinkCard.old:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard-ecommerceLoadingCard{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:12px;border-radius:inherit;height:80px;box-sizing:border-box;background:rgba(248,248,250,0.88);color:#c4c7ce;}.css-ob6uua .LinkCard-ecommerceLoadingCardAvatarWrapper{width:60px;height:60px;background:#ebeced;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin-right:10px;}.css-ob6uua .LinkCard-ecommerceLoadingCardNetwork{width:20px;height:20px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar{height:60px;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span{height:16px;display:inline-block;background:#ebeced;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(1){width:60px;margin-bottom:4px;}.css-ob6uua .LinkCard-ecommerceLoadingCardLoadingbar span:nth-of-type(2){width:127px;}.css-ob6uua .LinkCard.new{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;box-sizing:border-box;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:390px;min-height:84px;border-radius:8px;max-width:100%;overflow:hidden;margin:16px auto;padding:12px 12px 9px 12px;background-color:#f8f8fa;}.css-ob6uua .LinkCard.new,.css-ob6uua .LinkCard.new:hover{-webkit-text-decoration:none;text-decoration:none;border:none !important;color:inherit !important;}.css-ob6uua .LinkCard.new .LinkCard-contents{display:block;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto;position:relative;}.css-ob6uua .LinkCard.new .LinkCard-contents .loading{height:14px;background:#ebeced;border-radius:7px;}.css-ob6uua .LinkCard.new .LinkCard-contents.withTitle{margin-bottom:3px;}.css-ob6uua .LinkCard.new .LinkCard-title{display:-webkit-box;font-size:15px;font-weight:500;line-height:1.4;margin-bottom:2px;color:#191B1F;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-title.two-line{line-height:20px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .LinkCard.new .LinkCard-title.loading{margin-bottom:8px;width:80%;}.css-ob6uua .LinkCard.new .LinkCard-title.loading.withTitle{margin-bottom:6px;}.css-ob6uua .LinkCard.new .LinkCard-title.loadingTitle{margin-bottom:5px;}.css-ob6uua .LinkCard.new .LinkCard-excerpt{display:-webkit-box;text-overflow:ellipsis;font-size:13px;line-height:18px;color:#9196a1;margin-bottom:4px;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-excerpt .LinkCard-author{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-desc{display:-webkit-box;font-size:13px;height:18px;line-height:18px;color:#9196a1;word-break:break-all;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:1;}.css-ob6uua .LinkCard.new .LinkCard-desc .LinkCard-tag,.css-ob6uua .LinkCard.new .LinkCard-desc .tag{display:inline-block;font-size:11px;margin-left:8px;padding:0 4px;border-radius:3px;background:rgba(196,199,206,0.3);}.css-ob6uua .LinkCard.new .LinkCard-desc.loading{width:40%;}.css-ob6uua .LinkCard.new .LinkCard-desc svg{margin-right:2px;}.css-ob6uua .LinkCard.new .LinkCard-image{-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;background-color:#ebeced;background-size:cover;background-position:center;position:relative;display:block;width:60px;height:60px;margin-left:20px;object-fit:cover;border-radius:inherit;overflow:hidden;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background-color:#ebeced;color:#c4c7ce;}.css-ob6uua .LinkCard.new .LinkCard-image.LinkCard-image--default svg{color:#9196a1;}.css-ob6uua .LinkCard.new .LinkCard-image img{width:100%;height:100%;object-fit:cover;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:50%;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);width:24px;height:24px;border-radius:12px;background:rgba(255,255,255,0.9);pointer-events:none;}.css-ob6uua .LinkCard.new .LinkCard-image .LinkCard-image--video svg{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .text{color:#373a40;}.css-ob6uua .LinkCard.new .LinkCard-richText .bold{font-weight:600;}.css-ob6uua .LinkCard.new .LinkCard-richText .tag{margin-left:4px;}.css-ob6uua .FileLinkCard{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:rgba(248,248,250,0.88);border-radius:12px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:1em auto;max-width:100%;overflow:hidden;padding:12px;position:relative;width:390px;}.css-ob6uua .FileLinkCard-icon{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;height:30px;width:30px;}.css-ob6uua .FileLinkCard-info{margin-left:12px;}.css-ob6uua .FileLinkCard-name{color:#191B1F;font-size:15px;font-weight:500;line-height:21px;display:-webkit-box;text-overflow:ellipsis;overflow:hidden;-webkit-box-orient:vertical;-webkit-line-clamp:2;}.css-ob6uua .FileLinkCard-meta{color:#9196a1;font-size:12px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;line-height:14px;margin-top:5px;}.css-ob6uua .FileLinkCard-source{white-space:pre;}.css-ob6uua img[data-uncomfortable]{content:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20344.88888888888886%20194%22%3E%3CforeignObject%20width%3D%22344.88888888888886%22%20height%3D%22194%22%3E%0A%20%20%20%20%20%20%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22font-size%3A%2013px%3B%20font-family%3A%20-apple-system%2C%20BlinkMacSystemFont%2C%20Microsoft%20YaHei%2C%20sans-serif%3B%20color%3A%20%23fff%3B%20width%3A100%25%3B%20height%3A194px%3B%22%3E%0A%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22display%3A%20flex%3B%20flex-direction%3A%20column%3B%20align-items%3A%20center%3B%20justify-content%3A%20center%3B%20height%3A%20100%25%3B%22%3E%0A%20%20%20%20%20%20%20%20%20%20%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2218%22%20height%3D%2218%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22currentColor%22%3E%3Cpath%20d%3D%22M8%203.65a7%207%200%2000-1.353.128.65.65%200%2011-.25-1.275A8.3%208.3%200%20018%202.35c2.387%200%204.172.954%205.357%202.125C14.511%205.615%2015.15%207.022%2015.15%208c0%20.621-.257%201.391-.699%202.134a7.076%207.076%200%2001-1.403%201.68l.495.46a.65.65%200%2011-.886.951l-.998-.929a.645.645%200%2001-.104-.097L9.73%2010.501a.647.647%200%2001-.29.301%203.15%203.15%200%2001-4.313-4.094.647.647%200%2001.234-.275L3.908%205.08a5.774%205.774%200%2000-1.283%201.522C2.282%207.198%202.15%207.707%202.15%208c0%20.522.41%201.616%201.407%202.6.965.954%202.43%201.75%204.443%201.75.468%200%20.905-.043%201.311-.12a.65.65%200%2001.243%201.277A8.322%208.322%200%20018%2013.65c-2.387%200-4.172-.954-5.357-2.125C1.49%2010.385.85%208.978.85%208c0-.598.238-1.333.648-2.046A7.054%207.054%200%20012.95%204.188l-.547-.509a.65.65%200%2011.886-.951l8.8%208.194a5.793%205.793%200%20001.244-1.453c.372-.624.516-1.163.516-1.469%200-.522-.41-1.616-1.407-2.6-.965-.954-2.43-1.75-4.443-1.75zM6.29%207.296a1.85%201.85%200%20002.534%202.36l-2.535-2.36zM8%204.85a.65.65%200%20100%201.3%201.85%201.85%200%20011.843%201.694.65.65%200%20101.296-.11A3.15%203.15%200%20008%204.85z%22%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cdiv%20style%3D%22margin%3A%20.6em%200%201.2em%22%3E%E8%AF%A5%E5%9B%BE%E7%89%87%E6%9C%89%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%BC%95%E8%B5%B7%E4%B8%8D%E9%80%82%3C%2Fdiv%3E%0A%20%20%20%20%20%20%20%20%20%20%3Cbutton%20style%3D%22padding%3A%204px%201em%3B%20font-size%3A%201.1em%3B%20color%3A%20inherit%3B%20background%3A%20none%3B%20border%3A%201px%20solid%20rgba%28255%2C255%2C255%2C.5%29%3B%20border-radius%3A%209999px%3B%22%3E%E7%BB%A7%E7%BB%AD%E6%9F%A5%E7%9C%8B%3C%2Fbutton%3E%0A%20%20%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2FforeignObject%3E%3C%2Fsvg%3E);width:100%;height:194px;background:url(https://pic1.zhimg.com/v2-cf70d0759d787c70091857151c1cad4a.jpeg) no-repeat rgba(191,191,191,0.7);background-size:cover;cursor:pointer!important;}.css-ob6uua img.content_image[data-size="normal"],.css-ob6uua img.origin_image[data-size="normal"]{width:100%;max-width:100%;}.css-ob6uua img.content_image[data-size="small"],.css-ob6uua img.origin_image[data-size="small"]{width:320px;max-width:100%;}@-webkit-keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}@keyframes animation-1yvu044{from{opacity:0;}to{opacity:1;}}</style><style data-emotion-css="zein01">.css-zein01{border-radius:4px;padding:0 12px;border:1px solid #ebeced;}</style><style data-emotion-css="1xlfegr">.css-1xlfegr{background:transparent;box-shadow:none;}</style><style data-emotion-css="1gomreu">.css-1gomreu{position:relative;display:inline-block;}</style><style data-emotion-css="1u7r5c9">.css-1u7r5c9{box-sizing:border-box;margin:0;min-width:0;max-width:100%;height:auto;background-color:#ffffff;width:40px;height:40px;border-radius:50%;}</style><style data-emotion-css="ch8ocw">.css-ch8ocw{position:relative;display:inline-block;height:30px;padding:0 12px;font-size:14px;line-height:30px;color:#1772F6;vertical-align:top;border-radius:100px;background:rgba(23,114,246,0.1);}.css-ch8ocw:hover{background-color:rgba(23,114,246,0.15);}</style><style type="text/css">/* toast 打包后 css 的有先层级有问题，自定义的样式会被覆盖，先加个 important 吧 */
.Toast_module_toast__e741a14e {
  top: 40px !important;
  border-radius: 34px !important;
  box-shadow: 0px 4px 16px #00000014 !important;
  background-color: #fff !important;
  padding: 11px 24px !important;
  font-weight: 500 !important;
  font-size: 14px !important;
  line-height: 22px !important;
  color: #121212 !important;
  transform: translate(-50%, 0%) !important;
}
</style><style type="text/css">.Marquee_module_marquee__218919a6 {
  overflow: hidden;
}

.Marquee_module_marqueeText__218919a6 {
  position: relative;
  transition: all 0.5s ease-in-out;
}
.Marquee_module_noAnimation__218919a6 {
  transition: none;
}

.Marquee_module_marqueeItem__218919a6 {
  display: flex;
  align-items: center;
  flex-wrap: nowrap;
  overflow: hidden;
  flex: 1;
}
</style><style data-emotion="css"></style></head><body class="WhiteBg-body PostIndex-body" aria-status="false" aria-ofstatus="false" aria-basefontsize="16" data-rh="class"><a id="ariaTipText" role="pagedescription" aria-label="欢迎进入 《InsideUE4》GamePlay架构（十一）Subsystems - 知乎,盲人用户使用操作智能引导，请按快捷键Ctrl+Alt+R；阅读详细操作说明请按快捷键Ctrl+Alt+问号键。" aria-atomic="true" href="javascript:void(0)" class="skipAutoFix" style="width: 1px; height: 1px;"><img src="" style="width:1px !important;height:1px !important;position:absolute;top:0;"></a><div id="root"><div class="App"><div class="LoadingBar  css-55n9hh"></div><div><span style="position:absolute;top:-10000px;left:-10000px" role="log" aria-live="assertive"></span></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;13-37-60-50-30&quot;}" data-zop="{&quot;authorName&quot;:&quot;大钊&quot;,&quot;itemId&quot;:&quot;158717151&quot;,&quot;title&quot;:&quot;《InsideUE4》GamePlay架构（十一）Subsystems&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-detail-view-path-module="PostItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;158717151&quot;,&quot;id&quot;:&quot;158717151&quot;}}}"><div class="ColumnPageHeader-Wrapper"><div><div class="Sticky ColumnPageHeader css-1l12z7y"><div class="ColumnPageHeader-content"><a href="https://www.zhihu.com/" aria-label="知乎"><svg viewBox="0 0 64 30" fill="#1772F6" width="64" height="30" class="css-1hlrcxk"><path d="M29.05 4.582H16.733V25.94h3.018l.403 2.572 4.081-2.572h4.815V4.582zm-5.207 18.69l-2.396 1.509-.235-1.508h-1.724V7.233h6.78v16.04h-2.425zM14.46 14.191H9.982c0-.471.033-.954.039-1.458v-5.5h5.106V5.935a1.352 1.352 0 0 0-.404-.957 1.378 1.378 0 0 0-.968-.396H5.783c.028-.088.056-.177.084-.255.274-.82 1.153-3.326 1.153-3.326a4.262 4.262 0 0 0-2.413.698c-.57.4-.912.682-1.371 1.946-.532 1.453-.997 2.856-1.31 3.693C1.444 8.674.28 11.025.28 11.025a5.85 5.85 0 0 0 2.52-.61c1.119-.593 1.679-1.502 2.054-2.883l.09-.3h2.334v5.5c0 .5-.045.982-.073 1.46h-4.12c-.71 0-1.39.278-1.893.775a2.638 2.638 0 0 0-.783 1.874h6.527a17.717 17.717 0 0 1-.778 3.649 16.796 16.796 0 0 1-3.012 5.273A33.104 33.104 0 0 1 0 28.74s3.13 1.175 5.425-.954c1.388-1.292 2.631-3.814 3.23-5.727a28.09 28.09 0 0 0 1.12-5.229h5.967v-1.37a1.254 1.254 0 0 0-.373-.899 1.279 1.279 0 0 0-.909-.37z"></path><path d="M11.27 19.675l-2.312 1.491 5.038 7.458a6.905 6.905 0 0 0 .672-2.218 3.15 3.15 0 0 0-.28-2.168l-3.118-4.563zM51.449 15.195V5.842c4.181-.205 7.988-.405 9.438-.483l.851-.05c.387-.399.885-2.395.689-3.021-.073-.25-.213-.666-.638-.555a33.279 33.279 0 0 1-4.277.727c-2.766.321-3.97.404-7.804.682-6.718.487-12.709.72-12.709.72a2.518 2.518 0 0 0 .788 1.834 2.567 2.567 0 0 0 1.883.706c2.278-.095 5.598-.25 8.996-.41v9.203h-12.78c0 .703.281 1.377.783 1.874a2.69 2.69 0 0 0 1.892.777h10.105v7.075c0 .887-.464 1.192-1.231 1.214h-3.92a4.15 4.15 0 0 0 .837 1.544 4.2 4.2 0 0 0 1.403 1.067 6.215 6.215 0 0 0 2.71.277c1.36-.066 2.967-.826 2.967-3.57v-7.607h11.28c.342 0 .67-.135.91-.374.242-.239.378-.563.378-.902v-1.375H51.449z"></path><path d="M42.614 8.873a2.304 2.304 0 0 0-1.508-.926 2.334 2.334 0 0 0-1.727.405l-.376.272 4.255 5.85 2.24-1.62-2.884-3.98zM57.35 8.68l-3.125 4.097 2.24 1.663 4.517-5.927-.375-.277a2.32 2.32 0 0 0-1.722-.452 2.327 2.327 0 0 0-1.536.896z"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="https://www.zhihu.com/column/insideue4">InsideUE5</a></div></div><div class="ColumnPageHeader-Button"><div class="Popover"><button title="更多" id="Popover1-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button ColumnPageHeader-MenuToggler FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--Dots" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></button></div><button type="button" class="Button ColumnPageHeader-WriteButton FEfUrdfMIKpQDJDqkjte Button--blue JmYzaky7MEPMFcJDLNMG"><svg width="24" height="24" viewBox="0 0 24 24" class="Zi Zi--EditSurround" fill="currentColor"><path d="M4.352 6.804A2.554 2.554 0 0 1 6.905 4.25h6.072a.875.875 0 0 0 0-1.75H6.905a4.304 4.304 0 0 0-4.303 4.304v10.142a4.304 4.304 0 0 0 4.303 4.304h10.143a4.304 4.304 0 0 0 4.304-4.304v-6.071a.875.875 0 0 0-1.75 0v6.071a2.554 2.554 0 0 1-2.554 2.554H6.905a2.554 2.554 0 0 1-2.553-2.554V6.804Z"></path><path d="M20.595 4.731a.875.875 0 1 0-1.237-1.237l-7.763 7.762a.875.875 0 1 0 1.238 1.238l7.762-7.763Z"></path></svg>写文章</button></div></div><div class="ColumnPageHeader-profile"><div class="Popover AppHeader-menu"><button id="Popover4-toggle" aria-haspopup="true" aria-expanded="false" type="button" class="Button AppHeader-profileEntry FEfUrdfMIKpQDJDqkjte Button--plain fEPKGkUK5jyc4fUuT0QP"><img class="Avatar AppHeader-profileAvatar css-fnnb9l" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x" alt="点击打开没有了想念的主页"></button></div><div class="Popover ddLajxN_Q0AuobBZjX9m AppHeaderProfileMenu-creatorHintPopover"><div class="AppHeaderProfileMenu-creatorHintToggler" id="Popover5-toggle" aria-haspopup="true" aria-expanded="false"></div></div></div></div></div></div><div class="css-78p1r9"><div class="css-1h1xzpn"><div class="css-1ld0bim"><span style="box-sizing:border-box;display:block;overflow:hidden;width:initial;height:initial;background:none;opacity:1;border:0;margin:0;padding:0"><picture><source type="image/avif" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.avif 1x, %E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.avif 2x" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.avif"><source type="image/webp" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.webp 1x, %E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.webp 2x" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.webp"><img alt="《InsideUE4》GamePlay架构（十一）Subsystems" decoding="async" style="position: absolute; inset: 0px; box-sizing: border-box; padding: 0px; border: medium; margin: auto; display: block; width: 0px; height: 0px; min-width: 100%; max-width: 100%; min-height: 100%; max-height: 100%;" width="100%" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.jpg 1x, %E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7825335e062ee2125ea8c28efed80c9d_1440w.jpg 2x"></picture></span></div></div></div><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">《InsideUE4》GamePlay架构（十一）Subsystems</h1><div class="Post-Author"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><div class="AuthorInfo"><meta itemprop="name" content="大钊"><meta itemprop="image" content="https://picx.zhimg.com/v2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b"><meta itemprop="url" content="https://www.zhihu.com/people/fjz13"><meta itemprop="zhihu:followerCount"><span class="UserLink AuthorInfo-avatarWrapper"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/fjz13" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User"><img class="Avatar AuthorInfo-avatar css-1syywx2" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l_002.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l_002.png 2x" alt="大钊"></a></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/fjz13" target="_blank" class="UserLink-link" data-za-detail-view-element_name="User">大钊</a></div><a href="https://www.zhihu.com/kvip/purchase" rel="noopener noreferrer" class="css-2dtzk2">​<img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-57fe7feb4813331d5eca02ef731e12c9.png" alt="知乎知识会员" class="css-1m3x3v9"></a></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="ztext AuthorInfo-badgeText css-0">UE源码剖析，等编译的时候回答问题</div></div></div></div></div></div><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Plus FollowButton-icon" fill="currentColor"><path fill-rule="evenodd" d="M13.25 3.25a1.25 1.25 0 1 0-2.5 0v7.5h-7.5a1.25 1.25 0 1 0 0 2.5h7.5v7.5a1.25 1.25 0 1 0 2.5 0v-7.5h7.5a1.25 1.25 0 0 0 0-2.5h-7.5v-7.5Z" clip-rule="evenodd"></path></svg></span>关注他</button></div><div class="LabelContainer-wrapper"></div><div><div class="css-dvccr2"><div class="css-1lr85n">784 人赞同了该文章</div><svg width="14px" height="14px" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRight16 css-z4ujak" fill="currentColor"><path fill-rule="evenodd" d="M6.252 2.328a.75.75 0 0 1 1.04.213l3.334 5.05a.75.75 0 0 1 0 .826L7.292 13.46a.75.75 0 0 1-1.251-.828L9.1 8.004 6.04 3.367a.75.75 0 0 1 .212-1.039Z" clip-rule="evenodd"></path></svg></div></div><span class="css-z4ujak"></span></header><div class="Post-RichTextContainer"><div class="css-1od93p9"><div class="css-376mun"><div class="RichText ztext Post-RichText css-ob6uua" options="[object Object]"><blockquote data-first-child="" data-pid="lLtcZ6il"> 大家好，我厚着脸皮又回来了</blockquote><h2><b>引言</b></h2><p data-pid="3CIlsKVp">非常惭愧，自从我更新完GamePlay架构十篇之后，我就断更了许久。如今说再多缘由也是借口，借着假期，在家继续重操旧业，继续写写技术文章。</p><p data-pid="ZGwi5cTo">UE
在4.22版本的时候，开始引入Subsystems，然后在4.24完善。写本篇文章的一个原因是Subsystems其实可以算是GamePlay框
架基础上的一个增强功能，属于GamePlay架构的范围，因此我要补完。另一个原因是我观察到大家对Subsystems好像还很陌生，讨论和用的人都
很少。这着实有点可惜，Subsystems其实是一个非常便利的功能，如果大家在编写代码的时候，能够<b>有意识的</b>利用好Subsystems这个特性的话，会使自己的程序架构更加的清晰和便利。</p><p data-pid="DTBiUeqL">希望本文能帮助到你达成这一点。为了好好阐述好这个问题，本文的篇幅会比较长，大家可以慢慢挑自己感兴趣的部分，不用着急。</p><p data-pid="QVCKPNJf">为避免接下来混淆，本文先定义一下接下来使用的术语：</p><ul><li data-pid="35qZHd7X"><b>Subsystems</b>：指的是这整套“子系统”框架，包含了定义的类以及运作机制。</li><li data-pid="8mRW_0d_"><b><span><a class="RichContent-EntityWord css-b7erz1" data-za-not-track-link="true" data-paste-text="true" href="https://zhida.zhihu.com/search?content_id=123403829&amp;content_type=Article&amp;match_order=1&amp;q=SubsystemType&amp;zhida_source=entity" target="_blank">SubsystemType<svg width="10px" height="10px" viewBox="0 0 16 16" class="ZDI ZDI--FourPointedStar16 css-1dvsrp" fill="currentColor"><path d="m5.068 9.267-3.08-.77a.512.512 0 0 1 0-.994l3.08-.77a2.289 2.289 0 0 0 1.665-1.665l.77-3.08a.512.512 0 0 1 .994 0l.77 3.08c.205.82.845 1.46 1.665 1.665l3.08.77a.512.512 0 0 1 0 .994l-3.08.77a2.29 2.29 0 0 0-1.665 1.665l-.77 3.08a.512.512 0 0 1-.994 0l-.77-3.08a2.289 2.289 0 0 0-1.665-1.665Z"></path></svg></a></span>/SubsystemClass</b>：指向的是Subsystem的类型，比如TSubclassOf&lt;USubsystem&gt;。</li><li data-pid="epUSx6P6"><b>Subsystem对象</b>：指的是真正创建生成实例化出来的Subsystem对象。</li><li data-pid="XwrfjIoq"><b>UMyXXXSubsystem</b>: 用户定义的类，我会以My为前缀来区分。</li><li data-pid="WymjEnvn"><b>5类Outer对象</b>：Subsystem对象依存属于的5类Outer对象。</li></ul><ol><li data-pid="qJ-U4miS">UEngine* GEngine;</li><li data-pid="3vwkG5o9">UEditorEngine* GEditor; </li><li data-pid="MWpW3YOn">UGameInstance* GameInstance; </li><li data-pid="-E5B2DgV">UWorld* World;</li><li data-pid="ygTlyacy">ULocalPlayer* LocalPlayer;</li></ol><ul><li data-pid="HBYW-omR"><b>生命周期5类</b>：引擎已经预定义的5个让你可以由此派生的父类。</li></ul><ol><li data-pid="nzrMwRX1">UEngineSubsystem</li><li data-pid="L2r_dwfg">UEditorSubsystem</li><li data-pid="LfBn2kg4">UGameInstanceSubsystem</li><li data-pid="f_R9Wljq">UWorldSubsystem</li><li data-pid="H-Iaph4_">ULocalPlayerSubsystem</li></ol><h2><b>Subsystems是什么？</b></h2><p data-pid="XPXgQ2mP">一句话：<b>Subsystems是一套可以定义自动实例化和释放的类的框架。</b>这个框架允许你从5类里选择一个来定义子类(只能在C++定义)：</p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-1a596ce3195ccaf4275b0aa88dedf33e_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="1516" data-rawheight="668" data-original-token="v2-59be3cc03f6b6c0eabf8ab2af01640f4" class="origin_image zh-lightbox-thumb" width="1516" data-original="https://pic1.zhimg.com/v2-1a596ce3195ccaf4275b0aa88dedf33e_r.jpg"></div></figure><p data-pid="tCteyHXB">之后就可以享受以下这些福利了：</p><ol><li data-pid="X_Pxx8yT"><b>自动实例化 </b></li></ol><p data-pid="6SA8f-og">这些的UMyXXXSubsystem类，会在合适的时机被创建出对象，然后在合适的时机释放，这个过程是自动化的。不需要自己手写创建代码。也不需要自己显式的定义变量，Subsystems已经定义好方便友好的访问接口了。</p><p data-pid="sLhGMhJP"><b>2. 托管生命周期 </b></p><p data-pid="Uu5NIOeb">根
据你选择的父类不同，引擎会为创建出来的Subsystem实现出不同的生命周期。因此官方文档里会称这5个父类为5个不同的生命周期。根据你选择的生命
周期不同，Initialize()和Deinitialize()会自动的在合适的时机被调用。一个Subystem类型也有可能根据需要被自动的被创
建出多个实例。这些里面的繁琐逻辑自己都不用操心。</p><h2><b>Subsystems的基本使用</b></h2><p data-pid="Al8pQwAW">在谈到为什么需要Subsystems，以及如何用好Subsystems之前，我们先了解一些Subsystems的基础使用知识。先懂怎么用，然后再谈为什么，以及怎么用好。 目前Subsystems的使用只能在C++端，用起来倒也还简单。</p><p data-pid="qugCtcrU"><b>第一步，定义C++子类：</b></p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//声明定义：
</span><span class="c1"></span><span class="n">UCLASS</span><span class="p">()</span> 
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyEditorSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UEditorSubsystem</span>
<span class="n">UCLASS</span><span class="p">()</span> 
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyEngineSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UEngineSubsystem</span>
<span class="n">UCLASS</span><span class="p">()</span> 
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyGameInstanceSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstanceSubsystem</span>
<span class="n">UCLASS</span><span class="p">()</span> 
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyWorldSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UWorldSubsystem</span>
<span class="n">UCLASS</span><span class="p">()</span> 
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyLocalPlayerSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">ULocalPlayerSubsystem</span>

<span class="c1">//注：使用UEditorSubsystem需要在Build.cs里加上EditorSubsystem模块的引用，因为这是编辑器模块
</span><span class="c1"></span><span class="k">if</span> <span class="p">(</span><span class="n">Target</span><span class="p">.</span><span class="n">bBuildEditor</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">PublicDependencyModuleNames</span><span class="p">.</span><span class="n">AddRange</span><span class="p">(</span><span class="k">new</span> <span class="n">string</span><span class="p">[]</span> <span class="p">{</span> <span class="s">"EditorSubsystem"</span> <span class="p">});</span>
<span class="p">}</span>
</code></pre></div><p data-pid="V9mMmLVp"><b>第二步，像普通的UObject类一样，可以在里面定义属性和函数。</b> </p><p data-pid="3o6uKBk1">以一个非常简单的分数系统为例：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyScoreSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstanceSubsystem</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span><span class="c1">//重载的函数，可以做一些初始化和释放操作
</span><span class="c1"></span>    <span class="k">virtual</span> <span class="kt">bool</span> <span class="n">ShouldCreateSubsystem</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">Outer</span><span class="p">)</span> <span class="k">const</span> <span class="k">override</span> <span class="p">{</span> <span class="k">return</span> <span class="nb">true</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">virtual</span> <span class="kt">void</span> <span class="nf">Initialize</span><span class="p">(</span><span class="n">FSubsystemCollectionBase</span><span class="o">&amp;</span> <span class="n">Collection</span><span class="p">)</span><span class="k">override</span><span class="p">;</span>
    <span class="k">virtual</span> <span class="kt">void</span> <span class="nf">Deinitialize</span><span class="p">()</span><span class="k">override</span><span class="p">;</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
    <span class="kt">void</span> <span class="n">AddScore</span><span class="p">(</span><span class="kt">float</span> <span class="n">delta</span><span class="p">);</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">EditAnywhere</span><span class="p">,</span> <span class="n">BlueprintReadWrite</span><span class="p">)</span>
        <span class="kt">float</span> <span class="n">Score</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div><p data-pid="FI4duG6u"><b>第三步，就可以在C++和蓝图里访问这些类和调用函数了。</b></p><p data-pid="XTR90Oq_"><b>C++里的访问：</b></p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//UMyEngineSubsystem获取
</span><span class="c1"></span><span class="n">UMyEngineSubsystem</span><span class="o">*</span> <span class="n">MySubsystem</span> <span class="o">=</span> <span class="n">GEngine</span><span class="o">-&gt;</span><span class="n">GetEngineSubsystem</span><span class="o">&lt;</span><span class="n">UMyEngineSubsystem</span><span class="o">&gt;</span><span class="p">();</span>

<span class="c1">//UMyEditorSubsystem的获取
</span><span class="c1"></span><span class="n">UMyEditorSubsystem</span><span class="o">*</span> <span class="n">MySubsystem</span> <span class="o">=</span> <span class="n">GEditor</span><span class="o">-&gt;</span><span class="n">GetEditorSubsystem</span><span class="o">&lt;</span><span class="n">UMyEditorSubsystem</span><span class="o">&gt;</span><span class="p">();</span>

<span class="c1">//UMyGameInstanceSubsystem的获取
</span><span class="c1"></span><span class="n">UGameInstance</span><span class="o">*</span> <span class="n">GameInstance</span> <span class="o">=</span> <span class="n">UGameplayStatics</span><span class="o">::</span><span class="n">GetGameInstance</span><span class="p">(...);</span>
<span class="n">UMyGameInstanceSubsystem</span><span class="o">*</span> <span class="n">MySubsystem</span> <span class="o">=</span> <span class="n">GameInstance</span><span class="o">-&gt;</span><span class="n">GetSubsystem</span><span class="o">&lt;</span><span class="n">UMyGameInstanceSubsystem</span><span class="o">&gt;</span><span class="p">();</span>

<span class="c1">//UMyWorldSubsystem的获取
</span><span class="c1"></span><span class="n">UWorld</span><span class="o">*</span> <span class="n">World</span><span class="o">=</span><span class="n">MyActor</span><span class="o">-&gt;</span><span class="n">GetWorld</span><span class="p">();</span>  <span class="c1">//world用各种方式也都可以
</span><span class="c1"></span><span class="n">UMyWorldSubsystem</span><span class="o">*</span> <span class="n">MySubsystem</span><span class="o">=</span><span class="n">World</span><span class="o">-&gt;</span><span class="n">GetSubsystem</span><span class="o">&lt;</span><span class="n">UMyWorldSubsystem</span><span class="o">&gt;</span><span class="p">();</span>

<span class="c1">//UMyLocalPlayerSubsystem的获取
</span><span class="c1"></span><span class="n">ULocalPlayer</span><span class="o">*</span> <span class="n">LocalPlayer</span> <span class="o">=</span> <span class="n">Cast</span><span class="o">&lt;</span><span class="n">ULocalPlayer</span><span class="o">&gt;</span><span class="p">(</span><span class="n">PlayerController</span><span class="o">-&gt;</span><span class="n">Player</span><span class="p">)</span>
<span class="n">UMyLocalPlayerSubsystem</span> <span class="o">*</span> <span class="n">MySubsystem</span> <span class="o">=</span> <span class="n">LocalPlayer</span><span class="o">-&gt;</span><span class="n">GetSubsystem</span><span class="o">&lt;</span><span class="n">UMyLocalPlayerSubsystem</span><span class="o">&gt;</span><span class="p">();</span>
</code></pre></div><p data-pid="qzcZKvue">当然引擎源码里也已经定义好了一些方便的蓝图库函数，USubsystemBlueprintLibrary里的函数虽然不暴露在蓝图端，但也是可以在C++端方便调用的。</p><div class="highlight"><pre><code class="language-cpp"><span class="c1">//我省略了一些宏标记和注释，因为函数名字是不言自明的。
</span><span class="c1"></span><span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">ENGINE_API</span> <span class="nl">USubsystemBlueprintLibrary</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UBlueprintFunctionLibrary</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span>
    <span class="k">static</span> <span class="n">UEngineSubsystem</span><span class="o">*</span> <span class="n">GetEngineSubsystem</span><span class="p">(</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UEngineSubsystem</span><span class="o">&gt;</span> <span class="n">Class</span><span class="p">);</span>
    <span class="k">static</span> <span class="n">UGameInstanceSubsystem</span><span class="o">*</span> <span class="nf">GetGameInstanceSubsystem</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">ContextObject</span><span class="p">,</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UGameInstanceSubsystem</span><span class="o">&gt;</span> <span class="n">Class</span><span class="p">);</span>
    <span class="k">static</span> <span class="n">ULocalPlayerSubsystem</span><span class="o">*</span> <span class="nf">GetLocalPlayerSubsystem</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">ContextObject</span><span class="p">,</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">ULocalPlayerSubsystem</span><span class="o">&gt;</span> <span class="n">Class</span><span class="p">);</span>
    <span class="k">static</span> <span class="n">UWorldSubsystem</span><span class="o">*</span> <span class="nf">GetWorldSubsystem</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">ContextObject</span><span class="p">,</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UWorldSubsystem</span><span class="o">&gt;</span> <span class="n">Class</span><span class="p">);</span>
    <span class="k">static</span> <span class="n">ULocalPlayerSubsystem</span><span class="o">*</span> <span class="nf">GetLocalPlayerSubSystemFromPlayerController</span><span class="p">(</span><span class="n">APlayerController</span><span class="o">*</span> <span class="n">PlayerController</span><span class="p">,</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">ULocalPlayerSubsystem</span><span class="o">&gt;</span> <span class="n">Class</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div><p data-pid="LXPhLr6Q">蓝图内的访问：</p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-0fa07d1fc3f269b31c723f5b345ae6ce_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="667" data-rawheight="590" data-original-token="v2-5d88fad5dd8bfb6d33c1dc04a507181b" class="origin_image zh-lightbox-thumb" width="667" data-original="https://pic3.zhimg.com/v2-0fa07d1fc3f269b31c723f5b345ae6ce_r.jpg"></div></figure><p data-pid="l3HNb6XP">用起来的感觉有点像“全局变量”，也有点像是静态蓝图函数（如GetGameInstance），可以方便的在蓝图的各个地方调用。但Subsystems真正的威力其实远不止这点手头上的便利，而在于接下来要谈的引擎帮你自动处理的部分。</p><h2><b>如何理解Subsystems的生命周期？</b></h2><p data-pid="ovui9ev8">可以说Subsystems机制的核心之处就是在于引擎帮你托管了对象的生命周期，而理解这些对象生命周期的不同，也是理解Subsystems的关键之处。</p><p data-pid="Lne3UiLN"><b>简
短的说，Subsystem对象的生命周期取决于其依存的Outer对象的生命周期，随着Outer对象的创建而创建，随着Outer对象的销毁而销毁。
而选择依存哪种Outer对象，就是选择哪种Subsystem生命周期，靠的就是选择继承于哪个Subsystem基类。</b> </p><p data-pid="g49wqeoP">从数据角度分析，先一图以概之： </p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c4e2d200db7386c086cb59ab49a48449_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="1107" data-rawheight="626" data-original-token="v2-dfc8899a8315844e9d9ad8f5172c0073" class="origin_image zh-lightbox-thumb" width="1107" data-original="https://picx.zhimg.com/v2-c4e2d200db7386c086cb59ab49a48449_r.jpg"></div></figure><p data-pid="mSkWjV9V">从
源码里分析，像5类这种对象，比如GEngine，里面都添加了一个FSubsystemCollection&lt;TBaseType&gt; 
SubsystemCollection的对象，而其基类FSubsystemCollectionBase里面存储了Subsystem对象的引用。</p><div class="highlight"><pre><code class="language-cpp"><span class="k">class</span> <span class="nc">ENGINE_API</span> <span class="n">UEngine</span>
<span class="p">{</span>
<span class="k">private</span><span class="o">:</span>
    <span class="n">FSubsystemCollection</span><span class="o">&lt;</span><span class="n">UEngineSubsystem</span><span class="o">&gt;</span> <span class="n">EngineSubsystemCollection</span><span class="p">;</span>
<span class="p">};</span>
<span class="c1">//而FSubsystemCollection又继承于FSubsystemCollectionBase
</span><span class="c1"></span><span class="k">template</span><span class="o">&lt;</span><span class="k">typename</span> <span class="n">TBaseType</span><span class="o">&gt;</span>
<span class="k">class</span> <span class="nc">FSubsystemCollection</span> <span class="o">:</span> <span class="k">public</span> <span class="n">FSubsystemCollectionBase</span>
<span class="p">{</span>
<span class="p">};</span>
<span class="c1">//而FSubsystemCollectionBase里面用Map存储了对象引用
</span><span class="c1"></span><span class="k">class</span> <span class="nc">ENGINE_API</span> <span class="nl">FSubsystemCollectionBase</span> <span class="p">:</span> <span class="k">public</span> <span class="n">FGCObject</span>
<span class="p">{</span>
<span class="k">private</span><span class="o">:</span>
    <span class="n">TMap</span><span class="o">&lt;</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">USubsystem</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">USubsystem</span><span class="o">*&gt;</span> <span class="n">SubsystemMap</span><span class="p">;</span><span class="c1">//用Map来存储对象
</span><span class="c1"></span>    <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">USubsystem</span><span class="o">&gt;</span> <span class="n">BaseType</span><span class="p">;</span><span class="c1">//Subsystem对象类型
</span><span class="c1"></span>    <span class="n">UObject</span><span class="o">*</span> <span class="n">Outer</span><span class="p">;</span><span class="c1">//外部的对象
</span><span class="c1"></span><span class="p">}</span>
</code></pre></div><p data-pid="Z4750Hwe">可以看到，这5类Outer对象
(UEngine,UEditorEngine,UGameInstance,UWorld,ULocalPlayer)里面都新增了一个
FSubsystemCollection&lt;TBaseType&gt; 
SubsystemCollection的成员变量，用来存储其关联的Subsystem对象。 
拿最常用的UGameInstance来举个例子，假如你定义了两个自己UScoreSubsystem(计分系统)和UTaskSubsystem(任
务系统)，全都继承于UGameInstanceSubsystem之后，你的对象布局应该是这个样子： </p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-969907e096b86475d17269a8d75e6d79_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="1287" data-rawheight="614" data-original-token="v2-646fc20d5f69bc6f655a4343f67a0457" class="origin_image zh-lightbox-thumb" width="1287" data-original="https://pic2.zhimg.com/v2-969907e096b86475d17269a8d75e6d79_r.jpg"></div></figure><p data-pid="txcLhUEU">可
以看到GameInstance里的FSubsystemCollection对象存储了生成的UScoreSubsystem和
UTaskSubsystem对象的引用，而这二者其Outer都是指向GameInstance对象。数据内存结构还是比较简单的，但也有一些要点：</p><ol><li data-pid="NjWSgQSe">我
特意标明了FSubsystemCollectionBase继承于FGCObject，意在说明虽然FSubsystemCollection是个结
构，其在UGameInstance里，但其内部的对象引用也是受到GC管理的。FGCObject的内容不是此文重点，因此不再赘述，只要明白它是个让
F结构也可以让GC管理内部U对象引用的机制。</li><li data-pid="2Ecg68wZ">FSubsystemCollectionBase
里的UObject* 
Outer，指向外部的UGameInstance对象。这个Outer可以用来在
USubsystem::ShouldCreateSubsystem()或
FSubsystemCollectionBase::Initialize(FSubsystemCollectionBase&amp; 
Collection)的时候，从而可以在某个USubsystem对象创建之前获取到外部Outer，从而继续获取到其他的兄弟姐妹Subsystem
对象，从而做一些逻辑判断。当然创建完之后，因为USubsystem对象的Outer其实也为UGameInstance，所以直接
GetOuter()也就可以了。</li><li data-pid="fFNnvvPT">从TMap的Key为TSubclassOf可以看出，<b>一种特定类型的USubsystem子类只能创建出一个USubsystem对象</b>。所以UScoreSubsystem和UTaskSubsystem可以同时存在，但一种也只能有一个，类似单件模式。</li><li data-pid="vkIbUV6X">如果查看UGameInstanceSubsystem的源码（其他同理）：</li></ol><div class="highlight"><pre><code class="language-cpp"><span class="n">UCLASS</span><span class="p">(</span><span class="n">Abstract</span><span class="p">,</span> <span class="n">Within</span> <span class="o">=</span> <span class="n">GameInstance</span><span class="p">)</span>
<span class="k">class</span> <span class="nc">ENGINE_API</span> <span class="nl">UGameInstanceSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">USubsystem</span>
<span class="p">{</span>
<span class="p">}</span>
</code></pre></div><p data-pid="i4aAXz_7">解释一下两个重要的宏标记：</p><ul><li data-pid="fIeTwBJp">Abstract标记指明UGameInstanceSubsystem是抽象基类，是不能被直接创建出来的。</li><li data-pid="uZKF2ovV">Within
 = 
GameInstance，Within这个标记的意思是其对象的Outer必须是某个类型，另外Within的标记是会被继承到子类的。所以综合的意思
就是继承于UGameInstanceSubsystem的之类Subsystem对象的Outer必须是GameInstance，保证了其对象的依存
合法性。所以其实你也是不能自己随便NewObject()出来的，避免了自己误操作。</li></ul><p data-pid="C0GaAxaY">总结一下，在Subsystems之前我们其实也可以自己用C++来实现一个类似的“单例模式”，也可以达成类似的效果，其实大家也往往就这么干。但Subsystems给我们带来的远不止这些，因此接下来我们就来谈谈Subsystems相比我们自己手写的优点有哪些。</p><h2><b>为什么要引进Subsystems？</b></h2><p data-pid="IVHdrtRJ">首先，我非常赞同官方引入Subsystems这套机制，虽然其实工作量不多，实际源码行数也很少，但是这有效的弥补了程序实践上的一个易混乱缺陷漏洞。为了让你们能真正学习Subsystems并开始用起来，下面我就来好好安利一番：</p><p data-pid="mduXqe4O"><b>一， 不用自己手写，懒人福音，而且更正确</b></p><p data-pid="9FOnUExD">减少Bug最好的方式就是少写代码。诚然Subsystems这套并不是多高深的技术，实现的原理也蛮简单，差不多的程序员都能自己实现一套。但是引擎是否内建提供了该通用机制依然很重要。举例来说，你如果也想实现个类似的单件模式，你可能需要这么写：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyScoreManager</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UObject</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintPure</span><span class="p">,</span><span class="n">DisplayName</span><span class="o">=</span><span class="s">"MyScoreManager"</span><span class="p">)</span>
    <span class="k">static</span> <span class="n">UMyScoreManager</span><span class="o">*</span> <span class="n">Instance</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="n">UMyScoreManager</span><span class="o">*</span> <span class="n">instance</span><span class="o">=</span><span class="k">nullptr</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">instance</span><span class="o">==</span><span class="k">nullptr</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">instance</span><span class="o">=</span><span class="n">NewObject</span><span class="o">&lt;</span><span class="n">UMyScoreManager</span><span class="o">&gt;</span><span class="p">();</span>
            <span class="n">instance</span><span class="o">-&gt;</span><span class="n">AddToRoot</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">instance</span><span class="p">;</span>
        <span class="c1">//return GetMutableDefault&lt;UMyScoreManager&gt;();
</span><span class="c1"></span>    <span class="p">}</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">AddScore</span><span class="p">(</span><span class="kt">float</span> <span class="n">delta</span><span class="p">);</span>
<span class="k">public</span><span class="o">:</span>
    <span class="n">UPROPERTY</span><span class="p">(</span><span class="n">EditAnywhere</span><span class="p">,</span> <span class="n">BlueprintReadWrite</span><span class="p">)</span>
        <span class="kt">float</span> <span class="n">Score</span><span class="p">;</span>
<span class="p">};</span>
</code></pre></div><p data-pid="sKXGYRoH">这段代码有什么问题？</p><ol><li data-pid="dRMqKK6x">学习负担重，新人看不明白。首先第一个问题就是，但凡是想要用单件模式的人，都得先自己学会这么一编写套路，而且得抄对。</li><li data-pid="s-iW28re">AddRoot()往往很多人会忘掉，导致对象被释放，自己却拿它来调用函数是，导致崩溃。</li><li data-pid="oz4Vtdvh">这
里用GetMutableDefault可不可以？直接采用CDO对象当做单件对象可不可以，区别是什么？又有多少人能分得清呢。实际上二者确实差别不
大，只不过是一个是否保留默认值的问题，常常确实可以通用。但GetMutableDefault其实我发现知道和用的人不多。Subsystem是没有
直接用CDO的，因为其可能会被反复的创建销毁，所以需要CDO来恢复默认值。</li><li data-pid="oSWoZ9kD">这个单件的存续期其实在Editor模式下也会存在，所以在Play和Stop后其值依然会存在，表现为脏值。这也是一个常见的单件陷阱问题。</li><li data-pid="C6OBcI5M">因
此是否考虑重复创建和销毁的时机？像上述这种写法，单件创建出来后就一直存在。这个时候想处理这个创建销毁的问题又有几个选择：一是再加上
Initialize和Deinitialize()函数来手动调用；二是换种写法，不用函数静态变量，而用类静态变量再加上Destroy方法手动调
用；三是把static UMyScoreManager* 
放到UGameInstance的子类里当做类静态变量，然后在Init和Shutdown的重载函数里进行创建和释放。不同的写法也都有其优缺点，但最
大的缺点是：<b>你要为每个单件类都写一遍，而且不能写错。</b></li><li data-pid="2FfYQN7c">维护成本高。手动模式
要求你为每个新单件类都要记得加上其创建和释放的代码操作。根据第5点，当新定一个MyNewManager，你就得记得先定义静态变量，然后Init里
加上创建代码，在ShutDown里加上销毁代码。而引擎的这套机制可以利用反射机制，方便的创建和销毁对象。可维护性比手写的要强多了。</li><li data-pid="5nDMAEf9">当然也有人会说用Engine内建提供好的GameInstanceClass，但是缺点是只支持一个类型，而且生命周期是整个引擎，不是一场游戏。 </li></ol><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-be0dd217ee405221eeddc89d7f9281a6_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="806" data-rawheight="152" data-original-token="v2-42c21654f0a8c9d5bea72dd6378ecc53" class="origin_image zh-lightbox-thumb" width="806" data-original="https://pic1.zhimg.com/v2-be0dd217ee405221eeddc89d7f9281a6_r.jpg"></div></figure><p data-pid="jTQW3fTO">总结一下，你或许可以自己手写出一套足够健壮灵活的机制，但想做好做正确其实并不简单。而且因为你不能侵入引擎源码(受引擎分发升级等限制)，所以你自己实现的方式总会受限。最好的方式是引擎实现好了之后，你理解并用好它。</p><p data-pid="UWVCEKi5"><b>二、 更模块化</b></p><p data-pid="Ah8xWg_l">很多人，包括我自己，在实现一些全局的游戏系统的时候，总是从UGameInstance继承下来，然后在里面码一堆代码：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyGameInstance</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstance</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span><span class="c1">//UI系统
</span><span class="c1"></span>    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">PushUI</span><span class="p">(</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UUserWidget</span><span class="o">&gt;</span> <span class="n">widgetClass</span><span class="p">);</span>
<span class="k">public</span><span class="o">:</span><span class="c1">//任务系统
</span><span class="c1"></span>    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">CompleteTask</span><span class="p">(</span><span class="n">FString</span> <span class="n">taskName</span><span class="p">);</span>
<span class="k">public</span><span class="o">:</span><span class="c1">//计分系统
</span><span class="c1"></span>    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">AddScore</span><span class="p">(</span><span class="kt">float</span> <span class="n">delta</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div><p data-pid="upR4WK_f">示例代码我就意思一下，但请读者们自己回想一下，自己是否也曾经这么干过呢？有的人请在公屏上打上“确实”。但这么写其实也有三个大问题：</p><p data-pid="Hw5dW4SW"><b>1. 一个类里挤占着太多逻辑。</b>可维护性差，不利于分工协作。一个游戏常常有很多个逻辑模块，如任务系统，计分系统，经济系统、对话系统、爆率系统等等，这些都实现在UMyGameInstance里，会导致类越来越庞大，逐渐超过自己的心智负担上限。 </p><p data-pid="uidhu-9h"><b>2. 不利于模块复用。</b>假
如你下载了个游戏模板，里面有个对话系统，你觉得很好想挪用过来。但人家也是写在UDialogueGameInstance里的，这个时候你只能手动把
其代码拷贝到你的UMyGameInstance里。或者说，你的另一款游戏也想复用上款游戏的一些逻辑模块，于是你也只能手动拷贝一遍。想想之前是不是
经常这么干？ </p><p data-pid="l5UvLD2r"><b>3. 手动划分Manager类也不够机智。</b>当然一些机智的人已经想到了可以把这些业务逻辑模块，划分为不同的Manager类。但问题依旧，你依然需要自己手动去管理这些Manager类的生命周期。</p><p data-pid="370sKQFN">因此，现在有了Subsystems之后，你只需要把这些都写成:</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyUISubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstanceSubsystem</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span><span class="c1">//UI系统
</span><span class="c1"></span>    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">PushUI</span><span class="p">(</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UUserWidget</span><span class="o">&gt;</span> <span class="n">widgetClass</span><span class="p">);</span>
<span class="p">};</span>

<span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyTaskSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstanceSubsystem</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span><span class="c1">//任务系统
</span><span class="c1"></span>    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">CompleteTask</span><span class="p">(</span><span class="n">FString</span> <span class="n">taskName</span><span class="p">);</span>
<span class="p">};</span>

<span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyScoreSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstanceSubsystem</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span><span class="c1">//计分系统
</span><span class="c1"></span>    <span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
        <span class="kt">void</span> <span class="n">AddScore</span><span class="p">(</span><span class="kt">float</span> <span class="n">delta</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div><p data-pid="dBssjf5V">这么写有几点好处：</p><p data-pid="by3sUxUH"><b>1. 代码看起来优雅多了。</b> 相应的逻辑组织在对应的类里，易于理解，易于维护，也易于分工协作（可以一个人写一个模块）。 </p><p data-pid="NkwWT0X5"><b>2. 自己不用手写Subsystem对象的创建释放逻辑了。</b>解放了双手，也免于出错。 </p><p data-pid="7PrWyQwa"><b>3. 容易迁移复用。</b> 想复用一个之前已经写好的比如任务系统，只需要把那个类直接拷贝过来就行了。不需要进行代码的手动拷贝粘贴工作，避免出错。 </p><p data-pid="8-p5Ijal"><b>4. 更好的封装粒度，避免系统之间的数据访问污染。</b>按之前的方式，在UMyGameInstance里面，你在实现任务系统的时候，比如StartTask，你可能还需要用到计分系统的Score变量，这个时候你往往可能就直接访问成员变量了。因此，<b>多个逻辑模块之间的数据其实是互相污染的</b>，这是一种耦合紧密，封装不够良好的坏味道。如今拆成多个Subsystem类之后，就可以在特定的系统里，如UMyScoreSubsystem::GetScore()里面做更好的封装和验证。</p><p data-pid="cwryN-13"><b>三，理解的一致性</b></p><p data-pid="Q4561dUJ">当
程序员之间进行沟通程序架构的时候，设计模式是一些约定俗成的招数。同样，在UE4里进行逻辑复用的时候，也需要更加的清晰的统一认识。 
让我们设想这么一个场景，你从虚幻商城里下载了一个游戏模板，比如一套战斗系统模板。你在去理解怎么把它复用到你的游戏项目里的时候，你会按照什么思路去
理解它？你首先要看的是什么文件？如果作者没有写清楚说明文档的话，我发现往往也都是先从GamePlay那几个类先看看里面有什么，然后去Demo关卡
里看看用到了哪些Actor类，接着运行起来看看，然后各个目录翻翻。这里面的问题在于，<b>不同的开发者在编程的时候都有自己的方式，互相之前缺少共识。</b> </p><p data-pid="cLGGVfT0">在
有了Subsystem之后，如果大家都学习和利用好Subsystem，把自己的功能模块用Subsystem来实现。这样大家都看和理解别人的模块的
时候，首先想到的就是去看看对方里面有啥Subsystem类，然后专注的看它就行了。要复用的话也是直接拷贝过来就行。</p><p data-pid="dDNZ0Fx6">总结一下，UE里如果提到复用的理解一致性：</p><ul><li data-pid="GfI-FC8P"><b>通用功能的复用</b>：从各个ActorComponent里查看，这一层代表的往往是跟“游戏逻辑”无关的可复用功能。</li><li data-pid="EZurzyV6"><b>业务逻辑的复用</b>：从Subsystem来查找，其代表就是游戏逻辑相关的可复用部分。</li></ul><p data-pid="rt_AeRm2">至于GamePlay里的各个类，那其实是大家对于业务框架流程的一致性理解，往往并不能直接复用拷贝过来使用。</p><p data-pid="5C2NtePy"><b>四，避免重载引擎类</b></p><p data-pid="GpS2BPKJ">特
别是在实现插件模块的时候，其实你并不需要继承于GameInstance或之类的，但是往往你又需要一个“全局的管理类”，于是不得不为之。继承于
GameInstance的坏处上文已经说过了，有些人有鉴于此，往往就另建了一个“XXXManagerActor”蓝图类，然后要求用户拖放这个
Actor到场景内来使它工作。这其实也只是一种“绕开”的办法而已，从结构上来说不够优雅，从用户使用体验上来说也不够直接。</p><p data-pid="XSkPLHLO"><b>五，生命周期控制粒度更细</b></p><p data-pid="DycYizUl">如
果说想让自己的Manager类依存UGameInstance的生命周期还好实现，因为UGameInstance里已经提供了Init和
Shutdown的重载，但如果想实现依存Engine，Editor，World，LocalPlayer的不同生命周期，就难很多了。你得去注册这些
对象的创建销毁事件，如果没有提供的话，就只能去改源码了，必须修改引擎来在合适的时机插入初始化删除代码。因此相比，Subsystem的实现由引擎开
发人员已经实现好了，我们不用自己处理这点脏活，省心。</p><p data-pid="bhxzBXCP"><b>六，更友好的访问接口</b></p><p data-pid="P-qiTHBk">虽然说UE已经提供了Subsystem的Python的访问，但我在UE里用Python不多，因此不是特别在意。光从蓝图的访问接口来说，Subsystem的样子更像个全局变量，而用静态函数模拟的就还只是个函数。这点差别对强迫症来说 算是一点小福利吧。 </p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-332b42cd92e52826a2c3a2bd85af69a9_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="569" data-rawheight="152" data-original-token="v2-8dee155bd6ebd7c38a1a3439b4c9077c" class="origin_image zh-lightbox-thumb" width="569" data-original="https://pic2.zhimg.com/v2-332b42cd92e52826a2c3a2bd85af69a9_r.jpg"></div></figure><p data-pid="JGnkJzp4">但
其实还有一点比较隐晦的是，Subsystem有个“上下文”的概念。相比MyScoreManager这种全局函数在哪里都可以访问来获得值，
Subsystem的访问接口里会判断当前所属于的对象ContextObject是否能够获得相应的Subsystem对象。比如
UWorldSubsystem，就必须在可以根据当前蓝图对象得到World的时候才能访问值，否则是null。比如你如果在一个UserWidget
里，或者在一个UObject子类对象里，虽然可以写下MyWorldSubsystem节点，但是返回的会是null。
ULocalPlayersystem也是同理。关于“上下文”对象的理解，我们在后面再详述。</p><h2><b>能否再具体解释一下Subsystem对象的创建销毁流程？</b></h2><p data-pid="JE561J1P">如
果你被我成功安利到了，想要开始使用Subsystems，那下一个问题就是如何用好Subsystems呢？我一直有一个观点，纯熟的应用是要建立在深
刻的理解之上的。因此且让我们再花一些时间阐述一下Subsystem对象的具体创建的流程。做到知其然且知其所以然，心中不慌。 
从源码上进行分析，虽然真正核心流程并不长，但具体叙述起来也是篇幅太长，因此这里我叙述一些要点：</p><p data-pid="3358ekVT"><b>一，深刻理解5类Outer对象的生命周期。</b> </p><p data-pid="A2_Qc2Jv">理
解这些引擎重要的内建类的生命周期机制是理解的基础。因此也请读者事先知道引擎编辑器模式、Runtime模式和PIE(Play In 
Editor)模式这三个的区别。编辑器模式就是你启动编辑器，Runtime模式是指你游戏打包后的运行状态，PIE模式指的是在编辑器里点击Play
后的运行状态。</p><ol><li data-pid="tJkMmM5c"><b>UEngine* GEngine： 代表引擎，数量1。</b> Editor或Runtime模式都是全局唯一，从进程启动开始创建，进程退出时销毁。</li><li data-pid="U1CajIEJ"><b>UEditorEngine* GEditor： 代表编辑器，数量1</b>。  顾名思义，只在编辑器下存在且全局唯一，从编辑器启动开始创建，到编辑器退出时销毁。</li><li data-pid="kE3acoax"><b>UGameInstance* GameInstance：代表一场游戏，数量1。</b> 从游戏的启动开始创建，游戏退出时销毁。这里的一场游戏指的是Runtime或PIE模式的运行的都算，一场游戏里可能会创建多个World切换。</li><li data-pid="lQJNWzyT"><b>UWorld* World：代表一个世界，数量可能&gt;1。</b>
 
对此不明白的建议读者去看我之前的GamePlay架构文章。简单来说，World和GameMode是关联的，可以包含多个Level，默认情况下
OpenLevel常常会切换World。因此其生命周期，其实跟GameMode是一起的。但也请读者建议，编辑器模式下视口里的场景其实也是个
World，因此EWorldType其实有多个类型：Game，Editor，PIE，EditorPreview，GamePreview等。读者需
知道，编辑器下的视口场景也是个World!</li><li data-pid="b3YmNMPS"><b>ULocalPlayer* LocalPlayer：代表本地玩家，数量可能&gt;1。</b>
 
UE支持本地分屏多玩家类型的游戏，但往往最常见的是就只有一个。LocalPlayer虽然往往跟PlayerController一起访问，但是其生
命周期其实是跟UGameInstance一起的(默认一开始的时候就创建好一定数量的本地玩家)，或者更准确的说是跟LocalPlayer的具体数量
挂钩（当然你也可以运行时动态调用AddLocalPlayer)。</li></ol><p data-pid="YQxqjdwM">因此你想理解好那5个Subsystem类的生命周期，就得理解这5个Host对象的生命周期。道理很简单，Subsystem对象的创建和销毁都是在Host对象的创建和销毁的时候相应执行的。</p><p data-pid="PKj8Zre3"><b>二，理解Subsystem对象反射创建销毁流程</b> </p><p data-pid="Vu1nH3Id">这5类Outer对象自己创建的时候，都会调用一下<code>FSubsystemCollectionBase::Initialize(UObject* NewOuter)</code>，把自己this作为Outer传进去。因此其Subsystem对象的创建流程其实就在这个函数里面：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">Initialize</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">NewOuter</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">BaseType</span><span class="o">-&gt;</span><span class="n">IsChildOf</span><span class="p">(</span><span class="n">UDynamicSubsystem</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">()))</span><span class="c1">//如果是UDynamicSubsystem的子类
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="k">const</span> <span class="n">TPair</span><span class="o">&lt;</span><span class="n">FName</span><span class="p">,</span> <span class="n">TArray</span><span class="o">&lt;</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&gt;&gt;&amp;</span> <span class="nl">SubsystemClasses</span> <span class="p">:</span> <span class="n">DynamicSystemModuleMap</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span> <span class="p">(</span><span class="k">const</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&amp;</span> <span class="nl">SubsystemClass</span> <span class="p">:</span> <span class="n">SubsystemClasses</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">SubsystemClass</span><span class="o">-&gt;</span><span class="n">IsChildOf</span><span class="p">(</span><span class="n">BaseType</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">AddAndInitializeSubsystem</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>   <span class="c1">//普通Subsystem对象的创建
</span><span class="c1"></span>        <span class="n">TArray</span><span class="o">&lt;</span><span class="n">UClass</span><span class="o">*&gt;</span> <span class="n">SubsystemClasses</span><span class="p">;</span>
        <span class="n">GetDerivedClasses</span><span class="p">(</span><span class="n">BaseType</span><span class="p">,</span> <span class="n">SubsystemClasses</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span><span class="c1">//反射获得所有子类
</span><span class="c1"></span>
        <span class="k">for</span> <span class="p">(</span><span class="n">UClass</span><span class="o">*</span> <span class="nl">SubsystemClass</span> <span class="p">:</span> <span class="n">SubsystemClasses</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">AddAndInitializeSubsystem</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">);</span><span class="c1">//添加初始化Subsystem对象创建
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="lg-r55OE">UDynamicSubsystem的部分，我们稍后再讲。先来
讲那些从USubsystem直接继承下来的子类对象创建，可以看到第一步是由反射获得BaseType（就是生命周期5类）的所有Subsystem子
类。然后对其一一AddAndInitializeSubsystem：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">bool</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">AddAndInitializeSubsystem</span><span class="p">(</span><span class="n">UClass</span><span class="o">*</span> <span class="n">SubsystemClass</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">//...省略一些判断语句，咱们只看核心代码
</span><span class="c1"></span>    <span class="k">const</span> <span class="n">USubsystem</span><span class="o">*</span> <span class="n">CDO</span> <span class="o">=</span> <span class="n">SubsystemClass</span><span class="o">-&gt;</span><span class="n">GetDefaultObject</span><span class="o">&lt;</span><span class="n">USubsystem</span><span class="o">&gt;</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">CDO</span><span class="o">-&gt;</span><span class="n">ShouldCreateSubsystem</span><span class="p">(</span><span class="n">Outer</span><span class="p">))</span>  <span class="c1">//从CDO调用ShouldCreateSubsystem来判断是否要创建
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="n">USubsystem</span><span class="o">*&amp;</span> <span class="n">Subsystem</span> <span class="o">=</span> <span class="n">SubsystemMap</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">);</span><span class="c1">//创建且添加到Map里
</span><span class="c1"></span>        <span class="n">Subsystem</span> <span class="o">=</span> <span class="n">NewObject</span><span class="o">&lt;</span><span class="n">USubsystem</span><span class="o">&gt;</span><span class="p">(</span><span class="n">Outer</span><span class="p">,</span> <span class="n">SubsystemClass</span><span class="p">);</span><span class="c1">//创建对象
</span><span class="c1"></span>
        <span class="n">Subsystem</span><span class="o">-&gt;</span><span class="n">InternalOwningSubsystem</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span><span class="c1">//保存父指针
</span><span class="c1"></span>        <span class="n">Subsystem</span><span class="o">-&gt;</span><span class="n">Initialize</span><span class="p">(</span><span class="o">*</span><span class="k">this</span><span class="p">);</span>   <span class="c1">//调用Initialize
</span><span class="c1"></span>
        <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="7pbdFyWA">这一段代码就核心说明了ShouldCreateSubsystem和Initialize的作用！因此自己可不要忘了重载哦~</p><p data-pid="Jq5_O6b-"><b>那销毁呢？</b>其实在玩家退出游戏或者按照生命周期，遇到Outer对象要被销毁的时候，其内部都加了一句：<code>SubsystemCollection.Deinitialize();</code>，依旧来欣赏一下代码：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">Deinitialize</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">//...省略一些清除代码
</span><span class="c1"></span>    <span class="k">for</span> <span class="p">(</span><span class="k">auto</span> <span class="n">Iter</span> <span class="o">=</span> <span class="n">SubsystemMap</span><span class="p">.</span><span class="n">CreateIterator</span><span class="p">();</span> <span class="n">Iter</span><span class="p">;</span> <span class="o">++</span><span class="n">Iter</span><span class="p">)</span>   <span class="c1">//遍历Map
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="n">UClass</span><span class="o">*</span> <span class="n">KeyClass</span> <span class="o">=</span> <span class="n">Iter</span><span class="p">.</span><span class="n">Key</span><span class="p">();</span>
        <span class="n">USubsystem</span><span class="o">*</span> <span class="n">Subsystem</span> <span class="o">=</span> <span class="n">Iter</span><span class="p">.</span><span class="n">Value</span><span class="p">();</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Subsystem</span><span class="o">-&gt;</span><span class="n">GetClass</span><span class="p">()</span> <span class="o">==</span> <span class="n">KeyClass</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Subsystem</span><span class="o">-&gt;</span><span class="n">Deinitialize</span><span class="p">();</span>  <span class="c1">//反初始化
</span><span class="c1"></span>            <span class="n">Subsystem</span><span class="o">-&gt;</span><span class="n">InternalOwningSubsystem</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">SubsystemMap</span><span class="p">.</span><span class="n">Empty</span><span class="p">();</span>
    <span class="n">Outer</span> <span class="o">=</span> <span class="k">nullptr</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div><p data-pid="3xlRd_Lf">逻辑也非常简单，遍历然后Deinitialize就是！</p><h3><b>思考：那Subsystem是怎么被GC掉的呢？</b></h3><p data-pid="2tyNXwZv">我
们在上述的代码里并不会看到手动的调用Destroy，因为USubsystem对象是个UObject对象，其依然是受GC管理的。Subsystem
对象和Outer对象之前隔了一个FSubsystemCollection结构，为了让F结构依然可以追溯到对象引用，因此
FSubsystemCollectionBase继承于FGCObject，所以我们也能找到如下代码：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">AddReferencedObjects</span><span class="p">(</span><span class="n">FReferenceCollector</span><span class="o">&amp;</span> <span class="n">Collector</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Collector</span><span class="p">.</span><span class="n">AddReferencedObjects</span><span class="p">(</span><span class="n">SubsystemMap</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div><p data-pid="QDxz_CTO">当<code>FSubsystemCollectionBase::Deinitialize()</code>里进行<code>SubsystemMap.Empty();</code>后，
USubsystem对象就没有被持有引用了，在下一帧的GC的时候，就会被判定为PendingKill的对象，从而得到Destroy。 
这里的妙处是，直接利用了UObject对象之间引用所带来的生命周期绑定机制，来直接把USubsystem对象的生命周期和其Outer对象关联起
来，而不用写重复的代码。秒啊！</p><p data-pid="Daw-ZcKq"><b>三，理解UDynamicSubsystem</b></p><p data-pid="ClLze-cS">从一开始的类继承结构来看，读者们肯定已经发现UEngineSubsystem和UEditorSubsystem是继承于UDynamicSubsystem的，那为什么要如此设计呢？ </p><p data-pid="2xzdCBDU">顾名思义，其为动态Subsystem，动态二字，表明其会被动态的对待。<b>这里的动态特指随着模块的加载释放来创建和销毁。</b>要
理解这点，首先要理解UE4的模块机制，简单来说，一个uproject项目或uplugin插件可以包含多个Module模块，每个Module可以有
个Build.cs，每个模块可以被编译成一个Dll。模块之间可以互相引用。因此一个模块可能有多个依赖的其他模块，我们假如叫它：
DependencyModules。引擎的机制是加载一个模块的时候会自动的加载DependencyModules，</p><p data-pid="Fa_ux9aB">首
先假设我有一个插件叫做MyPlugin.uplugin，然后有个项目Hello.uproject，Hello项目想使用MyPlugin插件。
MyPlugin里依次都定义了：UMyPluginEngineSubsystem，UMyPluginEditorSubsystem和
UMyPluginGameInstanceSubsystem。</p><p data-pid="Ar7-cmls"><b>显式添加依赖的方式：事先配置好DependencyModules</b></p><p data-pid="cz0K6RWs">当你在Hello项目插件设置上上开启MyPlugin，或者在Hello.uproject里写上<code>"Plugins": [{"Name": "MyPlugin","Enabled": true}]</code>，或者在Build.cs里加上<code>PublicDependencyModuleNames.Add("MyOtherModule");</code>，
这些方式其实都是在显式的在一开始配置好项目的DependencyModules。这样当Hello模块启动的时候，引擎会自动的加载其依赖模块
(MyPlugin)，从而你会发现UMyPluginEngineSubsystem和UMyPluginEditorSubsystem在编辑器一启
动的时候就会创建并Initialize。 
但是如下的代码分支，其实是只在GEditor初始化的时候才会调用到，因为这个时候其他插件里模块还没有加载。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">Initialize</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">NewOuter</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">BaseType</span><span class="o">-&gt;</span><span class="n">IsChildOf</span><span class="p">(</span><span class="n">UDynamicSubsystem</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">()))</span><span class="c1">//如果是UDynamicSubsystem的子类
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="k">const</span> <span class="n">TPair</span><span class="o">&lt;</span><span class="n">FName</span><span class="p">,</span> <span class="n">TArray</span><span class="o">&lt;</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&gt;&gt;&amp;</span> <span class="nl">SubsystemClasses</span> <span class="p">:</span> <span class="n">DynamicSystemModuleMap</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span> <span class="p">(</span><span class="k">const</span> <span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&amp;</span> <span class="nl">SubsystemClass</span> <span class="p">:</span> <span class="n">SubsystemClasses</span><span class="p">.</span><span class="n">Value</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">SubsystemClass</span><span class="o">-&gt;</span><span class="n">IsChildOf</span><span class="p">(</span><span class="n">BaseType</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">AddAndInitializeSubsystem</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>   <span class="c1">//普通Subsystem对象的创建
</span><span class="c1"></span>    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="BLzjPDM1">这个时候加载的DynamicSystemModuleMap中
最重要的就是UnrealEd模块。UnrealEd里面本身其实也已经定义了几个Subsystem: 
AssetEditorSubsystem，BrushEditingSubsystem，ImportSubsystem，
LayersSubsystem和PanelExtensionSubsystem。</p><p data-pid="pNn9cPAL"><b>那MyPlugin里的Subsystem什么时候创建呢？</b> </p><p data-pid="ZSl20cdd">还是这块代码，其实在第一次初始化的时候，就用FSubsystemModuleWatcher</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">Initialize</span><span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="n">NewOuter</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">SubsystemCollections</span><span class="p">.</span><span class="n">Num</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span><span class="c1">//静态变量，用数目来判断是第一次创建
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="n">FSubsystemModuleWatcher</span><span class="o">::</span><span class="n">InitializeModuleWatcher</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">FSubsystemModuleWatcher</span><span class="o">::</span><span class="n">InitializeModuleWatcher</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">// 获得所有UDynamicSubsystem的子类
</span><span class="c1"></span>    <span class="n">TArray</span><span class="o">&lt;</span><span class="n">UClass</span><span class="o">*&gt;</span> <span class="n">SubsystemClasses</span><span class="p">;</span>
    <span class="n">GetDerivedClasses</span><span class="p">(</span><span class="n">UDynamicSubsystem</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">(),</span> <span class="n">SubsystemClasses</span><span class="p">,</span> <span class="nb">true</span><span class="p">);</span>

    <span class="k">for</span> <span class="p">(</span><span class="n">UClass</span><span class="o">*</span> <span class="nl">SubsystemClass</span> <span class="p">:</span> <span class="n">SubsystemClasses</span><span class="p">)</span> <span class="c1">//遍历
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">SubsystemClass</span><span class="o">-&gt;</span><span class="n">HasAllClassFlags</span><span class="p">(</span><span class="n">CLASS_Abstract</span><span class="p">))</span>  <span class="c1">//不为抽象类
</span><span class="c1"></span>        <span class="p">{</span>
            <span class="n">UPackage</span><span class="o">*</span> <span class="k">const</span> <span class="n">ClassPackage</span> <span class="o">=</span> <span class="n">SubsystemClass</span><span class="o">-&gt;</span><span class="n">GetOuterUPackage</span><span class="p">();</span><span class="c1">//获得所属于的包
</span><span class="c1"></span>            <span class="k">if</span> <span class="p">(</span><span class="n">ClassPackage</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">const</span> <span class="n">FName</span> <span class="n">ModuleName</span> <span class="o">=</span> <span class="n">FPackageName</span><span class="o">::</span><span class="n">GetShortFName</span><span class="p">(</span><span class="n">ClassPackage</span><span class="o">-&gt;</span><span class="n">GetFName</span><span class="p">());</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">FModuleManager</span><span class="o">::</span><span class="n">Get</span><span class="p">().</span><span class="n">IsModuleLoaded</span><span class="p">(</span><span class="n">ModuleName</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">TArray</span><span class="o">&lt;</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&gt;&amp;</span> <span class="n">ModuleSubsystemClasses</span> <span class="o">=</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">DynamicSystemModuleMap</span><span class="p">.</span><span class="n">FindOrAdd</span><span class="p">(</span><span class="n">ModuleName</span><span class="p">);</span>
                    <span class="n">ModuleSubsystemClasses</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">);</span><span class="c1">//添加到DynamicSystemModuleMap
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="c1">//注册模块加载和释放事件
</span><span class="c1"></span>    <span class="n">ModulesChangedHandle</span> <span class="o">=</span> <span class="n">FModuleManager</span><span class="o">::</span><span class="n">Get</span><span class="p">().</span><span class="n">OnModulesChanged</span><span class="p">().</span><span class="n">AddStatic</span><span class="p">(</span><span class="o">&amp;</span><span class="n">FSubsystemModuleWatcher</span><span class="o">::</span><span class="n">OnModulesChanged</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div><p data-pid="DTAMNnzV">其中最重要的就是遍历当前进程里的UDynamicSubsystem子类们，并按照模块划分存储进DynamicSystemModuleMap，这样之后就知道当加载或释放某个模块的时候，应该去创建和销毁哪些Subsystem类型对象。</p><p data-pid="lIAFTLjs">第二步是OnModulesChanged事件的注册，这样在后面加载的模块就能够得到通知：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemModuleWatcher</span><span class="o">::</span><span class="n">OnModulesChanged</span><span class="p">(</span><span class="n">FName</span> <span class="n">ModuleThatChanged</span><span class="p">,</span> <span class="n">EModuleChangeReason</span> <span class="n">ReasonForChange</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">switch</span> <span class="p">(</span><span class="n">ReasonForChange</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">case</span> <span class="n">EModuleChangeReason</span><span class="o">::</span><span class="nl">ModuleLoaded</span><span class="p">:</span>
        <span class="n">AddClassesForModule</span><span class="p">(</span><span class="n">ModuleThatChanged</span><span class="p">);</span><span class="c1">//创建一个模块的DynamicSubsystem类们
</span><span class="c1"></span>        <span class="k">break</span><span class="p">;</span>

    <span class="k">case</span> <span class="n">EModuleChangeReason</span><span class="o">::</span><span class="nl">ModuleUnloaded</span><span class="p">:</span>
        <span class="n">RemoveClassesForModule</span><span class="p">(</span><span class="n">ModuleThatChanged</span><span class="p">);</span><span class="c1">//销毁一个模块的DynamicSubsystem类们
</span><span class="c1"></span>        <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="mhLnFoNY">而这两个方法的实现其实也挺简单，就是查找该代码模块里定义的类看看是否是UDynamicSubsystem子类，然后为其创建对象实例。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemModuleWatcher</span><span class="o">::</span><span class="n">AddClassesForModule</span><span class="p">(</span><span class="k">const</span> <span class="n">FName</span><span class="o">&amp;</span> <span class="n">InModuleName</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">// 找到这个模块所定义的代码包
</span><span class="c1"></span>    <span class="k">const</span> <span class="n">UPackage</span><span class="o">*</span> <span class="k">const</span> <span class="n">ClassPackage</span> <span class="o">=</span> <span class="n">FindPackage</span><span class="p">(</span><span class="k">nullptr</span><span class="p">,</span> <span class="o">*</span><span class="p">(</span><span class="n">FString</span><span class="p">(</span><span class="s">"/Script/"</span><span class="p">)</span> <span class="o">+</span> <span class="n">InModuleName</span><span class="p">.</span><span class="n">ToString</span><span class="p">()));</span>

    <span class="n">TArray</span><span class="o">&lt;</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&gt;</span> <span class="n">SubsystemClasses</span><span class="p">;</span>
    <span class="n">TArray</span><span class="o">&lt;</span><span class="n">UObject</span><span class="o">*&gt;</span> <span class="n">PackageObjects</span><span class="p">;</span>
    <span class="n">GetObjectsWithOuter</span><span class="p">(</span><span class="n">ClassPackage</span><span class="p">,</span> <span class="n">PackageObjects</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span><span class="c1">//得到该模块里定义的所有对象
</span><span class="c1"></span>    <span class="k">for</span> <span class="p">(</span><span class="n">UObject</span><span class="o">*</span> <span class="nl">Object</span> <span class="p">:</span> <span class="n">PackageObjects</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">UClass</span><span class="o">*</span> <span class="k">const</span> <span class="n">CurrentClass</span> <span class="o">=</span> <span class="n">Cast</span><span class="o">&lt;</span><span class="n">UClass</span><span class="o">&gt;</span><span class="p">(</span><span class="n">Object</span><span class="p">);</span><span class="c1">//转成UClass试试
</span><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="n">CurrentClass</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">CurrentClass</span><span class="o">-&gt;</span><span class="n">HasAllClassFlags</span><span class="p">(</span><span class="n">CLASS_Abstract</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">CurrentClass</span><span class="o">-&gt;</span><span class="n">IsChildOf</span><span class="p">(</span><span class="n">UDynamicSubsystem</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">()))</span><span class="c1">//满足这些条件
</span><span class="c1"></span>        <span class="p">{</span>
            <span class="n">SubsystemClasses</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">CurrentClass</span><span class="p">);</span>
            <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">AddAllInstances</span><span class="p">(</span><span class="n">CurrentClass</span><span class="p">);</span><span class="c1">//为这个类创建对象实例
</span><span class="c1"></span>        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">SubsystemClasses</span><span class="p">.</span><span class="n">Num</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span><span class="c1">//如果其内部有定义Subsystem类，有些可能没有
</span><span class="c1"></span>    <span class="p">{</span>   <span class="c1">//就需要登记一下
</span><span class="c1"></span>        <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">DynamicSystemModuleMap</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">InModuleName</span><span class="p">,</span> <span class="n">MoveTemp</span><span class="p">(</span><span class="n">SubsystemClasses</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">FSubsystemModuleWatcher</span><span class="o">::</span><span class="n">RemoveClassesForModule</span><span class="p">(</span><span class="k">const</span> <span class="n">FName</span><span class="o">&amp;</span> <span class="n">InModuleName</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">TArray</span><span class="o">&lt;</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&gt;*</span> <span class="n">SubsystemClasses</span> <span class="o">=</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">DynamicSystemModuleMap</span><span class="p">.</span><span class="n">Find</span><span class="p">(</span><span class="n">InModuleName</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">SubsystemClasses</span><span class="p">)</span><span class="c1">//如果能找到，说明其之前有登记过
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">TSubclassOf</span><span class="o">&lt;</span><span class="n">UDynamicSubsystem</span><span class="o">&gt;&amp;</span> <span class="nl">SubsystemClass</span> <span class="p">:</span> <span class="o">*</span><span class="n">SubsystemClasses</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">RemoveAllInstances</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">);</span><span class="c1">//销毁这个类的所有对象
</span><span class="c1"></span>        <span class="p">}</span>
        <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">DynamicSystemModuleMap</span><span class="p">.</span><span class="n">Remove</span><span class="p">(</span><span class="n">InModuleName</span><span class="p">);</span><span class="c1">//移除登记
</span><span class="c1"></span>    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p data-pid="jYpxWQHu">创建和销毁类的对象实例代码：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">AddAllInstances</span><span class="p">(</span><span class="n">UClass</span><span class="o">*</span> <span class="n">SubsystemClass</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">FSubsystemCollectionBase</span><span class="o">*</span> <span class="nl">SubsystemCollection</span> <span class="p">:</span> <span class="n">SubsystemCollections</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">SubsystemClass</span><span class="o">-&gt;</span><span class="n">IsChildOf</span><span class="p">(</span><span class="n">SubsystemCollection</span><span class="o">-&gt;</span><span class="n">BaseType</span><span class="p">))</span>
        <span class="p">{</span>   <span class="c1">//这个函数之前解释过，用来创建对象
</span><span class="c1"></span>            <span class="n">SubsystemCollection</span><span class="o">-&gt;</span><span class="n">AddAndInitializeSubsystem</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="n">FSubsystemCollectionBase</span><span class="o">::</span><span class="n">RemoveAllInstances</span><span class="p">(</span><span class="n">UClass</span><span class="o">*</span> <span class="n">SubsystemClass</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">ForEachObjectOfClass</span><span class="p">(</span><span class="n">SubsystemClass</span><span class="p">,</span> <span class="p">[](</span><span class="n">UObject</span><span class="o">*</span> <span class="n">SubsystemObj</span><span class="p">)</span><span class="c1">//遍历属于该类型的对象们
</span><span class="c1"></span>    <span class="p">{</span>
        <span class="n">USubsystem</span><span class="o">*</span> <span class="n">Subsystem</span> <span class="o">=</span> <span class="n">CastChecked</span><span class="o">&lt;</span><span class="n">USubsystem</span><span class="o">&gt;</span><span class="p">(</span><span class="n">SubsystemObj</span><span class="p">);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">Subsystem</span><span class="o">-&gt;</span><span class="n">InternalOwningSubsystem</span><span class="p">)</span>
        <span class="p">{</span>   <span class="c1">//也是大同小异的释放操作
</span><span class="c1"></span>            <span class="n">Subsystem</span><span class="o">-&gt;</span><span class="n">InternalOwningSubsystem</span><span class="o">-&gt;</span><span class="n">RemoveAndDeinitializeSubsystem</span><span class="p">(</span><span class="n">Subsystem</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div><p data-pid="JvuSSwFi">这里的关键是SubsystemCollections是个静态
变量，其引用了整个进程的所有定义的FSubsystemCollection的数量（2个在GEngine和GEditor里，其他多个可能动态新增在
GameInstance，World，LocalPlayer里），这么写其实只是保险一点保证一个Subsystem类型的对象能够自动的多个
SubsystemCollection里正确的创建多个。因为AddAllInstances也可能是个会被复用的方法。</p><p data-pid="LQeASaDS">说了一大堆，其实想说明MyPlugin模块在被加载的时候，会自动的触发OnModulesChanged事件，从而被自动的创建出内部的UMyPluginEngineSubsystem和UMyPluginEditorSubsystem。</p><p data-pid="phz2ZpWd"><b>后期动态加载模块或插件：</b></p><p data-pid="X9OjCYJp">如果你不写上述的那些“静态”引用方式，想要在游戏或编辑器运行一段时间后然后动态的加载某个模块或插件。UE当然也支持，方法是： </p><p data-pid="s8ohV53p">对于模块，假如MyOtherModule是Hello项目里定义的另一个模块，你别在Build.cs添加Dependency引用，反而选择在后续的时机调用<code>FModuleManager::Get().LoadModule(TEXT("MyOtherModule"));</code>,你就会发现MyOtherModule的StartupModule开始调用了。如果这个模块里有定义DynamicSubsystem，其会被创建出来。 对于插件，假如Hello项目不开启MyPlugin插件，<b>且在MyPlugin.uplugin里加上一句：<code>"ExplicitlyLoaded": true</code></b>，这一句很重要，表明后面要显式的动态加载。这样你在之后的时机里调用：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">FString</span> <span class="n">path</span><span class="o">=</span> <span class="n">FPaths</span><span class="o">::</span><span class="n">Combine</span><span class="p">(</span><span class="n">FPaths</span><span class="o">::</span><span class="n">ProjectPluginsDir</span><span class="p">(),</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"MyPlugin/MyPlugin.uplugin"</span><span class="p">));</span>
<span class="n">IPluginManager</span><span class="o">::</span><span class="n">Get</span><span class="p">().</span><span class="n">AddToPluginsList</span><span class="p">(</span><span class="n">path</span><span class="p">);</span><span class="c1">//添加插件路径让可以找到
</span><span class="c1"></span><span class="n">IPluginManager</span><span class="o">::</span><span class="n">Get</span><span class="p">().</span><span class="n">MountExplicitlyLoadedPlugin</span><span class="p">(</span><span class="n">TEXT</span><span class="p">(</span><span class="s">"MyPlugin"</span><span class="p">));</span><span class="c1">//显式加载
</span></code></pre></div><p data-pid="66IWE3VH">这样这个插件就会被加载起来了。UMyPluginEngineSubsystem和UMyPluginEditorSubsystem也就会在这个时候被创建出来了。</p><p data-pid="mUat08Mf"><b>总结一下</b>，MyPlugin里的DynamicSubsystem们，虽然都是靠触发OnModulesChanged事件来创建和销毁自己。但是根据你项目配置模块引用的不同，时机也可以不同。<b>所以DynamicSubsystem可以根据Module的加载释放来创建销毁，就是此动态的含义！</b></p><h3><b>思考：动态加载MyPlugin里的UMyPluginGameInstanceSubsystem可以正常工作吗？</b></h3><p data-pid="5TGDBIwP">答案是可以。UMyPluginGameInstanceSubsystem虽然不是UDynamicSubsystem，但因为其需要创建的时机是游戏运行时。而这个时候，其实你如果去<code>GetDerivedClasses(TSubclassOf&amp;lt;UGameInstanceSubsystem&amp;gt;)</code>，
你可以成功的获得到UMyPluginGameInstanceSubsystem。原因是MyPlugin这个模块dll加载的时候，其身带的反射代码
里的全局静态变量会自动的在进程里注册进各种类型。这部分机制请参考我之前写的UObject文章，说来实在太话长了。所以MyPlugin已经被加载进
来之后，你再点击Play，这个时候已经可以正确的使用MyPlugin里定义的非DynamicSubystem了。</p><h3><b>思考：那为什么只有UEngineSubsystem和UEditorSubsystem才是UDynamicSubsystem呢？</b></h3><p data-pid="Xc3jJ7_g">还是得从生命周期来思考。生命周期5类中，只有UEngineSubsystem和UEditorSubsystem的生命周期是跟游戏的进程绑定在一起的。因此<b>游戏进程启动的时候创建Subsystem叫做默认创建，游戏进程启动一段时间后想创建Subsystem叫做动态创建</b>。
而对于另外3个：UGameInstanceSubsystem，UWorldSubsystem和ULocalPlayerSubsystem，你观察
一下，发现这3者都是跟一场游戏的生命周期绑定的！因此无论这3者定义上如何动态，其在编辑器启动后，都不会创建出来！而反正<b>这3者会随着Play和Stop来反反复复的创建和销毁，其本身已经足够动态！</b>因此就不需要专门处理了。结论还是其根据生命周期的不同而定的机制。 </p><p data-pid="iZgQVud2">那
前面说过了，UWorldSubsystem可能也会被WorldType::Editor的创建出来，其明显生命周期不是跟游戏一起的，编辑器如果已经
完全启动完成了，那再动态加载的插件里定义的WorldSubsystem其实并不能扩展到Editor的World里。那这怎么理解呢？你可以把这当做
是一种疏漏，但也可以当做是一种小故意。其含义就是：</p><ul><li data-pid="9-q0mEuF">Engine和Editor在启动前启动后，都可以通过静态或动态加载插件来扩展。</li><li data-pid="Xi1WMugX">Game的部分，如果想扩展的话，就尽量在Game启动之前。</li></ul><p data-pid="hzkXV1uO">理论上你当然可以做一些骚操作，在游戏运行一半的时候，动态加载某个插件，然后再下个World里应用上你新增的WorldSubsystem，但实际情况是没这必要这么麻烦，因为已经有ShouldCreateSubsystem可以让你控制了。</p><p data-pid="a6dLlMWc"><b>四，理解Subsystem对象的个体生命周期</b> </p><p data-pid="zNHsiMT8">这一部分比较简单，就是你要理解好一个Subsystem对象：ShouldCreateSubsystem，Initialize和Deinitialize的调用时机才知道应该怎么重载。 </p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-933729259852ecba032db5b19a6ebf4f_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="984" data-rawheight="554" data-original-token="v2-5572a4e08e9176f3d7993fe322cd5c64" class="origin_image zh-lightbox-thumb" width="984" data-original="https://picx.zhimg.com/v2-933729259852ecba032db5b19a6ebf4f_r.jpg"></div></figure><p data-pid="MX_IL0b1">要明白USubsystem本身是一个UObject，所以必然有CDO。自己用的时候要注意这一点。</p><p data-pid="UV4tQ402"><b>五，总结一下其生命周期的不同时机</b> </p><p data-pid="2PK9Rj95">絮
叨了一堆，希望读者们能清晰明白到生命周期其关键点就在于什么时候触发SystemCollection的Initiaze和DeInitialize，
根据Outer对象自身运行机制生命周期的不同，由此搭配出不同的使用方式。在理解了这些不同Subsystem对象的不同之后，也许你也可以由此组织实
现符合自己需求的加载创建策略。 </p><figure data-size="normal"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-69546312c4c3c05093f94f12b60904cf_1440w.jpg" data-caption="" data-size="normal" data-rawwidth="1233" data-rawheight="486" data-original-token="v2-47b76ae554f09a8f56b299849f696d17" class="origin_image zh-lightbox-thumb" width="1233" data-original="https://pic2.zhimg.com/v2-69546312c4c3c05093f94f12b60904cf_r.jpg"></div></figure><h2><b>如何用好Subsystems？</b></h2><p data-pid="wnGbOK7l">如果说到学习使用Subsystems的难点是什么，那肯定是如何用好它了！Subsystems本身是机制和使用方式并不复杂，但反而容易令人疑惑的是：<b>该把自己项目的哪些业务逻辑封装成Subsystem？</b> </p><p data-pid="uR9QYYbc">一谈到编程实践，笔者本身并无金科玉律可传授，但可分享一些理解的点和使用的经验：</p><p data-pid="1KEtwR2W"><b>1. Subsystem是GamePlay级别的Component。</b>要好好理解这句话的关键是，你要明白：</p><ul><li data-pid="4-WbtDzM">Component组件模式在程序架构中的作用套路，组合胜过继承而带来的灵活性。</li><li data-pid="8M72qvdb">清晰区分通用功能和业务逻辑。对于一个游戏来说，通用功能可能是人物按格子行走的<b>能力</b>，而业务逻辑是这个人物自身的战斗结算系统。通常来说，我倾向于把功能理解为可在不同游戏之间复用的功能，尽量与某款特定游戏无关，而与某类游戏相关，比如CharacterMovement。那自然的，剩下的与某款游戏强相关的部分，就是该游戏的业务逻辑部分了。对于<b>功能能力</b>，你应该用ActorComponent来实现。对于<b>业务逻辑</b>，你应该用Subsystem来实现。更清晰的对比是：</li><ul><li data-pid="qbgnzVTN">ActorComponent：依托Actor存在，封装基础的功能，着眼于某一功能的实现。</li><li data-pid="sinLno-H">Subsystem：依托GamePlay对象存在，封装游戏的业务逻辑，专注于某部分游戏逻辑系统的调度安排。</li><li data-pid="sCudT3et">二者是配合补充的关系。Component在底层专注于功能，Subsystem在上层统筹调度。虽然二者也可以有一些交集，可以替代着实现一些功能，但笔者并不建议如此。</li></ul></ul><p data-pid="OFNRyEFn"><b>2. USubsystem只是个普通的UObject。</b>
 
所以，别害怕，USubsystem并没有什么特殊的，你之前可以在UObject里写的东西，可以实现的功能，依然可以在USubsystem里实现。
所以你可以在里面写UPROPERTY和UFUNCTION，也可以定义事件，也可以被蓝图继承引用等等。只是心里永远有个意识，Subsystem的生
命周期处于你的掌控之中。</p><p data-pid="zxTH2z6X"><b>3. Subsystem是有状态的。</b>很多人可能还发现其跟蓝图函数库有点相像，但其最大的区别是蓝图函数库本身全都是静态函数，是无状态的。而Subsystem对象里面可以放属性，会真正的被构建出对象来，因此是有状态的。理论上你也是可以对此序列化的。</p><p data-pid="iYCgp46r"><b>4. 尽量不要再写Manager类了。</b>在
以前你或许会自己定义一些Manager类，比如MapManager之类的，但现在都可以换成UMapWorldSubsystem了。理由是之前我们
定义Manager类，无非是想要有一个全局的统一管理类来统筹做一些调度管理，现在这部分工作可以由Subsystem来做了。自己定义的
Manager类的理由和空间越来越小了。</p><p data-pid="_3Q6VYui"><b>5. 引擎源码里已经定义了一些Subsystem，方便你抄袭学习。</b> UE引进了Subsystem并不是只对外提供给开发者使用的，其内部也自己先吃了Dogfood，把一些功能改造成Subsystem了。简单列一下列表。具体的功能不解释了，有兴趣自己去模板。</p><ul><li data-pid="4l4EyOX8">UEditorSubsystem</li><ul><li data-pid="fIGDQMXY">UnrealEd.AssetEditorSubsystem</li><li data-pid="X4z8U4ia">UnrealEd.BrushEditingSubsystem</li><li data-pid="Rze2CXMl">UnrealEd.ImportSubsystem</li><li data-pid="JFmYJvtS">UnrealEd.LayersSubsystem</li><li data-pid="mvalFpWX">UnrealEd.PanelExtensionSubsystem</li><li data-pid="48BvO5fb">MovieRenderPipelineEditor.MoviePipelineQueueSubsystem</li><li data-pid="t6MfRiG3">Blutility.EditorUtilitySubsystem</li><li data-pid="KGbTgBs3">GeometryMode.UBrushEditingSubsystem</li><ul><li data-pid="hsNL6DeP">GeometryMode.UBrushEditingSubsystemImpl</li></ul><li data-pid="sBaD02K4">VirtualProductionUtilities.UVPScoutingSubsystem</li><li data-pid="RWOonwVu">DataValidation.UEditorValidatorSubsystem</li></ul><li data-pid="5knvZO7p">UWorldSubsystem</li><ul><li data-pid="k0DpLhEa">Landscape.LandscapeSubsystem</li><li data-pid="2SpKydr_">Engine.AutoDestroySubsystem</li><li data-pid="tmHMqiiP">Engine.ObjectTraceWorldSubsystem</li></ul></ul><h2><b>使用Subsystems的各种姿势</b></h2><p data-pid="je27h2SC">继续分享一些能想到的编写Subsystems的套路：</p><p data-pid="AqomNjTf"><b>1. 可定义一个Subsystem抽象基类，然后派生多个子类。</b> </p><p data-pid="YjWNkYxn">用这种方式，依然可以在Subsystem的继承体系里往上抽象一些基本逻辑。官方直播里举的一个例子我觉得特别的形象，假如你要实现版本控制系统，且同时支持多个协议。这时你就可以定一个<code>UCLASS(abstract) USourceControlSubsystem</code>，
然后往下派生出UGitSubsystem，USVNSubsystem，UPerforceSubsystem等等。原因是这些版本管理系统是拥有一些
共同机制的。但请注意在基类上务必加上abstract的标记，以防止其也被实例化出来，那就很容易引起混淆了。 
然后引擎还支持Subsystem的遍历：</p><div class="highlight"><pre><code class="language-cpp"><span class="k">const</span> <span class="n">TArray</span><span class="o">&lt;</span><span class="n">USourceControlSubsystem</span><span class="o">*&gt;&amp;</span> <span class="n">systems</span><span class="o">=</span> <span class="n">GEngine</span><span class="o">-&gt;</span><span class="n">GetEngineSubsystemArray</span><span class="o">&lt;</span><span class="n">USourceControlSubsystem</span><span class="o">&gt;</span><span class="p">();</span>
</code></pre></div><p data-pid="yuVNNmcX">这样就可以获得其多个git，svn等Subsystem实例了。</p><p data-pid="zkZLXMHo"><b>2. Subsystem也支持蓝图继承！</b> </p><p data-pid="GT8IQOqL">目前虽然不支持直接在蓝图里定义Subsystem，究其原因是生命周期5类定义的时候UCLASS里都没加上Blueprintable标记。但这一步其实很容易绕过，只要你自己定义的Subsystem上的UCLASS里加上标记：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UCLASS</span><span class="p">(</span><span class="n">abstract</span><span class="p">,</span> <span class="n">Blueprintable</span><span class="p">,</span> <span class="n">BlueprintType</span><span class="p">)</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyGameInstanceSubsystemBase</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstanceSubsystem</span>
<span class="p">{</span>
<span class="p">}</span>
</code></pre></div><p data-pid="v1sHJf54">这样就可以在蓝图里继承然后使用了。依然加上abstract的用意是防止UMyGameInstanceSubsystemBase被实例化出来，造成混淆。Blueprintable和BlueprintType是支持蓝图继承和定义变量。</p><p data-pid="wVs1YaxX">注
意：抱歉，之前没有写清楚。有些人反馈遇见了蓝图Subsystem无法创建的问题。这个问题的原因是，如果你的蓝图类只是创建出来，但是在还没有被加载
的时候，这个蓝图类的类型其实还没有注册到UE的类型系统里。因此就导致了SubsystemCollection在搜集和创建的时候，无法识别到该蓝图
类，因此就无法创建出来。特别要提醒注意的是，这个问题很隐晦，很多人可能会发现有时可以创建有时失败，很有可能只是因为有时你在UE编辑器里双击打开了
这个Subsystem蓝图类，而有时没有。在编辑器里双击打开蓝图类其实就会触发BP的加载，因此会发现PIE的时候就能正确创建了，而有时你没打开，
就会创建失败。</p><p data-pid="7DYMtaw0">理解了原因之后，解决的方式其实就很简单了，只要我们手动的触发一个Load，就可以了。</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">FHelloModule</span><span class="o">::</span><span class="n">StartupModule</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">UObject</span><span class="o">*</span> <span class="n">bpAsset</span> <span class="o">=</span> <span class="n">LoadObject</span><span class="o">&lt;</span><span class="n">UObject</span><span class="o">&gt;</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">TEXT</span><span class="p">(</span><span class="s">"/Game/BP_MyGameInstanceSubsystem.BP_MyGameInstanceSubsystem_C"</span><span class="p">));</span>
<span class="p">}</span>
</code></pre></div><p data-pid="NVTiLNU5">因此假如我们在模块的StartupModule里自己手动加载一下这个蓝图，其实就可以创建成功了。</p><p data-pid="RDPnard9"><b>3. 同一个BaseType下的多个Subsystem可以定义依赖顺序</b></p><p data-pid="1-ku7Ssy">虽然不太推荐在Subsystem之间构成强顺序依赖，但万一你真的需要的话，比如任务系统依赖于计分系统的计算结果来决定是否触发某个任务。这个时候，你可以这么写：</p><div class="highlight"><pre><code class="language-cpp"><span class="kt">void</span> <span class="n">UMyTaskSubsystem</span><span class="o">::</span><span class="n">Initialize</span><span class="p">(</span><span class="n">FSubsystemCollectionBase</span><span class="o">&amp;</span> <span class="n">Collection</span><span class="p">)</span>
<span class="p">{</span>
    <span class="c1">//初始化依赖项
</span><span class="c1"></span>    <span class="n">Collection</span><span class="p">.</span><span class="n">InitializeDependency</span><span class="p">(</span><span class="n">UMyScoreSubsystem</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">());</span>
    <span class="c1">//获取
</span><span class="c1"></span>    <span class="n">UMyScoreSubsystem</span><span class="o">*</span> <span class="n">ss</span><span class="o">=</span><span class="p">((</span><span class="n">FSubsystemCollection</span><span class="o">&lt;</span><span class="n">UGameInstanceSubsystem</span><span class="o">&gt;&amp;</span><span class="p">)</span><span class="n">Collection</span><span class="p">).</span><span class="n">GetSubsystem</span><span class="o">&lt;</span><span class="n">UMyScoreSubsystem</span><span class="o">&gt;</span><span class="p">(</span><span class="n">UMyScoreSubsystem</span><span class="o">::</span><span class="n">StaticClass</span><span class="p">());</span>
<span class="p">}</span>
</code></pre></div><p data-pid="tZksLqBS">InitializeDependency内部会调用一下AddAndInitializeSubsystem来确保UMyScoreSubsystem已经被创建出来。这样你在后续就可以访问了。现在的访问方式依然有点别扭，希望后续可以改善。</p><p data-pid="vGQlEvzx"><b>4. Subsystem之间也可以通信</b> </p><p data-pid="JJ6hn-vC">只
要你获取到目标Subsystem的对象引用，你就可以使用它了。获取的方式有多种，一种是通过GEngine或GetGameInstance()等外
部对象开始，然后GetSubsystem()来特定的获取。另一种是通过Subsystem在Initialize的时候，保存下其他
Subsystem对象的指针来后续访问。</p><p data-pid="MIlCgHzw"><b>5. Subsystem也可以支持Tick</b> </p><p data-pid="Z0U0HSRs">参考源码里的UAutoDestroySubsystem，咱们自己写一个支持Tick的Subsystem可以继承自FTickableGameObject：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">UCLASS</span><span class="p">()</span>
<span class="k">class</span> <span class="nc">HELLO_API</span> <span class="nl">UMyTickSubsystem</span> <span class="p">:</span> <span class="k">public</span> <span class="n">UGameInstanceSubsystem</span><span class="p">,</span><span class="k">public</span> <span class="n">FTickableGameObject</span>
<span class="p">{</span>
    <span class="n">GENERATED_BODY</span><span class="p">()</span>
<span class="k">public</span><span class="o">:</span>
    <span class="k">virtual</span> <span class="kt">void</span> <span class="n">Tick</span><span class="p">(</span><span class="kt">float</span> <span class="n">DeltaTime</span><span class="p">)</span> <span class="k">override</span><span class="p">;</span>
    <span class="k">virtual</span> <span class="kt">bool</span> <span class="nf">IsTickable</span><span class="p">()</span> <span class="k">const</span> <span class="k">override</span> <span class="p">{</span> <span class="k">return</span> <span class="o">!</span><span class="n">IsTemplate</span><span class="p">();</span> <span class="p">}</span><span class="c1">//不是CDO才Tick
</span><span class="c1"></span>    <span class="k">virtual</span> <span class="n">TStatId</span> <span class="nf">GetStatId</span><span class="p">()</span> <span class="k">const</span> <span class="k">override</span><span class="p">{</span><span class="n">RETURN_QUICK_DECLARE_CYCLE_STAT</span><span class="p">(</span><span class="n">UMyScoreSubsystem</span><span class="p">,</span> <span class="n">STATGROUP_Tickables</span><span class="p">);}</span>
<span class="p">};</span>
</code></pre></div><p data-pid="rnpd0IMF">其中IsTickable的实现要注意一下避免CDO，否则会造成Tick两次。</p><p data-pid="meKyW_oG"><b>6. SubSystem里定义一些委托回调是一个常用的套路</b></p><p data-pid="4y1FjvsP">还是以Score系统为例子，Subsystem往往自身都带有一些业务数据。而当这些数据改变的时候，往往也需要通知一些对象如UI来更新状态。这个时候可以定义一些委托回调：</p><div class="highlight"><pre><code class="language-cpp"><span class="n">DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam</span><span class="p">(</span><span class="n">FScoreChanged</span><span class="p">,</span> <span class="kt">float</span><span class="p">,</span> <span class="n">NewScore</span><span class="p">);</span>

<span class="n">UPROPERTY</span><span class="p">(</span><span class="n">BlueprintAssignable</span><span class="p">)</span>
<span class="n">FScoreChanged</span> <span class="n">OnScoreChanged</span><span class="p">;</span>

<span class="n">UFUNCTION</span><span class="p">(</span><span class="n">BlueprintCallable</span><span class="p">)</span>
<span class="kt">void</span> <span class="n">AddScore</span><span class="p">(</span><span class="kt">float</span> <span class="n">delta</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">Score</span> <span class="o">+=</span> <span class="n">delta</span><span class="p">;</span>
    <span class="n">OnScoreChanged</span><span class="p">.</span><span class="n">Broadcast</span><span class="p">(</span><span class="n">Score</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div><p data-pid="K1SwXWCs">这样OnScoreChanged就可以在蓝图和其他地方BindEvent了。因为Subsystem本身具有全局访问的特性，因此往往很容易作为数据的集中式更新和事件的统一分发处。</p><h2><b>再来一些零散的思考吧</b></h2><p data-pid="UaLo9s99">还有一些小的思考，也想分享一下。作为一个程序架构设计的思考领悟交流。</p><h3>思考：<b>Subsystem支持网络复制吗？</b></h3><p data-pid="a3w_xCrm">不
支持。我们知道UE里的网络复制是基于Actor的ActorChannel的，而USubsystem是普通的UObject对象，因此并不支持。在这
一点上，你可能会有冲动去定义一个AManagerActor类来作为通信通道，这也许是一个好主意，但也得仔细的评估。因为常常很多时候，
GameState和PlayerState等一些内建的GamePlay通信已经能够满足你的需求，我比较建议尽量把职责划分清楚。实在不行的话，那就
用一个Actor来作为通信通道吧，反正再坏也坏不到哪里去，是吧。</p><h3><b>思考：Subsystem为什么单挑这5个类？</b></h3><p data-pid="QAB1l6J_">多
问几个为什么，不免会此疑问。我自己在思考这个问题的时候，会从引擎的关键流程有几个来思考。Engine支持了通用的引擎时机，Editor专门支持了
编辑器。接下来的游戏启动和关闭，有GameInstance来负责了。然后游戏中的切换关卡有World相关联了。本地多玩家由LocalPlayer
来支持。你会发现，这些对象都是关键的数据节点。</p><p data-pid="lAoCiFLA">有人可能会问那怎么不弄
UGameModeSubsystem？怎么不弄UPlayerControllerSubsystem？我尝试回答的答案是要控制拆分的粒度。理论上你
甚至可以再定义UPawnSubsystem，把角色身上的业务逻辑也垂直拆分一下，但这未免就有点太多太细了，在很多时候往往都用不上。业务逻辑粒度太
小了就更难拆分出来了。因此设计的一个原则是合适的考虑实际需求，不宜妄自追求灵活性。另一个方面，GameMode和PlayerController
这些对象的生命周期往往是和World一起的，得到了World就可以顺藤摸瓜得到其他，因此在功能实现上倒也不损失多少。</p><p data-pid="9RpYXCIU">当然，我同时的观点是引擎是一个持续迭代的产物，未来也许也会根据需要继续添加其他。未来需要构建更大的大世界后，架构必须演化以适应，自然会做更多的自调整。</p><h3><b>思考：可否自己也参照着新建个USubsystem基类？</b></h3><p data-pid="EU_8xeos">源码在手，为所欲为。在理解了这套机制的基础上，自己读读源码，其实不难参照着自己写一套。只是我自己确实没有想到实际的游戏需求。关键的倒不是如何继续添加一个，而是在吸收了这些架构知识营养后，读者们可以在自己的游戏结构里灵活应用上对象的反射和事件注册等知识。</p><h3><b>思考：好奇蓝图里是怎么访问到Subsystem全局变量的？</b></h3><p data-pid="8xQjSf8t">关
于这一点，引擎其实是做了专门的实现的。具体的源码原理可以参照，UK2Node_GetSubsystem定义了专门的蓝图节点，其内部实现会转发到
USubsystemBlueprintLibrary的一些静态函数接口去。因此关于怎么理解Subsystem的上下文ContextObject这
个问题，读者朋友们可以好好的读下USubsystemBlueprintLibrary的源码。其内容比较简单直接，我就不赘述贴出来了。</p><h2><b>总结</b></h2><p data-pid="LN4UeI-6">不好意思，本文篇幅实在太长。原因是我想毕其功于一文，希望一次就能讲透。Subsystems其实可以算是GamePlay框架上发布的一个美味DLC，懂得使用它的人会让自己的程序架构愈发的清晰，而不懂的的人依然习惯把代码搅和在一团，摊手~</p><p data-pid="tH4vCGRY">希望本文对大家有帮助，没脸皮求赞了，就酱，后会有期！</p><h2>引用</h2><ol><li data-pid="p3E0al1o"><a href="https://link.zhihu.com/?target=https%3A//docs.unrealengine.com/en-US/Programming/Subsystems/index.html" class=" wrap external" target="_blank" rel="nofollow noreferrer">Programming Subsystems官方文档</a></li><li data-pid="Kw2_CXWV"><a href="https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1t741187FZ" class=" wrap external" target="_blank" rel="nofollow noreferrer">[英文直播]Programming Subsystems(真实字幕组)</a></li></ol><p data-pid="xwamId6k"><i>UE4.25.1</i></p><p data-pid="ZbvG9Ntp">—————————————————————————————————————— </p><p data-pid="dTL4Xu8v">知乎专栏：<a href="https://zhuanlan.zhihu.com/insideue4" class="internal" target="_blank">InsideUE4</a></p><p data-pid="Ogurd0Tj">UE深入学习QQ群：<b>456247757</b>(非新手入门群，请先学习完官方文档和视频教程)</p><p data-pid="yWuDHZFB"><b>个人原创，未经授权，谢绝转载！</b></p></div></div></div></div><div role="button" tabindex="0" class="ContentItem-time">编辑于 2022-05-08 17:10</div><div class="PostIndex-Contributions"><h3 class="BlockTitle">内容所属专栏</h3><ul class="css-zein01"><div><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="https://www.zhihu.com/column/insideue4"><div class="css-1gomreu"><img class="Avatar css-1u7r5c9" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c11ce6a243a272cdab4264de925654cd_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c11ce6a243a272cdab4264de925654cd_l.jpg 2x" alt="InsideUE5"></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><span><a class="ColumnLink ColumnItem-Title" href="https://www.zhihu.com/column/insideue4"><div class="css-1gomreu">InsideUE5</div></a></span></h2><div class="ContentItem-meta">深入UE5剖析源码，浅出游戏引擎架构理念</div></div><div class="ContentItem-extra"><button type="button" class="Button FollowButton FEfUrdfMIKpQDJDqkjte Button--primary Button--blue epMJl0lFQuYbC7jrwr_o JmYzaky7MEPMFcJDLNMG">订阅专栏</button></div></div></div></div></ul></div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19824201&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19824201" target="_blank"><div class="css-1gomreu">虚幻引擎</div></a></span></div><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19556258&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19556258" target="_blank"><div class="css-1gomreu">游戏引擎</div></a></span></div><div class="Tag Topic css-ch8ocw" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19553361&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19553361" target="_blank"><div class="css-1gomreu">游戏开发</div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-fixed is-bottom" style="width: 1280px; bottom: 0px; left: 286.333px;"><div class="ContentItem-actions" data-za-detail-view-path-module="BottomBar" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;id&quot;:&quot;158717151&quot;,&quot;token&quot;:&quot;158717151&quot;}}}"><span><button aria-label="赞同 784 " aria-live="polite" type="button" class="Button VoteButton VoteButton--up FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor"><path fill-rule="evenodd" d="M13.792 3.681c-.781-1.406-2.803-1.406-3.584 0l-7.79 14.023c-.76 1.367.228 3.046 1.791 3.046h15.582c1.563 0 2.55-1.68 1.791-3.046l-7.79-14.023Z" clip-rule="evenodd"></path></svg></span>赞同 784</button><button aria-label="反对" aria-live="polite" type="button" class="Button VoteButton VoteButton--down FEfUrdfMIKpQDJDqkjte"><span style="display:inline-flex;align-items:center">​<svg width="10" height="10" viewBox="0 0 24 24" class="Zi Zi--TriangleDown" fill="currentColor"><path fill-rule="evenodd" d="M13.792 20.319c-.781 1.406-2.803 1.406-3.584 0L2.418 6.296c-.76-1.367.228-3.046 1.791-3.046h15.582c1.563 0 2.55 1.68 1.791 3.046l-7.79 14.023Z" clip-rule="evenodd"></path></svg></span></button></span><button type="button" class="Button BottomActions-CommentBtn FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Comment Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>86 条评论</button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover2-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Share Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M19.47 1.914a.8.8 0 0 1 1.204.778l-1.872 16.386a.9.9 0 0 1-1.204.743l-4.615-1.692a.7.7 0 0 0-.831.28l-1.927 3.02c-.43.674-1.474.369-1.474-.43v-3.865a.8.8 0 0 1 .179-.504l5.808-7.148a.595.595 0 0 0-.897-.781l-5.93 6.354a1.1 1.1 0 0 1-1.258.252L2.57 13.46a.8.8 0 0 1-.08-1.415l16.98-10.13Z"></path></svg></span>分享</button></div></div><button aria-live="polite" type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Heart Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Star Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M10.484 3.307c.673-1.168 2.358-1.168 3.032 0l2.377 4.122a.25.25 0 0 0 .165.12l4.655.987c1.319.28 1.84 1.882.937 2.884l-3.186 3.535a.25.25 0 0 0-.063.193l.5 4.733c.142 1.34-1.222 2.33-2.453 1.782l-4.346-1.938a.25.25 0 0 0-.204 0l-4.346 1.938c-1.231.549-2.595-.442-2.453-1.782l.5-4.733a.25.25 0 0 0-.064-.193L2.35 11.42c-.903-1.002-.382-2.604.937-2.884l4.655-.987a.25.25 0 0 0 .164-.12l2.378-4.122Z"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--withLabel fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY RuuQ6TOh2cRzJr6WlyQp"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Deliver Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><g fill-rule="evenodd" clip-rule="evenodd"><path d="M7.821 12a.75.75 0 0 1 .75-.75h6.857a.75.75 0 0 1 0 1.5H8.571a.75.75 0 0 1-.75-.75ZM8.965 8a.75.75 0 0 1 .75-.75h4.571a.75.75 0 0 1 0 1.5H9.715a.75.75 0 0 1-.75-.75Z"></path><path d="M7.527 3.15a2.35 2.35 0 0 0-2.309 1.91L3.165 15.84a.85.85 0 0 0-.015.16v2.5a2.35 2.35 0 0 0 2.35 2.35h13a2.35 2.35 0 0 0 2.35-2.35V16a.848.848 0 0 0-.015-.16L18.78 5.06a2.35 2.35 0 0 0-2.308-1.91H7.527Zm0 1.7a.65.65 0 0 0-.639.528l-1.88 9.872h13.984l-1.88-9.872a.65.65 0 0 0-.64-.528H7.528Z"></path></g></svg></span>申请转载</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="Popover3-toggle" aria-haspopup="true" aria-expanded="false"><button type="button" class="Button FEfUrdfMIKpQDJDqkjte Button--plain Button--withIcon Button--iconOnly fEPKGkUK5jyc4fUuT0QP B46v1Ak6Gj5sL2JTS4PY hIwDV_tcL6XN1HprrnAq"><span style="display:inline-flex;align-items:center">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="Zi Zi--Dots Button-zi t2ntD6J1DemdOdvh5FB4" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></span></button></div></div></div></div></div><div class="Sticky--holder" style="position: static; inset: auto auto 0px 0px; display: block; float: none; margin: 0px 0px 10px; height: 53.3333px;"></div></div></article><div class="Post-Sub Post-NormalSub"><div style="overflow: unset;" data-za-detail-view-path-module="CommentList" data-za-extra-module="{}"><div class="Comments-container css-plbgu"><div class="css-79elbk"><div><div class="css-1fo89v5"><img class="Avatar css-m4psdq" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x"><div class="css-14zbeoe"><div class="css-i6bazn"><div class="css-0"><div class="InputLike css-1rl4wxv Editable"><div style="min-height: 38px;" class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-d5iet" style="white-space: pre-wrap;">理性发言，友善互动</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-d5iet" class="notranslate public-DraftEditor-content" contenteditable="true" spellcheck="true" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;" tabindex="0" role="textbox"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="d5iet" data-offset-key="caphs-0-0"><div data-offset-key="caphs-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="caphs-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><div></div><input multiple="" type="file" style="display: none;" accept="image/webp,image/jpg,image/jpeg,image/png,image/gif"></div></div></div></div></div></div><div class="css-u76jt1"><div class="css-1onritu"><div class="css-r4op92"><div class="css-1k10w8f">86 条评论</div></div><div class="css-59erns"></div><div class="css-97fdvh"><div class="css-m0zh86">默认</div><div class="css-1fjr6cy">最新</div></div></div><div class="css-840pn3"><div class="css-18ld3w0"><div data-id="993463424"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e105c3d7eca092674c9467076d1362c7" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6463f8509c3608842285522e3de7038b_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6463f8509c3608842285522e3de7038b_l.png 2x" alt="Vinni.D" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e105c3d7eca092674c9467076d1362c7" target="_blank" class="css-10u695f">Vinni.D</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div><span style="display: inline-flex; align-items: center;">​<svg width="18" height="18" fill="none" viewBox="0 0 24 24" class="ZDI ZDI--BadgeCertNewStrokeLightFill24 css-1lo8720"><path fill="#fff" d="M12 2c-2.02.05-1.86 1.2-3.38 1.83-1.48.61-2.33-.26-3.69 1.1-1.39 1.47-.46 2.17-1.1 3.69C3.2 10.14 2.05 9.98 2 12c.05 2.02 1.2 1.86 1.83 3.38.63 1.52-.3 2.22 1.1 3.69 1.36 1.35 2.21.49 3.69 1.1 1.52.63 1.36 1.78 3.38 1.83 2.02-.05 1.86-1.2 3.38-1.83 1.48-.61 2.33.26 3.69-1.1 1.39-1.47.46-2.16 1.1-3.69.63-1.52 1.78-1.36 1.83-3.38-.05-2.02-1.2-1.86-1.83-3.38-.63-1.52.3-2.22-1.1-3.69-1.36-1.35-2.21-.49-3.69-1.1C13.86 3.2 14.02 2.05 12 2Z" style="fill: rgb(255, 255, 255); fill-opacity: 1;"></path><path fill="url(#id-106203557-a)" fill-rule="evenodd" d="M3 12c0 1.449 1.035 1.251 1.755 2.997s-.144 2.34.882 3.366c1.026 1.026 1.62.153 3.366.882C10.749 19.965 10.551 21 12 21c1.449 0 1.251-1.035 2.997-1.755s2.34.144 3.366-.882c1.026-1.026.153-1.62.882-3.366C19.965 13.251 21 13.44 21 12c0-1.449-1.035-1.251-1.755-2.997s.144-2.34-.882-3.366c-1.026-1.026-1.62-.153-3.366-.882C13.251 4.035 13.449 3 12 3c-1.449 0-1.251 1.035-2.997 1.755s-2.34-.144-3.366.882c-1.026 1.026-.153 1.62-.882 3.366C4.035 10.749 3 10.551 3 12Z" clip-rule="evenodd"></path><path fill="#fff" fill-rule="evenodd" d="m10.003 15.355-2.37-2.699s-.413-.634.217-1.226c.63-.591 1.195-.197 1.195-.197l1.758 1.92 4.226-4.439s.597-.313 1.17.178c.572.49.243 1.244.243 1.244s-3.12 3.472-4.839 5.204c-.881.837-1.6.015-1.6.015Z" clip-rule="evenodd" style="fill: rgb(255, 255, 255); fill-opacity: 1;"></path><defs><linearGradient id="id-106203557-a" x1="5.7" x2="15.6" y1="5.7" y2="19.2" gradientUnits="userSpaceOnUse"><stop stop-color="#47D3FF" style="stop-color: rgb(71, 211, 255); stop-opacity: 1;"></stop><stop offset="1" stop-color="#4A7DFF"></stop></linearGradient></defs></svg></span></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">确
实是这样 我们项目还在用很古老的4.18版本 
包括我自己写的一些manager类只能通过很多冗余代码例如addroot和removeFromRoot，还要注意创建和销毁的时序问题，小心翼翼的
自己管理生命周期。我都不知道有这种好用的东西。回头看看能否merge到项目中。<img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-419a1a3ed02b7cfadc20af558aabc897.png" class="sticker" alt="[赞同]"><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-419a1a3ed02b7cfadc20af558aabc897.png" class="sticker" alt="[赞同]"></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2020-07-11</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>10</button></div></div></div></div><div data-id="10708809179"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e028fd96fb379a432d7306098da17b36" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-34bb40168214e75af8f5dc20de18eda4_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-34bb40168214e75af8f5dc20de18eda4_l.png 2x" alt="Ritchiezhao" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e028fd96fb379a432d7306098da17b36" target="_blank" class="css-10u695f">Ritchiezhao</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>可以Merge的，源码在手，天下我有</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2023-10-20</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>1</button></div></div></div></div></div><div data-id="4657357275"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e105c3d7eca092674c9467076d1362c7" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6463f8509c3608842285522e3de7038b_l_002.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6463f8509c3608842285522e3de7038b_l_002.png 2x" alt="Vinni.D" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/e105c3d7eca092674c9467076d1362c7" target="_blank" class="css-10u695f">Vinni.D</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div><span style="display: inline-flex; align-items: center;">​<svg width="18" height="18" fill="none" viewBox="0 0 24 24" class="ZDI ZDI--BadgeCertNewStrokeLightFill24 css-1lo8720"><path fill="#fff" d="M12 2c-2.02.05-1.86 1.2-3.38 1.83-1.48.61-2.33-.26-3.69 1.1-1.39 1.47-.46 2.17-1.1 3.69C3.2 10.14 2.05 9.98 2 12c.05 2.02 1.2 1.86 1.83 3.38.63 1.52-.3 2.22 1.1 3.69 1.36 1.35 2.21.49 3.69 1.1 1.52.63 1.36 1.78 3.38 1.83 2.02-.05 1.86-1.2 3.38-1.83 1.48-.61 2.33.26 3.69-1.1 1.39-1.47.46-2.16 1.1-3.69.63-1.52 1.78-1.36 1.83-3.38-.05-2.02-1.2-1.86-1.83-3.38-.63-1.52.3-2.22-1.1-3.69-1.36-1.35-2.21-.49-3.69-1.1C13.86 3.2 14.02 2.05 12 2Z" style="fill: rgb(255, 255, 255); fill-opacity: 1;"></path><path fill="url(#id-106203557-a)" fill-rule="evenodd" d="M3 12c0 1.449 1.035 1.251 1.755 2.997s-.144 2.34.882 3.366c1.026 1.026 1.62.153 3.366.882C10.749 19.965 10.551 21 12 21c1.449 0 1.251-1.035 2.997-1.755s2.34.144 3.366-.882c1.026-1.026.153-1.62.882-3.366C19.965 13.251 21 13.44 21 12c0-1.449-1.035-1.251-1.755-2.997s.144-2.34-.882-3.366c-1.026-1.026-1.62-.153-3.366-.882C13.251 4.035 13.449 3 12 3c-1.449 0-1.251 1.035-2.997 1.755s-2.34-.144-3.366.882c-1.026 1.026-.153 1.62-.882 3.366C4.035 10.749 3 10.551 3 12Z" clip-rule="evenodd"></path><path fill="#fff" fill-rule="evenodd" d="m10.003 15.355-2.37-2.699s-.413-.634.217-1.226c.63-.591 1.195-.197 1.195-.197l1.758 1.92 4.226-4.439s.597-.313 1.17.178c.572.49.243 1.244.243 1.244s-3.12 3.472-4.839 5.204c-.881.837-1.6.015-1.6.015Z" clip-rule="evenodd" style="fill: rgb(255, 255, 255); fill-opacity: 1;"></path><defs><linearGradient id="id-106203557-a" x1="5.7" x2="15.6" y1="5.7" y2="19.2" gradientUnits="userSpaceOnUse"><stop stop-color="#47D3FF" style="stop-color: rgb(71, 211, 255); stop-opacity: 1;"></stop><stop offset="1" stop-color="#4A7DFF"></stop></linearGradient></defs></svg></span></div></div><svg width="12" height="12" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRightAlt16 css-gx7lzm" fill="currentColor"><path d="M10.727 7.48a.63.63 0 0 1 0 1.039l-4.299 2.88c-.399.268-.926-.028-.926-.519V5.12c0-.491.527-.787.926-.52l4.299 2.881Z"></path></svg><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/f362a9732b684192c22e8dd78954e774" target="_blank" class="css-10u695f">c0000005</a></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">no</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2021-08-04</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><button type="button" class="Button Button--secondary Button--grey css-7dh30y">展开其他 1 条回复<span style="display: inline-flex; align-items: center;">​<svg width="24" height="24" viewBox="0 0 24 24" class="ZDI ZDI--ArrowRightSmall24" fill="currentColor"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></span></button></div><div data-id="4693330476"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/442e47268de93c04f46c55adc24fdf4d" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4b073367b098f695feccbd5ab4decfc7_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4b073367b098f695feccbd5ab4decfc7_l.jpg 2x" alt="宇亓" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/442e47268de93c04f46c55adc24fdf4d" target="_blank" class="css-10u695f">宇亓</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-4812630bc27d642f7cafcd6cdeca3d7a.png" class="css-1pj8qrb"></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">后面还会更新吗？</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2021-09-03</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>3</button></div></div></div></div></div><div data-id="1585755780"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/ac8e041d943e990cf758179328d7ac69" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg 2x" alt="重装机甲战士" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/ac8e041d943e990cf758179328d7ac69" target="_blank" class="css-10u695f">重装机甲战士</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>我的天，我看到第十章，把总结写完。思考了一个月，回来翻目录发现多了一个第十一章……我觉得我的总结要重写了。</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2021-04-11</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>2</button></div></div></div></div></div><div data-id="993483389"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2dc2527f6098d0a9c3708f946599e158" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-26edfd7a80558b34aa6f42829a3107a4_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-26edfd7a80558b34aa6f42829a3107a4_l.png 2x" alt="懂完了都" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/2dc2527f6098d0a9c3708f946599e158" target="_blank" class="css-10u695f">懂完了都</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">爷青回</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2020-07-11</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>2</button></div></div></div></div></div><div data-id="10853878640"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/6ae50b1374e2a6e2cae4c41b40875667" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l_002.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l_002.jpg 2x" alt="漂亮男孩" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/6ae50b1374e2a6e2cae4c41b40875667" target="_blank" class="css-10u695f">漂亮男孩</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>钊老师，虽然我没在UE的GameInstance中堆一堆模块，但我Unity的"GameInstance"中，经常堆一堆模块<img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-41f74f3795489083630fa29fde6c1c4d.png" class="sticker" alt="[大哭]">（在公屏上打上：确实）</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2024-04-15</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>1</button></div></div></div></div></div><div data-id="993429452"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/779a19ae93935f71bd71173f28768bc3" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-d353205a656660d265623a4ebcee47fa_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-d353205a656660d265623a4ebcee47fa_l.jpg 2x" alt="培培" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/779a19ae93935f71bd71173f28768bc3" target="_blank" class="css-10u695f">培培</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">大钊大神🆒！！</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2020-07-11</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>2</button></div></div></div></div><div data-id="10651082306"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/06503f7cd6dbf55b26beea9c5ba80275" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6f039be19f2dc22a1022aa0ff5520a84_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-6f039be19f2dc22a1022aa0ff5520a84_l.jpg 2x" alt="天南海北" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/06503f7cd6dbf55b26beea9c5ba80275" target="_blank" class="css-10u695f">天南海北</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div><svg width="12" height="12" viewBox="0 0 16 16" class="ZDI ZDI--ArrowRightAlt16 css-gx7lzm" fill="currentColor"><path d="M10.727 7.48a.63.63 0 0 1 0 1.039l-4.299 2.88c-.399.268-.926-.028-.926-.519V5.12c0-.491.527-.787.926-.52l4.299 2.881Z"></path></svg><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/0e57521150ed30747dce84576006c099" target="_blank" class="css-10u695f">余女士</a></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>你有工作吗？</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2023-08-16</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div data-id="4640890030"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/0e57521150ed30747dce84576006c099" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg 2x" alt="余女士" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/0e57521150ed30747dce84576006c099" target="_blank" class="css-10u695f">余女士</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">借个楼，有没有UE4的大神，找工作的<img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-b62e608e405aeb33cd52830218f561ea.png" class="sticker" alt="[捂脸]"></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2021-07-22</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div></div><div data-id="1234857983"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/525fc9e27e94e069ae4bfdc60acc381c" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-31d793dd544fb684d307d6d02cc4b7d1_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-31d793dd544fb684d307d6d02cc4b7d1_l.jpg 2x" alt="游戏研发" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/525fc9e27e94e069ae4bfdc60acc381c" target="_blank" class="css-10u695f">游戏研发</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>赶紧把自己项目的 大系统管理层面的 都换成这个试试</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2021-01-13</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>1</button></div></div></div></div></div><div data-id="1092752401"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/86cb89448f2593c1b30a325d941ab741" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-ae36f93661e111952bc08df64b9a55da_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-ae36f93661e111952bc08df64b9a55da_l.jpg 2x" alt="RealmDelight" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/86cb89448f2593c1b30a325d941ab741" target="_blank" class="css-10u695f">RealmDelight</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>求GAS啊</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2020-11-13</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>1</button></div></div></div></div><div data-id="4675919198"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/c2562c79433f4de2dd4da7431aa967c7" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/f37352d7edafd96a4ecc0e0be3c95f4a_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/f37352d7edafd96a4ecc0e0be3c95f4a_l.jpg 2x" alt="Ethan" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/c2562c79433f4de2dd4da7431aa967c7" target="_blank" class="css-10u695f">Ethan</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt">同求</div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2021-08-20</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div></div><div data-id="10837547191"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/4effa51e2a3a7bed4685429c67f26f35" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/3caea3f2f6ee1712680892b55836b5a2_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/3caea3f2f6ee1712680892b55836b5a2_l.jpg 2x" alt="SorXD" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/4effa51e2a3a7bed4685429c67f26f35" target="_blank" class="css-10u695f">SorXD</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p><div class="css-1gomreu"><a href="http://www.zhihu.com/people/d7d96d0468d33421cc28e93d5f45deb5" target="_blank" class="member_mention css-2ietpx">@大钊</a></div> 从UE 5.0开始<br><br>原 FGCObject &lt;- FSubsystemCollectionBase &lt;- FSubsystemCollection 的继承结构 改为：<br>{ FSubsystemCollectionBase, FGCObject } &lt;- FSubsystemCollection <br><br>这种改动可能是出于什么考虑？</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2024-03-26</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div><div data-id="10838297404"><div class="css-1kwt8l8"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/d7d96d0468d33421cc28e93d5f45deb5" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-7441a0758c0965343dbd767c13f5c0ca_l.png 2x" alt="大钊" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/d7d96d0468d33421cc28e93d5f45deb5" target="_blank" class="css-10u695f">大钊</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div><span class="css-8v0dsd" href="">作者</span><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-57fe7feb4813331d5eca02ef731e12c9.png" alt="知乎知识会员" class="css-1pj8qrb"></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>看了一下，还真是如此改了。我猜测是为了让以后FSubsystemCollectionBase的某些其他子类不带有GCObject，所以把FGCObject下放mix到FSubsystemCollection里面去了。不过现在源码里确实看不出区别。</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2024-03-27</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>1</button></div></div></div></div></div></div><div data-id="10803976433"><div class="css-jp43l4"><div class="css-1jll2aj"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/c9cae27708746b5b25bf2e6ef1501066" target="_blank" class="css-1dxejhk"><img class="Avatar css-1ljippv" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-abed1a8c04700ba7d72b45195223e0ff_l.jpg 2x" alt="kingoo" loading="lazy"></a></div></div><div class="css-14nvvry"><div class="css-z0cc58"><div class="css-swj9d4"><div class="css-1tww9qq"><div class="css-1gomreu"><a href="https://www.zhihu.com/people/c9cae27708746b5b25bf2e6ef1501066" target="_blank" class="css-10u695f">kingoo</a></div><div class="css-1qe0v6x"><div class="css-1ssbn0c"></div></div></div></div><svg width="16" height="16" viewBox="0 0 24 24" class="ZDI ZDI--Dots24 css-zgte1c" fill="currentColor"><path d="M6 10.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM10.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0ZM16.5 12a1.5 1.5 0 1 1 3 0 1.5 1.5 0 0 1-3 0Z"></path></svg></div><div class="CommentContent css-1jpzztt"><p>感谢<img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-c71427010ca7866f9b08c37ec20672e0.png" class="sticker" alt="[赞]"></p><p>第一次看没看懂，然后发现可能是我基础不行，又回头看了前面的章节，果然能看懂了</p></div><div class="css-140jo2"><div class="css-1a5a57m"><div class="css-x1xlu5"><span class="css-12cl38p">2024-02-18</span></div></div><div class="css-18opwoy"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel css-1ij6qqc"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--ChatBubbleFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M12 2.75a9.25 9.25 0 1 0 4.737 17.197l2.643.817a1 1 0 0 0 1.25-1.25l-.8-2.588A9.25 9.25 0 0 0 12 2.75Z" clip-rule="evenodd"></path></svg></span>回复</button><button style="transform: none;" type="button" class="Button Button--plain Button--grey Button--withIcon Button--withLabel css-1vd72tl"><span style="display: inline-flex; align-items: center;">​<svg width="1.2em" height="1.2em" viewBox="0 0 24 24" class="ZDI ZDI--HeartFill24 css-15ro776" fill="currentColor"><path fill-rule="evenodd" d="M17.142 3.041c1.785.325 3.223 1.518 4.167 3.071 1.953 3.215.782 7.21-1.427 9.858a23.968 23.968 0 0 1-4.085 3.855c-.681.5-1.349.923-1.962 1.234-.597.303-1.203.532-1.748.587a.878.878 0 0 1-.15.002c-.545-.04-1.162-.276-1.762-.582a14.845 14.845 0 0 1-2.008-1.27 24.254 24.254 0 0 1-4.21-4.002c-2.1-2.56-3.16-6.347-1.394-9.463.92-1.624 2.362-2.892 4.173-3.266 1.657-.341 3.469.097 5.264 1.44 1.75-1.309 3.516-1.76 5.142-1.464Z" clip-rule="evenodd"></path></svg></span>喜欢</button></div></div></div></div></div><div></div></div><div class="css-1r40vb1"><div class="css-riyhug"><div class="css-vurnku">查看被折叠评论</div><svg width="16" height="16" viewBox="0 0 16 16" class="ZDI ZDI--QuestionCircleFill16 css-15fzge" fill="currentColor"><path fill-rule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm-.91-8.94c-.13.232-.14.5-.14.574a.65.65 0 0 1-1.3 0c0-.132.007-.68.31-1.214.333-.59.977-1.07 2.04-1.07 1.095 0 1.8.564 2.13 1.29.3.665.28 1.456.02 2.001-.153.32-.39.533-.6.683-.15.106-.326.207-.462.284l-.11.063c-.333.196-.333.258-.333.326V9a.65.65 0 0 1-1.3 0c0-.844.616-1.24.975-1.45.067-.04.126-.073.18-.104a3.3 3.3 0 0 0 .295-.18.524.524 0 0 0 .182-.186c.087-.18.12-.57-.032-.904-.123-.272-.373-.526-.945-.526-.604 0-.81.235-.91.41ZM8.8 11.1a.8.8 0 1 1-1.6 0 .8.8 0 0 1 1.6 0Z" clip-rule="evenodd"></path></svg></div></div></div><div class="css-wu78cf"><div class="css-vurnku">点击查看全部评论</div><svg width="24" height="24" viewBox="0 0 24 24" class="ZDI ZDI--ArrowRightSmall24" fill="currentColor"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></div></div><div class="css-l8iyjs"></div><div class="css-kt4t4n" style="position: relative; box-shadow: 0px 0px;"><div><div class="css-59erns"><img class="Avatar css-m4psdq" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5c048bd0eac9b56a0073bcb65a95b1b5_l.jpg 2x"><div class="css-14zbeoe"><div class="css-i6bazn"><div class="css-1ryozpy"><div class="InputLike css-1rl4wxv Editable"><div style="min-height: 38px;" class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-c8d7g" style="white-space: pre-wrap;">理性发言，友善互动</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-c8d7g" class="notranslate public-DraftEditor-content" contenteditable="true" role="textbox" spellcheck="true" style="outline: none; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;" tabindex="0"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="c8d7g" data-offset-key="fqhdk-0-0"><div data-offset-key="fqhdk-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="fqhdk-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><div></div><input multiple="" type="file" style="display: none;" accept="image/webp,image/jpg,image/jpeg,image/png,image/gif"></div></div></div></div></div></div></div><div></div></div></div></div><div role="complementary" aria-label="推荐阅读" class="Recommendations-Main" style="width: 1263px;"><h3 class="BlockTitle Recommendations-BlockTitle">推荐阅读</h3><ul class="Recommendations-List"><button class="PagingButton PagingButton-Previous" disabled="disabled" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowLeft"><path fill-rule="evenodd" d="M14.609 6.322c.349.335.36.889.026 1.237l-4.253 4.438 4.254 4.444a.875.875 0 1 1-1.264 1.21l-4.834-5.05a.875.875 0 0 1 0-1.21l4.834-5.043a.875.875 0 0 1 1.237-.026Z" clip-rule="evenodd"></path></svg></button><a href="https://zhuanlan.zhihu.com/p/24170697" class="PostItem"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5ad14fec37f3185b89ef35bfcd0d484b_250x0.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-5ad14fec37f3185b89ef35bfcd0d484b_qhd.png 2x" class="PostItem-TitleImage" alt="《InsideUE4》GamePlay架构（十）总结"><h1 class="PostItem-Title">《InsideUE4》GamePlay架构（十）总结</h1><div class="PostItem-Footer"><span>大钊</span><span class="PostItem-FooterTitle">发表于Insid...</span></div></div></a><a href="https://zhuanlan.zhihu.com/p/23826859" class="PostItem"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f8783e504f840bb1df66f5d37cd564c7_250x0.jpg" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-f8783e504f840bb1df66f5d37cd564c7_qhd.jpg 2x" class="PostItem-TitleImage" alt="《InsideUE4》GamePlay架构（八）Player"><h1 class="PostItem-Title">《InsideUE4》GamePlay架构（八）Player</h1><div class="PostItem-Footer"><span>大钊</span><span class="PostItem-FooterTitle">发表于Insid...</span></div></div></a><a href="https://zhuanlan.zhihu.com/p/421707346" class="PostItem"><div><h1 class="PostItem-Title">Kubernetes 游戏架构搭建实操</h1><p class="PostItem-Summary">【本文内容基于9月份Cloud Ace CTO 江文远分享的线上研讨会内容总结而成。】 摘要Kubernetes，简称K8s，是Google开发的，目前最为流行的容器编排和管理引擎，它支持自动化部署、大规模可伸…</p><div class="PostItem-Footer"><span>Cloud Ace</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/470184973" class="PostItem"><div><img src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-40a14fff4314c3738075ac665586b623_250x0.png" srcset="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/v2-40a14fff4314c3738075ac665586b623_qhd.png 2x" class="PostItem-TitleImage" alt="《InsideUE5》GameFeatures架构（二）基础用法"><h1 class="PostItem-Title">《InsideUE5》GameFeatures架构（二）基础用法</h1><div class="PostItem-Footer"><span>大钊</span><span class="PostItem-FooterTitle">发表于Insid...</span></div></div></a><button class="PagingButton PagingButton-Next" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg width="40" height="40" viewBox="0 0 24 24" fill="#d3d3d3" class="Zi Zi--ArrowRight"><path fill-rule="evenodd" d="M10.518 6.224a.875.875 0 0 1 1.212.248l3.335 5.05a.875.875 0 0 1 0 .964l-3.334 5.043a.875.875 0 0 1-1.46-.965l3.015-4.56-3.016-4.568a.875.875 0 0 1 .248-1.212Z" clip-rule="evenodd"></path></svg></button></ul></div></div></div></main><div role="complementary"><div class="CornerButtons"><div class="CornerAnimayedFlex CornerAnimayedFlex--hidden"><button data-tooltip="回到顶部" data-tooltip-position="left" data-tooltip-will-hide-on-click="true" aria-label="回到顶部" type="button" class="Button CornerButton Button--plain css-4lspwd"><svg width="24" height="24" viewBox="0 0 24 24" aria-hidden="true" class="Zi Zi--BackToTop" fill="currentColor"><path fill-rule="evenodd" d="M13.204 3.107a1.75 1.75 0 0 0-2.408 0L3.806 9.73c-1.148 1.088-.378 3.02 1.204 3.02h2.24V20c0 .966.784 1.75 1.75 1.75h6A1.75 1.75 0 0 0 16.75 20v-7.25h2.24c1.582 0 2.353-1.932 1.204-3.02l-6.99-6.623Z" clip-rule="evenodd"></path></svg></button></div></div></div></div></div><script id="js-clientConfig" type="text/json">{"fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","lens":"https:\u002F\u002Flens.zhihu.com","zhida":"https:\u002F\u002Fzhida.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fapi\u002F","walletpay":"https:\u002F\u002Fwalletpay.zhihu.com","captcha":"https:\u002F\u002Fcaptcha.zhihu.com","vzuu":"https:\u002F\u002Fv.vzuu.com","openapi":"https:\u002F\u002Fopenapi.zhihu.com","svip":"https:\u002F\u002Fsvip.zhihu.com","event":"https:\u002F\u002Fevent.zhihu.com"},"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","videoHost":"video.zhihu.com","zhuanlanHost":"zhuanlan.zhihu.com","allowSignUp":true,"refreshValidityPeriod":"30","release":"2208-77d63458","currentEntry":"column","isMobileEntry":false,"apollo":{"env":"prod","globalSilence":"","ncgModeSign":"3f8e56febda4fb3bbea72e379d76de1e","logMobileUnAuth":"1","topstory_rec_adp":"1","topstory_hot_adp":"1","editor_adapt_native":"0","editor_auto_rotate":"0","enable_request_filter":"1","balanceModalSign":"ChYHAcB5ihJECkAFnhDAYmdhsTWVJoNc","reportBackendPublishError":"1","dynamic_font_schema":"1","enable_vzuu_login":"office","za_zse_ck_refer":"1","gamekeeper_office":"blue","gamekeeper_production":"blue","enable_utm_id_0":"0","test_canary":"member|0-100,1-0","use_new_player":"member|0-100,1-0","player_vendor":"member|0-100,1-0,2-0","use_hevc":"member|0-0,1-100","upload_use_signature":"member|0-0,1-100","use_backdrop_blur":"member|0-0,1-100","article_title_imagex":"member|0-0,1-100","play_station":"member|0-0,1-100","use_cached_supported_countries":"device|1-100,0-0","contentItem_cover_imagex":"member|0-0,1-100","use_qrcode_login_v2":"device|1-100,0-0"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{},"cities":{"cityData":[]}},"loading":{"global":{"count":0},"local":{"env\u002FgetIpinfo\u002F":false,"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false,"article\u002FloadPostSearchEntity\u002F":false}},"entities":{"users":{"ffde95bc6a24b298d237f46e35a3eb71":{"uid":1614187562792312800,"userType":"people","id":"ffde95bc6a24b298d237f46e35a3eb71"},"fjz13":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","kvipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae"},"targetUrl":"https:\u002F\u002Fwww.zhihu.com\u002Fkvip\u002Fpurchase"},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_l.png?source=172ae18b","description":"被 10000 个人关注","medalAvatarFrame":""}}},"questions":{},"answers":{},"articles":{"158717151":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fcontent_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=BiBUKF0xBSkqGGNWBWN0CV92AHMZes6RjR0PoA==&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__&zid=__ZONEID__"],"entityWords":[{"name":"SubsystemType","mention":"SubsystemType","matchorder":1,"begin":687,"end":700,"entityid":5671775626312099000,"isBookMark":false,"link":{"linkType":10,"linkUrl":"https:\u002F\u002Fzhida.zhihu.com\u002Fsearch?content_id=123403829&content_type=Article&match_order=1&q=SubsystemType&zhida_source=entity","docType":"","topicToken":""},"entityClass":"Unknown","score":7.5,"attachedInfoBytes":"sgJgCg1TdWJzeXN0ZW1UeXBlEgdVbmtub3duGK8FILwFKAE1AADwQDoHYXJ0aWNsZUDjxbTgm7yM205IClIkNTY5NTYxNzYtZmU2Ni00NTA0LThhNTUtMTJiMzc5ZDA0NTVl8gLUAQokNTY5NTYxNzYtZmU2Ni00NTA0LThhNTUtMTJiMzc5ZDA0NTVlGgdhcnRpY2xlIgkxMjM0MDM4Mjk6DVN1YnN5c3RlbVR5cGVA48W04Ju8jNtOSABSFmFpX2VudGl0eV9sbG1fcmVjYWxsZXJdAADwQGJgCg1TdWJzeXN0ZW1UeXBlEgdVbmtub3duGK8FILwFKAE1AADwQDoHYXJ0aWNsZUDjxbTgm7yM205IClIkNTY5NTYxNzYtZmU2Ni00NTA0LThhNTUtMTJiMzc5ZDA0NTVl","isOnAB":false,"isNatural":1,"isDelete":false,"contentType":"","contentId":"","contentToken":""}],"id":"158717151","title":"《InsideUE4》GamePlay架构（十一）Subsystems","type":"article","articleType":"normal","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F158717151","imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7825335e062ee2125ea8c28efed80c9d_720w.jpg?source=172ae18b","titleImage":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7825335e062ee2125ea8c28efed80c9d_720w.jpg?source=172ae18b","excerpt":"\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-59be3cc03f6b6c0eabf8ab2af01640f4_200x112.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1516\" data-rawheight=\"668\" data-watermark=\"watermark\" data-original-src=\"v2-59be3cc03f6b6c0eabf8ab2af01640f4\" data-watermark-src=\"v2-1a596ce3195ccaf4275b0aa88dedf33e\" data-private-watermark-src=\"\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-59be3cc03f6b6c0eabf8ab2af01640f4_r.png\"\u002F\u003E大家好，我厚着脸皮又回来了\u003Cb\u003E引言\u003C\u002Fb\u003E非常惭愧，自从我更新完GamePlay架构十篇之后，我就断更了许久。如今说再多缘由也是借口，借着假期，在家继续重操旧业，继续写写技术文章。 UE在4.22版本的时候，开始引入Subsystems，然后在4.24完善。写本篇文章的一个原因…","created":1594449389,"updated":1652001026,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","kvipInfo":{"isVip":true,"vipIcon":{"url":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae","nightModeUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-57fe7feb4813331d5eca02ef731e12c9.jpg?source=88ceefae"},"targetUrl":"https:\u002F\u002Fwww.zhihu.com\u002Fkvip\u002Fpurchase"},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"972477022068568064","medalName":"备受瞩目","avatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-29b2e882367bb1529bc1322f2dcda7ee_l.png?source=172ae18b","description":"被 10000 个人关注","medalAvatarFrame":""}},"commentPermission":"all","copyrightPermission":"need_review","state":"published","ipInfo":"","imageWidth":1920,"imageHeight":1080,"content":"\u003Cblockquote data-pid=\"lLtcZ6il\"\u003E 大家好，我厚着脸皮又回来了\u003C\u002Fblockquote\u003E\u003Ch2\u003E\u003Cb\u003E引言\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"3CIlsKVp\"\u003E非常惭愧，自从我更新完GamePlay架构十篇之后，我就断更了许久。如今说再多缘由也是借口，借着假期，在家继续重操旧业，继续写写技术文章。\u003C\u002Fp\u003E\u003Cp data-pid=\"ZGwi5cTo\"\u003EUE在4.22版本的时候，开始引入Subsystems，然后在4.24完善。写本篇文章的一个原因是Subsystems其实可以算是GamePlay框架基础上的一个增强功能，属于GamePlay架构的范围，因此我要补完。另一个原因是我观察到大家对Subsystems好像还很陌生，讨论和用的人都很少。这着实有点可惜，Subsystems其实是一个非常便利的功能，如果大家在编写代码的时候，能够\u003Cb\u003E有意识的\u003C\u002Fb\u003E利用好Subsystems这个特性的话，会使自己的程序架构更加的清晰和便利。\u003C\u002Fp\u003E\u003Cp data-pid=\"DTBiUeqL\"\u003E希望本文能帮助到你达成这一点。为了好好阐述好这个问题，本文的篇幅会比较长，大家可以慢慢挑自己感兴趣的部分，不用着急。\u003C\u002Fp\u003E\u003Cp data-pid=\"QVCKPNJf\"\u003E为避免接下来混淆，本文先定义一下接下来使用的术语：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"35qZHd7X\"\u003E\u003Cb\u003ESubsystems\u003C\u002Fb\u003E：指的是这整套“子系统”框架，包含了定义的类以及运作机制。\u003C\u002Fli\u003E\u003Cli data-pid=\"8mRW_0d_\"\u003E\u003Cb\u003ESubsystemType\u002FSubsystemClass\u003C\u002Fb\u003E：指向的是Subsystem的类型，比如TSubclassOf&lt;USubsystem&gt;。\u003C\u002Fli\u003E\u003Cli data-pid=\"epUSx6P6\"\u003E\u003Cb\u003ESubsystem对象\u003C\u002Fb\u003E：指的是真正创建生成实例化出来的Subsystem对象。\u003C\u002Fli\u003E\u003Cli data-pid=\"XwrfjIoq\"\u003E\u003Cb\u003EUMyXXXSubsystem\u003C\u002Fb\u003E: 用户定义的类，我会以My为前缀来区分。\u003C\u002Fli\u003E\u003Cli data-pid=\"WymjEnvn\"\u003E\u003Cb\u003E5类Outer对象\u003C\u002Fb\u003E：Subsystem对象依存属于的5类Outer对象。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Col\u003E\u003Cli data-pid=\"qJ-U4miS\"\u003EUEngine* GEngine;\u003C\u002Fli\u003E\u003Cli data-pid=\"3vwkG5o9\"\u003EUEditorEngine* GEditor; \u003C\u002Fli\u003E\u003Cli data-pid=\"MWpW3YOn\"\u003EUGameInstance* GameInstance; \u003C\u002Fli\u003E\u003Cli data-pid=\"-E5B2DgV\"\u003EUWorld* World;\u003C\u002Fli\u003E\u003Cli data-pid=\"ygTlyacy\"\u003EULocalPlayer* LocalPlayer;\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cul\u003E\u003Cli data-pid=\"HBYW-omR\"\u003E\u003Cb\u003E生命周期5类\u003C\u002Fb\u003E：引擎已经预定义的5个让你可以由此派生的父类。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Col\u003E\u003Cli data-pid=\"nzrMwRX1\"\u003EUEngineSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"L2r_dwfg\"\u003EUEditorSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"LfBn2kg4\"\u003EUGameInstanceSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"f_R9Wljq\"\u003EUWorldSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"H-Iaph4_\"\u003EULocalPlayerSubsystem\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Ch2\u003E\u003Cb\u003ESubsystems是什么？\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"XPXgQ2mP\"\u003E一句话：\u003Cb\u003ESubsystems是一套可以定义自动实例化和释放的类的框架。\u003C\u002Fb\u003E这个框架允许你从5类里选择一个来定义子类(只能在C++定义)：\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-1a596ce3195ccaf4275b0aa88dedf33e_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1516\" data-rawheight=\"668\" data-original-token=\"v2-59be3cc03f6b6c0eabf8ab2af01640f4\" class=\"origin_image zh-lightbox-thumb\" width=\"1516\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-1a596ce3195ccaf4275b0aa88dedf33e_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"tCteyHXB\"\u003E之后就可以享受以下这些福利了：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"X_Pxx8yT\"\u003E\u003Cb\u003E自动实例化 \u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"6SA8f-og\"\u003E这些的UMyXXXSubsystem类，会在合适的时机被创建出对象，然后在合适的时机释放，这个过程是自动化的。不需要自己手写创建代码。也不需要自己显式的定义变量，Subsystems已经定义好方便友好的访问接口了。\u003C\u002Fp\u003E\u003Cp data-pid=\"sLhGMhJP\"\u003E\u003Cb\u003E2. 托管生命周期 \u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"Uu5NIOeb\"\u003E根据你选择的父类不同，引擎会为创建出来的Subsystem实现出不同的生命周期。因此官方文档里会称这5个父类为5个不同的生命周期。根据你选择的生命周期不同，Initialize()和Deinitialize()会自动的在合适的时机被调用。一个Subystem类型也有可能根据需要被自动的被创建出多个实例。这些里面的繁琐逻辑自己都不用操心。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003ESubsystems的基本使用\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"Al8pQwAW\"\u003E在谈到为什么需要Subsystems，以及如何用好Subsystems之前，我们先了解一些Subsystems的基础使用知识。先懂怎么用，然后再谈为什么，以及怎么用好。 目前Subsystems的使用只能在C++端，用起来倒也还简单。\u003C\u002Fp\u003E\u003Cp data-pid=\"qugCtcrU\"\u003E\u003Cb\u003E第一步，定义C++子类：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F声明定义：\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyEditorSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEditorSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyEngineSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEngineSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyGameInstanceSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyWorldSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUWorldSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyLocalPlayerSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EULocalPlayerSubsystem\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002F注：使用UEditorSubsystem需要在Build.cs里加上EditorSubsystem模块的引用，因为这是编辑器模块\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETarget\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EbBuildEditor\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EPublicDependencyModuleNames\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddRange\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Estring\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E[]\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"s\"\u003E&#34;EditorSubsystem&#34;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"V9mMmLVp\"\u003E\u003Cb\u003E第二步，像普通的UObject类一样，可以在里面定义属性和函数。\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"3o6uKBk1\"\u003E以一个非常简单的分数系统为例：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyScoreSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F重载的函数，可以做一些初始化和释放操作\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Evirtual\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EShouldCreateSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoverride\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Evirtual\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EInitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECollection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eoverride\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Evirtual\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EDeinitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eoverride\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EAddScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edelta\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUPROPERTY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEditAnywhere\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintReadWrite\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"FI4duG6u\"\u003E\u003Cb\u003E第三步，就可以在C++和蓝图里访问这些类和调用函数了。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"XTR90Oq_\"\u003E\u003Cb\u003EC++里的访问：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FUMyEngineSubsystem获取\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyEngineSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMySubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGEngine\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetEngineSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyEngineSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002FUMyEditorSubsystem的获取\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyEditorSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMySubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGEditor\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetEditorSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyEditorSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002FUMyGameInstanceSubsystem的获取\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUGameInstance\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGameInstance\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameplayStatics\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetGameInstance\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(...);\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EUMyGameInstanceSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMySubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGameInstance\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyGameInstanceSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002FUMyWorldSubsystem的获取\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUWorld\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EWorld\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMyActor\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetWorld\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002Fworld用各种方式也都可以\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyWorldSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMySubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EWorld\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyWorldSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"c1\"\u003E\u002F\u002FUMyLocalPlayerSubsystem的获取\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EULocalPlayer\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ELocalPlayer\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECast\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EULocalPlayer\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPlayerController\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EPlayer\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EUMyLocalPlayerSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMySubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ELocalPlayer\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyLocalPlayerSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"qzcZKvue\"\u003E当然引擎源码里也已经定义好了一些方便的蓝图库函数，USubsystemBlueprintLibrary里的函数虽然不暴露在蓝图端，但也是可以在C++端方便调用的。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F我省略了一些宏标记和注释，因为函数名字是不言自明的。\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EENGINE_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUSubsystemBlueprintLibrary\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUBlueprintFunctionLibrary\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEngineSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGetEngineSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUEngineSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EGetGameInstanceSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EContextObject\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EULocalPlayerSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EGetLocalPlayerSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EContextObject\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EULocalPlayerSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUWorldSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EGetWorldSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EContextObject\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUWorldSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EULocalPlayerSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EGetLocalPlayerSubSystemFromPlayerController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAPlayerController\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPlayerController\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EULocalPlayerSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"LXPhLr6Q\"\u003E蓝图内的访问：\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-0fa07d1fc3f269b31c723f5b345ae6ce_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"667\" data-rawheight=\"590\" data-original-token=\"v2-5d88fad5dd8bfb6d33c1dc04a507181b\" class=\"origin_image zh-lightbox-thumb\" width=\"667\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-0fa07d1fc3f269b31c723f5b345ae6ce_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"l3HNb6XP\"\u003E用起来的感觉有点像“全局变量”，也有点像是静态蓝图函数（如GetGameInstance），可以方便的在蓝图的各个地方调用。但Subsystems真正的威力其实远不止这点手头上的便利，而在于接下来要谈的引擎帮你自动处理的部分。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E如何理解Subsystems的生命周期？\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"ovui9ev8\"\u003E可以说Subsystems机制的核心之处就是在于引擎帮你托管了对象的生命周期，而理解这些对象生命周期的不同，也是理解Subsystems的关键之处。\u003C\u002Fp\u003E\u003Cp data-pid=\"Lne3UiLN\"\u003E\u003Cb\u003E简短的说，Subsystem对象的生命周期取决于其依存的Outer对象的生命周期，随着Outer对象的创建而创建，随着Outer对象的销毁而销毁。而选择依存哪种Outer对象，就是选择哪种Subsystem生命周期，靠的就是选择继承于哪个Subsystem基类。\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"g49wqeoP\"\u003E从数据角度分析，先一图以概之： \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c4e2d200db7386c086cb59ab49a48449_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1107\" data-rawheight=\"626\" data-original-token=\"v2-dfc8899a8315844e9d9ad8f5172c0073\" class=\"origin_image zh-lightbox-thumb\" width=\"1107\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c4e2d200db7386c086cb59ab49a48449_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"mSkWjV9V\"\u003E从源码里分析，像5类这种对象，比如GEngine，里面都添加了一个FSubsystemCollection&lt;TBaseType&gt; SubsystemCollection的对象，而其基类FSubsystemCollectionBase里面存储了Subsystem对象的引用。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EENGINE_API\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUEngine\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eprivate\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EFSubsystemCollection\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUEngineSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEngineSubsystemCollection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F而FSubsystemCollection又继承于FSubsystemCollectionBase\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Etemplate\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Etypename\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EFSubsystemCollection\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003Cspan class=\"c1\"\u003E\u002F\u002F而FSubsystemCollectionBase里面用Map存储了对象引用\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EENGINE_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFGCObject\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eprivate\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ETMap\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F用Map来存储对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FSubsystem对象类型\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F外部的对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"Z4750Hwe\"\u003E可以看到，这5类Outer对象(UEngine,UEditorEngine,UGameInstance,UWorld,ULocalPlayer)里面都新增了一个FSubsystemCollection&lt;TBaseType&gt; SubsystemCollection的成员变量，用来存储其关联的Subsystem对象。 拿最常用的UGameInstance来举个例子，假如你定义了两个自己UScoreSubsystem(计分系统)和UTaskSubsystem(任务系统)，全都继承于UGameInstanceSubsystem之后，你的对象布局应该是这个样子： \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-969907e096b86475d17269a8d75e6d79_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1287\" data-rawheight=\"614\" data-original-token=\"v2-646fc20d5f69bc6f655a4343f67a0457\" class=\"origin_image zh-lightbox-thumb\" width=\"1287\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-969907e096b86475d17269a8d75e6d79_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"txcLhUEU\"\u003E可以看到GameInstance里的FSubsystemCollection对象存储了生成的UScoreSubsystem和UTaskSubsystem对象的引用，而这二者其Outer都是指向GameInstance对象。数据内存结构还是比较简单的，但也有一些要点：\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"NjWSgQSe\"\u003E我特意标明了FSubsystemCollectionBase继承于FGCObject，意在说明虽然FSubsystemCollection是个结构，其在UGameInstance里，但其内部的对象引用也是受到GC管理的。FGCObject的内容不是此文重点，因此不再赘述，只要明白它是个让F结构也可以让GC管理内部U对象引用的机制。\u003C\u002Fli\u003E\u003Cli data-pid=\"2Ecg68wZ\"\u003EFSubsystemCollectionBase里的UObject* Outer，指向外部的UGameInstance对象。这个Outer可以用来在USubsystem::ShouldCreateSubsystem()或FSubsystemCollectionBase::Initialize(FSubsystemCollectionBase&amp; Collection)的时候，从而可以在某个USubsystem对象创建之前获取到外部Outer，从而继续获取到其他的兄弟姐妹Subsystem对象，从而做一些逻辑判断。当然创建完之后，因为USubsystem对象的Outer其实也为UGameInstance，所以直接GetOuter()也就可以了。\u003C\u002Fli\u003E\u003Cli data-pid=\"fFNnvvPT\"\u003E从TMap的Key为TSubclassOf可以看出，\u003Cb\u003E一种特定类型的USubsystem子类只能创建出一个USubsystem对象\u003C\u002Fb\u003E。所以UScoreSubsystem和UTaskSubsystem可以同时存在，但一种也只能有一个，类似单件模式。\u003C\u002Fli\u003E\u003Cli data-pid=\"vkIbUV6X\"\u003E如果查看UGameInstanceSubsystem的源码（其他同理）：\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAbstract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EWithin\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGameInstance\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EENGINE_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"i4aAXz_7\"\u003E解释一下两个重要的宏标记：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"fIeTwBJp\"\u003EAbstract标记指明UGameInstanceSubsystem是抽象基类，是不能被直接创建出来的。\u003C\u002Fli\u003E\u003Cli data-pid=\"uZKF2ovV\"\u003EWithin = GameInstance，Within这个标记的意思是其对象的Outer必须是某个类型，另外Within的标记是会被继承到子类的。所以综合的意思就是继承于UGameInstanceSubsystem的之类Subsystem对象的Outer必须是GameInstance，保证了其对象的依存合法性。所以其实你也是不能自己随便NewObject()出来的，避免了自己误操作。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"C0GaAxaY\"\u003E总结一下，在Subsystems之前我们其实也可以自己用C++来实现一个类似的“单例模式”，也可以达成类似的效果，其实大家也往往就这么干。但Subsystems给我们带来的远不止这些，因此接下来我们就来谈谈Subsystems相比我们自己手写的优点有哪些。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E为什么要引进Subsystems？\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"IVHdrtRJ\"\u003E首先，我非常赞同官方引入Subsystems这套机制，虽然其实工作量不多，实际源码行数也很少，但是这有效的弥补了程序实践上的一个易混乱缺陷漏洞。为了让你们能真正学习Subsystems并开始用起来，下面我就来好好安利一番：\u003C\u002Fp\u003E\u003Cp data-pid=\"mduXqe4O\"\u003E\u003Cb\u003E一， 不用自己手写，懒人福音，而且更正确\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"9FOnUExD\"\u003E减少Bug最好的方式就是少写代码。诚然Subsystems这套并不是多高深的技术，实现的原理也蛮简单，差不多的程序员都能自己实现一套。但是引擎是否内建提供了该通用机制依然很重要。举例来说，你如果也想实现个类似的单件模式，你可能需要这么写：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyScoreManager\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintPure\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDisplayName\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyScoreManager&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMyScoreManager\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInstance\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMyScoreManager\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Einstance\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Einstance\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Einstance\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENewObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyScoreManager\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003Einstance\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddToRoot\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Einstance\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"c1\"\u003E\u002F\u002Freturn GetMutableDefault&lt;UMyScoreManager&gt;();\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EAddScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edelta\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EUPROPERTY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEditAnywhere\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintReadWrite\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"sKXGYRoH\"\u003E这段代码有什么问题？\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"dRMqKK6x\"\u003E学习负担重，新人看不明白。首先第一个问题就是，但凡是想要用单件模式的人，都得先自己学会这么一编写套路，而且得抄对。\u003C\u002Fli\u003E\u003Cli data-pid=\"s-iW28re\"\u003EAddRoot()往往很多人会忘掉，导致对象被释放，自己却拿它来调用函数是，导致崩溃。\u003C\u002Fli\u003E\u003Cli data-pid=\"oz4Vtdvh\"\u003E这里用GetMutableDefault可不可以？直接采用CDO对象当做单件对象可不可以，区别是什么？又有多少人能分得清呢。实际上二者确实差别不大，只不过是一个是否保留默认值的问题，常常确实可以通用。但GetMutableDefault其实我发现知道和用的人不多。Subsystem是没有直接用CDO的，因为其可能会被反复的创建销毁，所以需要CDO来恢复默认值。\u003C\u002Fli\u003E\u003Cli data-pid=\"oSWoZ9kD\"\u003E这个单件的存续期其实在Editor模式下也会存在，所以在Play和Stop后其值依然会存在，表现为脏值。这也是一个常见的单件陷阱问题。\u003C\u002Fli\u003E\u003Cli data-pid=\"C6OBcI5M\"\u003E因此是否考虑重复创建和销毁的时机？像上述这种写法，单件创建出来后就一直存在。这个时候想处理这个创建销毁的问题又有几个选择：一是再加上Initialize和Deinitialize()函数来手动调用；二是换种写法，不用函数静态变量，而用类静态变量再加上Destroy方法手动调用；三是把static UMyScoreManager* 放到UGameInstance的子类里当做类静态变量，然后在Init和Shutdown的重载函数里进行创建和释放。不同的写法也都有其优缺点，但最大的缺点是：\u003Cb\u003E你要为每个单件类都写一遍，而且不能写错。\u003C\u002Fb\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"2FfYQN7c\"\u003E维护成本高。手动模式要求你为每个新单件类都要记得加上其创建和释放的代码操作。根据第5点，当新定一个MyNewManager，你就得记得先定义静态变量，然后Init里加上创建代码，在ShutDown里加上销毁代码。而引擎的这套机制可以利用反射机制，方便的创建和销毁对象。可维护性比手写的要强多了。\u003C\u002Fli\u003E\u003Cli data-pid=\"5nDMAEf9\"\u003E当然也有人会说用Engine内建提供好的GameInstanceClass，但是缺点是只支持一个类型，而且生命周期是整个引擎，不是一场游戏。 \u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-be0dd217ee405221eeddc89d7f9281a6_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"152\" data-original-token=\"v2-42c21654f0a8c9d5bea72dd6378ecc53\" class=\"origin_image zh-lightbox-thumb\" width=\"806\" data-original=\"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-be0dd217ee405221eeddc89d7f9281a6_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"jTQW3fTO\"\u003E总结一下，你或许可以自己手写出一套足够健壮灵活的机制，但想做好做正确其实并不简单。而且因为你不能侵入引擎源码(受引擎分发升级等限制)，所以你自己实现的方式总会受限。最好的方式是引擎实现好了之后，你理解并用好它。\u003C\u002Fp\u003E\u003Cp data-pid=\"UWVCEKi5\"\u003E\u003Cb\u003E二、 更模块化\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"Ah8xWg_l\"\u003E很多人，包括我自己，在实现一些全局的游戏系统的时候，总是从UGameInstance继承下来，然后在里面码一堆代码：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyGameInstance\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstance\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FUI系统\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPushUI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUUserWidget\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EwidgetClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F任务系统\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECompleteTask\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFString\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EtaskName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F计分系统\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EAddScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edelta\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"upR4WK_f\"\u003E示例代码我就意思一下，但请读者们自己回想一下，自己是否也曾经这么干过呢？有的人请在公屏上打上“确实”。但这么写其实也有三个大问题：\u003C\u002Fp\u003E\u003Cp data-pid=\"Hw5dW4SW\"\u003E\u003Cb\u003E1. 一个类里挤占着太多逻辑。\u003C\u002Fb\u003E可维护性差，不利于分工协作。一个游戏常常有很多个逻辑模块，如任务系统，计分系统，经济系统、对话系统、爆率系统等等，这些都实现在UMyGameInstance里，会导致类越来越庞大，逐渐超过自己的心智负担上限。 \u003C\u002Fp\u003E\u003Cp data-pid=\"uidhu-9h\"\u003E\u003Cb\u003E2. 不利于模块复用。\u003C\u002Fb\u003E假如你下载了个游戏模板，里面有个对话系统，你觉得很好想挪用过来。但人家也是写在UDialogueGameInstance里的，这个时候你只能手动把其代码拷贝到你的UMyGameInstance里。或者说，你的另一款游戏也想复用上款游戏的一些逻辑模块，于是你也只能手动拷贝一遍。想想之前是不是经常这么干？ \u003C\u002Fp\u003E\u003Cp data-pid=\"l5UvLD2r\"\u003E\u003Cb\u003E3. 手动划分Manager类也不够机智。\u003C\u002Fb\u003E当然一些机智的人已经想到了可以把这些业务逻辑模块，划分为不同的Manager类。但问题依旧，你依然需要自己手动去管理这些Manager类的生命周期。\u003C\u002Fp\u003E\u003Cp data-pid=\"370sKQFN\"\u003E因此，现在有了Subsystems之后，你只需要把这些都写成:\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyUISubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002FUI系统\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPushUI\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUUserWidget\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EwidgetClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyTaskSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F任务系统\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECompleteTask\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFString\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EtaskName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyScoreSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F计分系统\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EAddScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edelta\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"dBssjf5V\"\u003E这么写有几点好处：\u003C\u002Fp\u003E\u003Cp data-pid=\"by3sUxUH\"\u003E\u003Cb\u003E1. 代码看起来优雅多了。\u003C\u002Fb\u003E 相应的逻辑组织在对应的类里，易于理解，易于维护，也易于分工协作（可以一个人写一个模块）。 \u003C\u002Fp\u003E\u003Cp data-pid=\"NkwWT0X5\"\u003E\u003Cb\u003E2. 自己不用手写Subsystem对象的创建释放逻辑了。\u003C\u002Fb\u003E解放了双手，也免于出错。 \u003C\u002Fp\u003E\u003Cp data-pid=\"7PrWyQwa\"\u003E\u003Cb\u003E3. 容易迁移复用。\u003C\u002Fb\u003E 想复用一个之前已经写好的比如任务系统，只需要把那个类直接拷贝过来就行了。不需要进行代码的手动拷贝粘贴工作，避免出错。 \u003C\u002Fp\u003E\u003Cp data-pid=\"8-p5Ijal\"\u003E\u003Cb\u003E4. 更好的封装粒度，避免系统之间的数据访问污染。\u003C\u002Fb\u003E按之前的方式，在UMyGameInstance里面，你在实现任务系统的时候，比如StartTask，你可能还需要用到计分系统的Score变量，这个时候你往往可能就直接访问成员变量了。因此，\u003Cb\u003E多个逻辑模块之间的数据其实是互相污染的\u003C\u002Fb\u003E，这是一种耦合紧密，封装不够良好的坏味道。如今拆成多个Subsystem类之后，就可以在特定的系统里，如UMyScoreSubsystem::GetScore()里面做更好的封装和验证。\u003C\u002Fp\u003E\u003Cp data-pid=\"cwryN-13\"\u003E\u003Cb\u003E三，理解的一致性\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"Q4561dUJ\"\u003E当程序员之间进行沟通程序架构的时候，设计模式是一些约定俗成的招数。同样，在UE4里进行逻辑复用的时候，也需要更加的清晰的统一认识。 让我们设想这么一个场景，你从虚幻商城里下载了一个游戏模板，比如一套战斗系统模板。你在去理解怎么把它复用到你的游戏项目里的时候，你会按照什么思路去理解它？你首先要看的是什么文件？如果作者没有写清楚说明文档的话，我发现往往也都是先从GamePlay那几个类先看看里面有什么，然后去Demo关卡里看看用到了哪些Actor类，接着运行起来看看，然后各个目录翻翻。这里面的问题在于，\u003Cb\u003E不同的开发者在编程的时候都有自己的方式，互相之前缺少共识。\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"cLGGVfT0\"\u003E在有了Subsystem之后，如果大家都学习和利用好Subsystem，把自己的功能模块用Subsystem来实现。这样大家都看和理解别人的模块的时候，首先想到的就是去看看对方里面有啥Subsystem类，然后专注的看它就行了。要复用的话也是直接拷贝过来就行。\u003C\u002Fp\u003E\u003Cp data-pid=\"dDNZ0Fx6\"\u003E总结一下，UE里如果提到复用的理解一致性：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"GfI-FC8P\"\u003E\u003Cb\u003E通用功能的复用\u003C\u002Fb\u003E：从各个ActorComponent里查看，这一层代表的往往是跟“游戏逻辑”无关的可复用功能。\u003C\u002Fli\u003E\u003Cli data-pid=\"EZurzyV6\"\u003E\u003Cb\u003E业务逻辑的复用\u003C\u002Fb\u003E：从Subsystem来查找，其代表就是游戏逻辑相关的可复用部分。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"rt_AeRm2\"\u003E至于GamePlay里的各个类，那其实是大家对于业务框架流程的一致性理解，往往并不能直接复用拷贝过来使用。\u003C\u002Fp\u003E\u003Cp data-pid=\"5C2NtePy\"\u003E\u003Cb\u003E四，避免重载引擎类\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"GpS2BPKJ\"\u003E特别是在实现插件模块的时候，其实你并不需要继承于GameInstance或之类的，但是往往你又需要一个“全局的管理类”，于是不得不为之。继承于GameInstance的坏处上文已经说过了，有些人有鉴于此，往往就另建了一个“XXXManagerActor”蓝图类，然后要求用户拖放这个Actor到场景内来使它工作。这其实也只是一种“绕开”的办法而已，从结构上来说不够优雅，从用户使用体验上来说也不够直接。\u003C\u002Fp\u003E\u003Cp data-pid=\"XSkPLHLO\"\u003E\u003Cb\u003E五，生命周期控制粒度更细\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"DycYizUl\"\u003E如果说想让自己的Manager类依存UGameInstance的生命周期还好实现，因为UGameInstance里已经提供了Init和Shutdown的重载，但如果想实现依存Engine，Editor，World，LocalPlayer的不同生命周期，就难很多了。你得去注册这些对象的创建销毁事件，如果没有提供的话，就只能去改源码了，必须修改引擎来在合适的时机插入初始化删除代码。因此相比，Subsystem的实现由引擎开发人员已经实现好了，我们不用自己处理这点脏活，省心。\u003C\u002Fp\u003E\u003Cp data-pid=\"bhxzBXCP\"\u003E\u003Cb\u003E六，更友好的访问接口\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"P-qiTHBk\"\u003E虽然说UE已经提供了Subsystem的Python的访问，但我在UE里用Python不多，因此不是特别在意。光从蓝图的访问接口来说，Subsystem的样子更像个全局变量，而用静态函数模拟的就还只是个函数。这点差别对强迫症来说 算是一点小福利吧。 \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-332b42cd92e52826a2c3a2bd85af69a9_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"569\" data-rawheight=\"152\" data-original-token=\"v2-8dee155bd6ebd7c38a1a3439b4c9077c\" class=\"origin_image zh-lightbox-thumb\" width=\"569\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-332b42cd92e52826a2c3a2bd85af69a9_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"JGnkJzp4\"\u003E但其实还有一点比较隐晦的是，Subsystem有个“上下文”的概念。相比MyScoreManager这种全局函数在哪里都可以访问来获得值，Subsystem的访问接口里会判断当前所属于的对象ContextObject是否能够获得相应的Subsystem对象。比如UWorldSubsystem，就必须在可以根据当前蓝图对象得到World的时候才能访问值，否则是null。比如你如果在一个UserWidget里，或者在一个UObject子类对象里，虽然可以写下MyWorldSubsystem节点，但是返回的会是null。ULocalPlayersystem也是同理。关于“上下文”对象的理解，我们在后面再详述。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E能否再具体解释一下Subsystem对象的创建销毁流程？\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"JE561J1P\"\u003E如果你被我成功安利到了，想要开始使用Subsystems，那下一个问题就是如何用好Subsystems呢？我一直有一个观点，纯熟的应用是要建立在深刻的理解之上的。因此且让我们再花一些时间阐述一下Subsystem对象的具体创建的流程。做到知其然且知其所以然，心中不慌。 从源码上进行分析，虽然真正核心流程并不长，但具体叙述起来也是篇幅太长，因此这里我叙述一些要点：\u003C\u002Fp\u003E\u003Cp data-pid=\"3358ekVT\"\u003E\u003Cb\u003E一，深刻理解5类Outer对象的生命周期。\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"A2_Qc2Jv\"\u003E理解这些引擎重要的内建类的生命周期机制是理解的基础。因此也请读者事先知道引擎编辑器模式、Runtime模式和PIE(Play In Editor)模式这三个的区别。编辑器模式就是你启动编辑器，Runtime模式是指你游戏打包后的运行状态，PIE模式指的是在编辑器里点击Play后的运行状态。\u003C\u002Fp\u003E\u003Col\u003E\u003Cli data-pid=\"tJkMmM5c\"\u003E\u003Cb\u003EUEngine* GEngine： 代表引擎，数量1。\u003C\u002Fb\u003E Editor或Runtime模式都是全局唯一，从进程启动开始创建，进程退出时销毁。\u003C\u002Fli\u003E\u003Cli data-pid=\"U1CajIEJ\"\u003E\u003Cb\u003EUEditorEngine* GEditor： 代表编辑器，数量1\u003C\u002Fb\u003E。  顾名思义，只在编辑器下存在且全局唯一，从编辑器启动开始创建，到编辑器退出时销毁。\u003C\u002Fli\u003E\u003Cli data-pid=\"kE3acoax\"\u003E\u003Cb\u003EUGameInstance* GameInstance：代表一场游戏，数量1。\u003C\u002Fb\u003E 从游戏的启动开始创建，游戏退出时销毁。这里的一场游戏指的是Runtime或PIE模式的运行的都算，一场游戏里可能会创建多个World切换。\u003C\u002Fli\u003E\u003Cli data-pid=\"lQJNWzyT\"\u003E\u003Cb\u003EUWorld* World：代表一个世界，数量可能&gt;1。\u003C\u002Fb\u003E 对此不明白的建议读者去看我之前的GamePlay架构文章。简单来说，World和GameMode是关联的，可以包含多个Level，默认情况下OpenLevel常常会切换World。因此其生命周期，其实跟GameMode是一起的。但也请读者建议，编辑器模式下视口里的场景其实也是个World，因此EWorldType其实有多个类型：Game，Editor，PIE，EditorPreview，GamePreview等。读者需知道，编辑器下的视口场景也是个World!\u003C\u002Fli\u003E\u003Cli data-pid=\"b3YmNMPS\"\u003E\u003Cb\u003EULocalPlayer* LocalPlayer：代表本地玩家，数量可能&gt;1。\u003C\u002Fb\u003E UE支持本地分屏多玩家类型的游戏，但往往最常见的是就只有一个。LocalPlayer虽然往往跟PlayerController一起访问，但是其生命周期其实是跟UGameInstance一起的(默认一开始的时候就创建好一定数量的本地玩家)，或者更准确的说是跟LocalPlayer的具体数量挂钩（当然你也可以运行时动态调用AddLocalPlayer)。\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"YQxqjdwM\"\u003E因此你想理解好那5个Subsystem类的生命周期，就得理解这5个Host对象的生命周期。道理很简单，Subsystem对象的创建和销毁都是在Host对象的创建和销毁的时候相应执行的。\u003C\u002Fp\u003E\u003Cp data-pid=\"PKj8Zre3\"\u003E\u003Cb\u003E二，理解Subsystem对象反射创建销毁流程\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"Vu1nH3Id\"\u003E这5类Outer对象自己创建的时候，都会调用一下\u003Ccode\u003EFSubsystemCollectionBase::Initialize(UObject* NewOuter)\u003C\u002Fcode\u003E，把自己this作为Outer传进去。因此其Subsystem对象的创建流程其实就在这个函数里面：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsChildOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()))\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F如果是UDynamicSubsystem的子类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETPair\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&gt;&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemClasses\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EDynamicSystemModuleMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemClass\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsChildOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n                \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                    \u003Cspan class=\"n\"\u003EAddAndInitializeSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n                \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F普通Subsystem对象的创建\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EGetDerivedClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F反射获得所有子类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemClass\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EAddAndInitializeSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F添加初始化Subsystem对象创建\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"lg-r55OE\"\u003EUDynamicSubsystem的部分，我们稍后再讲。先来讲那些从USubsystem直接继承下来的子类对象创建，可以看到第一步是由反射获得BaseType（就是生命周期5类）的所有Subsystem子类。然后对其一一AddAndInitializeSubsystem：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddAndInitializeSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F...省略一些判断语句，咱们只看核心代码\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECDO\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetDefaultObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECDO\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EShouldCreateSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F从CDO调用ShouldCreateSubsystem来判断是否要创建\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAdd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F创建且添加到Map里\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F创建对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInternalOwningSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F保存父指针\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Ethis\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F调用Initialize\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"7pbdFyWA\"\u003E这一段代码就核心说明了ShouldCreateSubsystem和Initialize的作用！因此自己可不要忘了重载哦~\u003C\u002Fp\u003E\u003Cp data-pid=\"Jq5_O6b-\"\u003E\u003Cb\u003E那销毁呢？\u003C\u002Fb\u003E其实在玩家退出游戏或者按照生命周期，遇到Outer对象要被销毁的时候，其内部都加了一句：\u003Ccode\u003ESubsystemCollection.Deinitialize();\u003C\u002Fcode\u003E，依旧来欣赏一下代码：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDeinitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F...省略一些清除代码\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Eauto\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIter\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECreateIterator\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E++\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F遍历Map\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EKeyClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EKey\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EIter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EKeyClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDeinitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F反初始化\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInternalOwningSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ESubsystemMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EEmpty\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EOuter\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"3xlRd_Lf\"\u003E逻辑也非常简单，遍历然后Deinitialize就是！\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E思考：那Subsystem是怎么被GC掉的呢？\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"2tyNXwZv\"\u003E我们在上述的代码里并不会看到手动的调用Destroy，因为USubsystem对象是个UObject对象，其依然是受GC管理的。Subsystem对象和Outer对象之前隔了一个FSubsystemCollection结构，为了让F结构依然可以追溯到对象引用，因此FSubsystemCollectionBase继承于FGCObject，所以我们也能找到如下代码：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddReferencedObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFReferenceCollector\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECollector\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ECollector\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddReferencedObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"QDxz_CTO\"\u003E当\u003Ccode\u003EFSubsystemCollectionBase::Deinitialize()\u003C\u002Fcode\u003E里进行\u003Ccode\u003ESubsystemMap.Empty();\u003C\u002Fcode\u003E后，USubsystem对象就没有被持有引用了，在下一帧的GC的时候，就会被判定为PendingKill的对象，从而得到Destroy。 这里的妙处是，直接利用了UObject对象之间引用所带来的生命周期绑定机制，来直接把USubsystem对象的生命周期和其Outer对象关联起来，而不用写重复的代码。秒啊！\u003C\u002Fp\u003E\u003Cp data-pid=\"Daw-ZcKq\"\u003E\u003Cb\u003E三，理解UDynamicSubsystem\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"ClLze-cS\"\u003E从一开始的类继承结构来看，读者们肯定已经发现UEngineSubsystem和UEditorSubsystem是继承于UDynamicSubsystem的，那为什么要如此设计呢？ \u003C\u002Fp\u003E\u003Cp data-pid=\"2xzdCBDU\"\u003E顾名思义，其为动态Subsystem，动态二字，表明其会被动态的对待。\u003Cb\u003E这里的动态特指随着模块的加载释放来创建和销毁。\u003C\u002Fb\u003E要理解这点，首先要理解UE4的模块机制，简单来说，一个uproject项目或uplugin插件可以包含多个Module模块，每个Module可以有个Build.cs，每个模块可以被编译成一个Dll。模块之间可以互相引用。因此一个模块可能有多个依赖的其他模块，我们假如叫它：DependencyModules。引擎的机制是加载一个模块的时候会自动的加载DependencyModules，\u003C\u002Fp\u003E\u003Cp data-pid=\"Fa_ux9aB\"\u003E首先假设我有一个插件叫做MyPlugin.uplugin，然后有个项目Hello.uproject，Hello项目想使用MyPlugin插件。MyPlugin里依次都定义了：UMyPluginEngineSubsystem，UMyPluginEditorSubsystem和UMyPluginGameInstanceSubsystem。\u003C\u002Fp\u003E\u003Cp data-pid=\"Ar7-cmls\"\u003E\u003Cb\u003E显式添加依赖的方式：事先配置好DependencyModules\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"cz0K6RWs\"\u003E当你在Hello项目插件设置上上开启MyPlugin，或者在Hello.uproject里写上\u003Ccode\u003E&#34;Plugins&#34;: [{&#34;Name&#34;: &#34;MyPlugin&#34;,&#34;Enabled&#34;: true}]\u003C\u002Fcode\u003E，或者在Build.cs里加上\u003Ccode\u003EPublicDependencyModuleNames.Add(&#34;MyOtherModule&#34;);\u003C\u002Fcode\u003E，这些方式其实都是在显式的在一开始配置好项目的DependencyModules。这样当Hello模块启动的时候，引擎会自动的加载其依赖模块(MyPlugin)，从而你会发现UMyPluginEngineSubsystem和UMyPluginEditorSubsystem在编辑器一启动的时候就会创建并Initialize。 但是如下的代码分支，其实是只在GEditor初始化的时候才会调用到，因为这个时候其他插件里模块还没有加载。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsChildOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()))\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F如果是UDynamicSubsystem的子类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETPair\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&gt;&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemClasses\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EDynamicSystemModuleMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemClass\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EValue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsChildOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n                \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                    \u003Cspan class=\"n\"\u003EAddAndInitializeSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n                \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eelse\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F普通Subsystem对象的创建\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"BLzjPDM1\"\u003E这个时候加载的DynamicSystemModuleMap中最重要的就是UnrealEd模块。UnrealEd里面本身其实也已经定义了几个Subsystem: AssetEditorSubsystem，BrushEditingSubsystem，ImportSubsystem，LayersSubsystem和PanelExtensionSubsystem。\u003C\u002Fp\u003E\u003Cp data-pid=\"pNn9cPAL\"\u003E\u003Cb\u003E那MyPlugin里的Subsystem什么时候创建呢？\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"ZSl20cdd\"\u003E还是这块代码，其实在第一次初始化的时候，就用FSubsystemModuleWatcher\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemCollections\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E==\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F静态变量，用数目来判断是第一次创建\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EFSubsystemModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitializeModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitializeModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F 获得所有UDynamicSubsystem的子类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGetDerivedClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Etrue\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemClass\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"c1\"\u003E\u002F\u002F遍历\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EHasAllClassFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECLASS_Abstract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E  \u003Cspan class=\"c1\"\u003E\u002F\u002F不为抽象类\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClassPackage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetOuterUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F获得所属于的包\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EModuleName\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFPackageName\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetShortFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetFName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n                \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFModuleManager\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsModuleLoaded\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n                \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n                    \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EModuleSubsystemClasses\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDynamicSystemModuleMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFindOrAdd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n                    \u003Cspan class=\"n\"\u003EModuleSubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAdd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F添加到DynamicSystemModuleMap\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E                \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n            \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F注册模块加载和释放事件\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EModulesChangedHandle\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFModuleManager\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOnModulesChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddStatic\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFSubsystemModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOnModulesChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"DTAMNnzV\"\u003E其中最重要的就是遍历当前进程里的UDynamicSubsystem子类们，并按照模块划分存储进DynamicSystemModuleMap，这样之后就知道当加载或释放某个模块的时候，应该去创建和销毁哪些Subsystem类型对象。\u003C\u002Fp\u003E\u003Cp data-pid=\"lIAFTLjs\"\u003E第二步是OnModulesChanged事件的注册，这样在后面加载的模块就能够得到通知：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EOnModulesChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EModuleThatChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEModuleChangeReason\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EReasonForChange\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eswitch\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EReasonForChange\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEModuleChangeReason\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003EModuleLoaded\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EAddClassesForModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EModuleThatChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F创建一个模块的DynamicSubsystem类们\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Ebreak\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"k\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EEModuleChangeReason\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"nl\"\u003EModuleUnloaded\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003ERemoveClassesForModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EModuleThatChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F销毁一个模块的DynamicSubsystem类们\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Ebreak\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"mhLnFoNY\"\u003E而这两个方法的实现其实也挺简单，就是查找该代码模块里定义的类看看是否是UDynamicSubsystem子类，然后为其创建对象实例。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddClassesForModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F 找到这个模块所定义的代码包\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUPackage\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EClassPackage\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFindPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Enullptr\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;\u002FScript\u002F&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EToString\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()));\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPackageObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGetObjectsWithOuter\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EClassPackage\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPackageObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"nb\"\u003Efalse\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F得到该模块里定义的所有对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EObject\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EPackageObjects\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECurrentClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECast\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EObject\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F转成UClass试试\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECurrentClass\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECurrentClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EHasAllClassFlags\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECLASS_Abstract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&amp;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECurrentClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsChildOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()))\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F满足这些条件\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAdd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECurrentClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddAllInstances\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECurrentClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F为这个类创建对象实例\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ENum\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"mi\"\u003E0\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F如果其内部有定义Subsystem类，有些可能没有\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F就需要登记一下\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDynamicSystemModuleMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAdd\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EMoveTemp\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemModuleWatcher\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERemoveClassesForModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFName\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EInModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&gt;*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDynamicSystemModuleMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFind\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F如果能找到，说明其之前有登记过\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETSubclassOf\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUDynamicSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemClass\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClasses\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n            \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERemoveAllInstances\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F销毁这个类的所有对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EDynamicSystemModuleMap\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERemove\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInModuleName\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F移除登记\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"jYpxWQHu\"\u003E创建和销毁类的对象实例代码：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddAllInstances\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Efor\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003ESubsystemCollection\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemCollections\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsChildOf\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemCollection\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBaseType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E))\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F这个函数之前解释过，用来创建对象\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"n\"\u003ESubsystemCollection\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddAndInitializeSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERemoveAllInstances\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUClass\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EForEachObjectOfClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E[](\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystemObj\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F遍历属于该类型的对象们\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n        \u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECastChecked\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystemObj\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"k\"\u003Eif\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInternalOwningSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E   \u003Cspan class=\"c1\"\u003E\u002F\u002F也是大同小异的释放操作\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E            \u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInternalOwningSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERemoveAndDeinitializeSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ESubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n        \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"p\"\u003E});\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"JvuSSwFi\"\u003E这里的关键是SubsystemCollections是个静态变量，其引用了整个进程的所有定义的FSubsystemCollection的数量（2个在GEngine和GEditor里，其他多个可能动态新增在GameInstance，World，LocalPlayer里），这么写其实只是保险一点保证一个Subsystem类型的对象能够自动的多个SubsystemCollection里正确的创建多个。因为AddAllInstances也可能是个会被复用的方法。\u003C\u002Fp\u003E\u003Cp data-pid=\"LQeASaDS\"\u003E说了一大堆，其实想说明MyPlugin模块在被加载的时候，会自动的触发OnModulesChanged事件，从而被自动的创建出内部的UMyPluginEngineSubsystem和UMyPluginEditorSubsystem。\u003C\u002Fp\u003E\u003Cp data-pid=\"phz2ZpWd\"\u003E\u003Cb\u003E后期动态加载模块或插件：\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"X9OjCYJp\"\u003E如果你不写上述的那些“静态”引用方式，想要在游戏或编辑器运行一段时间后然后动态的加载某个模块或插件。UE当然也支持，方法是： \u003C\u002Fp\u003E\u003Cp data-pid=\"s8ohV53p\"\u003E对于模块，假如MyOtherModule是Hello项目里定义的另一个模块，你别在Build.cs添加Dependency引用，反而选择在后续的时机调用\u003Ccode\u003EFModuleManager::Get().LoadModule(TEXT(&#34;MyOtherModule&#34;));\u003C\u002Fcode\u003E,你就会发现MyOtherModule的StartupModule开始调用了。如果这个模块里有定义DynamicSubsystem，其会被创建出来。 对于插件，假如Hello项目不开启MyPlugin插件，\u003Cb\u003E且在MyPlugin.uplugin里加上一句：\u003Ccode\u003E&#34;ExplicitlyLoaded&#34;: true\u003C\u002Fcode\u003E\u003C\u002Fb\u003E，这一句很重要，表明后面要显式的动态加载。这样你在之后的时机里调用：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EFString\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFPaths\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECombine\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFPaths\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EProjectPluginsDir\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(),\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyPlugin\u002FMyPlugin.uplugin&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EIPluginManager\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EAddToPluginsList\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Epath\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F添加插件路径让可以找到\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIPluginManager\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGet\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E().\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EMountExplicitlyLoadedPlugin\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;MyPlugin&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F显式加载\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"66IWE3VH\"\u003E这样这个插件就会被加载起来了。UMyPluginEngineSubsystem和UMyPluginEditorSubsystem也就会在这个时候被创建出来了。\u003C\u002Fp\u003E\u003Cp data-pid=\"mUat08Mf\"\u003E\u003Cb\u003E总结一下\u003C\u002Fb\u003E，MyPlugin里的DynamicSubsystem们，虽然都是靠触发OnModulesChanged事件来创建和销毁自己。但是根据你项目配置模块引用的不同，时机也可以不同。\u003Cb\u003E所以DynamicSubsystem可以根据Module的加载释放来创建销毁，就是此动态的含义！\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E思考：动态加载MyPlugin里的UMyPluginGameInstanceSubsystem可以正常工作吗？\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"5TGDBIwP\"\u003E答案是可以。UMyPluginGameInstanceSubsystem虽然不是UDynamicSubsystem，但因为其需要创建的时机是游戏运行时。而这个时候，其实你如果去\u003Ccode\u003EGetDerivedClasses(TSubclassOf&amp;lt;UGameInstanceSubsystem&amp;gt;)\u003C\u002Fcode\u003E，你可以成功的获得到UMyPluginGameInstanceSubsystem。原因是MyPlugin这个模块dll加载的时候，其身带的反射代码里的全局静态变量会自动的在进程里注册进各种类型。这部分机制请参考我之前写的UObject文章，说来实在太话长了。所以MyPlugin已经被加载进来之后，你再点击Play，这个时候已经可以正确的使用MyPlugin里定义的非DynamicSubystem了。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E思考：那为什么只有UEngineSubsystem和UEditorSubsystem才是UDynamicSubsystem呢？\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"Xc3jJ7_g\"\u003E还是得从生命周期来思考。生命周期5类中，只有UEngineSubsystem和UEditorSubsystem的生命周期是跟游戏的进程绑定在一起的。因此\u003Cb\u003E游戏进程启动的时候创建Subsystem叫做默认创建，游戏进程启动一段时间后想创建Subsystem叫做动态创建\u003C\u002Fb\u003E。而对于另外3个：UGameInstanceSubsystem，UWorldSubsystem和ULocalPlayerSubsystem，你观察一下，发现这3者都是跟一场游戏的生命周期绑定的！因此无论这3者定义上如何动态，其在编辑器启动后，都不会创建出来！而反正\u003Cb\u003E这3者会随着Play和Stop来反反复复的创建和销毁，其本身已经足够动态！\u003C\u002Fb\u003E因此就不需要专门处理了。结论还是其根据生命周期的不同而定的机制。 \u003C\u002Fp\u003E\u003Cp data-pid=\"iZgQVud2\"\u003E那前面说过了，UWorldSubsystem可能也会被WorldType::Editor的创建出来，其明显生命周期不是跟游戏一起的，编辑器如果已经完全启动完成了，那再动态加载的插件里定义的WorldSubsystem其实并不能扩展到Editor的World里。那这怎么理解呢？你可以把这当做是一种疏漏，但也可以当做是一种小故意。其含义就是：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"9-q0mEuF\"\u003EEngine和Editor在启动前启动后，都可以通过静态或动态加载插件来扩展。\u003C\u002Fli\u003E\u003Cli data-pid=\"Xi1WMugX\"\u003EGame的部分，如果想扩展的话，就尽量在Game启动之前。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"hzkXV1uO\"\u003E理论上你当然可以做一些骚操作，在游戏运行一半的时候，动态加载某个插件，然后再下个World里应用上你新增的WorldSubsystem，但实际情况是没这必要这么麻烦，因为已经有ShouldCreateSubsystem可以让你控制了。\u003C\u002Fp\u003E\u003Cp data-pid=\"a6dLlMWc\"\u003E\u003Cb\u003E四，理解Subsystem对象的个体生命周期\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"zNHsiMT8\"\u003E这一部分比较简单，就是你要理解好一个Subsystem对象：ShouldCreateSubsystem，Initialize和Deinitialize的调用时机才知道应该怎么重载。 \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-933729259852ecba032db5b19a6ebf4f_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"984\" data-rawheight=\"554\" data-original-token=\"v2-5572a4e08e9176f3d7993fe322cd5c64\" class=\"origin_image zh-lightbox-thumb\" width=\"984\" data-original=\"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-933729259852ecba032db5b19a6ebf4f_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp data-pid=\"MX_IL0b1\"\u003E要明白USubsystem本身是一个UObject，所以必然有CDO。自己用的时候要注意这一点。\u003C\u002Fp\u003E\u003Cp data-pid=\"UV4tQ402\"\u003E\u003Cb\u003E五，总结一下其生命周期的不同时机\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"2PK9Rj95\"\u003E絮叨了一堆，希望读者们能清晰明白到生命周期其关键点就在于什么时候触发SystemCollection的Initiaze和DeInitialize，根据Outer对象自身运行机制生命周期的不同，由此搭配出不同的使用方式。在理解了这些不同Subsystem对象的不同之后，也许你也可以由此组织实现符合自己需求的加载创建策略。 \u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-69546312c4c3c05093f94f12b60904cf_1440w.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1233\" data-rawheight=\"486\" data-original-token=\"v2-47b76ae554f09a8f56b299849f696d17\" class=\"origin_image zh-lightbox-thumb\" width=\"1233\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-69546312c4c3c05093f94f12b60904cf_r.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Ch2\u003E\u003Cb\u003E如何用好Subsystems？\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"wnGbOK7l\"\u003E如果说到学习使用Subsystems的难点是什么，那肯定是如何用好它了！Subsystems本身是机制和使用方式并不复杂，但反而容易令人疑惑的是：\u003Cb\u003E该把自己项目的哪些业务逻辑封装成Subsystem？\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"uR9QYYbc\"\u003E一谈到编程实践，笔者本身并无金科玉律可传授，但可分享一些理解的点和使用的经验：\u003C\u002Fp\u003E\u003Cp data-pid=\"1KEtwR2W\"\u003E\u003Cb\u003E1. Subsystem是GamePlay级别的Component。\u003C\u002Fb\u003E要好好理解这句话的关键是，你要明白：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"4-WbtDzM\"\u003EComponent组件模式在程序架构中的作用套路，组合胜过继承而带来的灵活性。\u003C\u002Fli\u003E\u003Cli data-pid=\"8M72qvdb\"\u003E清晰区分通用功能和业务逻辑。对于一个游戏来说，通用功能可能是人物按格子行走的\u003Cb\u003E能力\u003C\u002Fb\u003E，而业务逻辑是这个人物自身的战斗结算系统。通常来说，我倾向于把功能理解为可在不同游戏之间复用的功能，尽量与某款特定游戏无关，而与某类游戏相关，比如CharacterMovement。那自然的，剩下的与某款游戏强相关的部分，就是该游戏的业务逻辑部分了。对于\u003Cb\u003E功能能力\u003C\u002Fb\u003E，你应该用ActorComponent来实现。对于\u003Cb\u003E业务逻辑\u003C\u002Fb\u003E，你应该用Subsystem来实现。更清晰的对比是：\u003C\u002Fli\u003E\u003Cul\u003E\u003Cli data-pid=\"qbgnzVTN\"\u003EActorComponent：依托Actor存在，封装基础的功能，着眼于某一功能的实现。\u003C\u002Fli\u003E\u003Cli data-pid=\"sinLno-H\"\u003ESubsystem：依托GamePlay对象存在，封装游戏的业务逻辑，专注于某部分游戏逻辑系统的调度安排。\u003C\u002Fli\u003E\u003Cli data-pid=\"sCudT3et\"\u003E二者是配合补充的关系。Component在底层专注于功能，Subsystem在上层统筹调度。虽然二者也可以有一些交集，可以替代着实现一些功能，但笔者并不建议如此。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Ful\u003E\u003Cp data-pid=\"OFNRyEFn\"\u003E\u003Cb\u003E2. USubsystem只是个普通的UObject。\u003C\u002Fb\u003E 所以，别害怕，USubsystem并没有什么特殊的，你之前可以在UObject里写的东西，可以实现的功能，依然可以在USubsystem里实现。所以你可以在里面写UPROPERTY和UFUNCTION，也可以定义事件，也可以被蓝图继承引用等等。只是心里永远有个意识，Subsystem的生命周期处于你的掌控之中。\u003C\u002Fp\u003E\u003Cp data-pid=\"zxTH2z6X\"\u003E\u003Cb\u003E3. Subsystem是有状态的。\u003C\u002Fb\u003E很多人可能还发现其跟蓝图函数库有点相像，但其最大的区别是蓝图函数库本身全都是静态函数，是无状态的。而Subsystem对象里面可以放属性，会真正的被构建出对象来，因此是有状态的。理论上你也是可以对此序列化的。\u003C\u002Fp\u003E\u003Cp data-pid=\"iYCgp46r\"\u003E\u003Cb\u003E4. 尽量不要再写Manager类了。\u003C\u002Fb\u003E在以前你或许会自己定义一些Manager类，比如MapManager之类的，但现在都可以换成UMapWorldSubsystem了。理由是之前我们定义Manager类，无非是想要有一个全局的统一管理类来统筹做一些调度管理，现在这部分工作可以由Subsystem来做了。自己定义的Manager类的理由和空间越来越小了。\u003C\u002Fp\u003E\u003Cp data-pid=\"_3Q6VYui\"\u003E\u003Cb\u003E5. 引擎源码里已经定义了一些Subsystem，方便你抄袭学习。\u003C\u002Fb\u003E UE引进了Subsystem并不是只对外提供给开发者使用的，其内部也自己先吃了Dogfood，把一些功能改造成Subsystem了。简单列一下列表。具体的功能不解释了，有兴趣自己去模板。\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli data-pid=\"4l4EyOX8\"\u003EUEditorSubsystem\u003C\u002Fli\u003E\u003Cul\u003E\u003Cli data-pid=\"fIGDQMXY\"\u003EUnrealEd.AssetEditorSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"X4z8U4ia\"\u003EUnrealEd.BrushEditingSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"Rze2CXMl\"\u003EUnrealEd.ImportSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"JFmYJvtS\"\u003EUnrealEd.LayersSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"mvalFpWX\"\u003EUnrealEd.PanelExtensionSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"48BvO5fb\"\u003EMovieRenderPipelineEditor.MoviePipelineQueueSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"t6MfRiG3\"\u003EBlutility.EditorUtilitySubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"KGbTgBs3\"\u003EGeometryMode.UBrushEditingSubsystem\u003C\u002Fli\u003E\u003Cul\u003E\u003Cli data-pid=\"hsNL6DeP\"\u003EGeometryMode.UBrushEditingSubsystemImpl\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cli data-pid=\"sBaD02K4\"\u003EVirtualProductionUtilities.UVPScoutingSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"RWOonwVu\"\u003EDataValidation.UEditorValidatorSubsystem\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cli data-pid=\"5knvZO7p\"\u003EUWorldSubsystem\u003C\u002Fli\u003E\u003Cul\u003E\u003Cli data-pid=\"k0DpLhEa\"\u003ELandscape.LandscapeSubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"2SpKydr_\"\u003EEngine.AutoDestroySubsystem\u003C\u002Fli\u003E\u003Cli data-pid=\"tmHMqiiP\"\u003EEngine.ObjectTraceWorldSubsystem\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Ful\u003E\u003Ch2\u003E\u003Cb\u003E使用Subsystems的各种姿势\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"je27h2SC\"\u003E继续分享一些能想到的编写Subsystems的套路：\u003C\u002Fp\u003E\u003Cp data-pid=\"AqomNjTf\"\u003E\u003Cb\u003E1. 可定义一个Subsystem抽象基类，然后派生多个子类。\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"YjWNkYxn\"\u003E用这种方式，依然可以在Subsystem的继承体系里往上抽象一些基本逻辑。官方直播里举的一个例子我觉得特别的形象，假如你要实现版本控制系统，且同时支持多个协议。这时你就可以定一个\u003Ccode\u003EUCLASS(abstract) USourceControlSubsystem\u003C\u002Fcode\u003E，然后往下派生出UGitSubsystem，USVNSubsystem，UPerforceSubsystem等等。原因是这些版本管理系统是拥有一些共同机制的。但请注意在基类上务必加上abstract的标记，以防止其也被实例化出来，那就很容易引起混淆了。 然后引擎还支持Subsystem的遍历：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUSourceControlSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*&gt;&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Esystems\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EGEngine\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E-&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetEngineSubsystemArray\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUSourceControlSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"yuVNNmcX\"\u003E这样就可以获得其多个git，svn等Subsystem实例了。\u003C\u002Fp\u003E\u003Cp data-pid=\"zkZLXMHo\"\u003E\u003Cb\u003E2. Subsystem也支持蓝图继承！\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"GT8IQOqL\"\u003E目前虽然不支持直接在蓝图里定义Subsystem，究其原因是生命周期5类定义的时候UCLASS里都没加上Blueprintable标记。但这一步其实很容易绕过，只要你自己定义的Subsystem上的UCLASS里加上标记：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003Eabstract\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EBlueprintType\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyGameInstanceSubsystemBase\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"v1sHJf54\"\u003E这样就可以在蓝图里继承然后使用了。依然加上abstract的用意是防止UMyGameInstanceSubsystemBase被实例化出来，造成混淆。Blueprintable和BlueprintType是支持蓝图继承和定义变量。\u003C\u002Fp\u003E\u003Cp data-pid=\"wVs1YaxX\"\u003E注意：抱歉，之前没有写清楚。有些人反馈遇见了蓝图Subsystem无法创建的问题。这个问题的原因是，如果你的蓝图类只是创建出来，但是在还没有被加载的时候，这个蓝图类的类型其实还没有注册到UE的类型系统里。因此就导致了SubsystemCollection在搜集和创建的时候，无法识别到该蓝图类，因此就无法创建出来。特别要提醒注意的是，这个问题很隐晦，很多人可能会发现有时可以创建有时失败，很有可能只是因为有时你在UE编辑器里双击打开了这个Subsystem蓝图类，而有时没有。在编辑器里双击打开蓝图类其实就会触发BP的加载，因此会发现PIE的时候就能正确创建了，而有时你没打开，就会创建失败。\u003C\u002Fp\u003E\u003Cp data-pid=\"7DYMtaw0\"\u003E理解了原因之后，解决的方式其实就很简单了，只要我们手动的触发一个Load，就可以了。\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFHelloModule\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStartupModule\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n\t\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EbpAsset\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ELoadObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUObject\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"nb\"\u003ENULL\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETEXT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"s\"\u003E&#34;\u002FGame\u002FBP_MyGameInstanceSubsystem.BP_MyGameInstanceSubsystem_C&#34;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E));\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"NVTiLNU5\"\u003E因此假如我们在模块的StartupModule里自己手动加载一下这个蓝图，其实就可以创建成功了。\u003C\u002Fp\u003E\u003Cp data-pid=\"RDPnard9\"\u003E\u003Cb\u003E3. 同一个BaseType下的多个Subsystem可以定义依赖顺序\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"1-ku7Ssy\"\u003E虽然不太推荐在Subsystem之间构成强顺序依赖，但万一你真的需要的话，比如任务系统依赖于计分系统的计算结果来决定是否触发某个任务。这个时候，你可以这么写：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUMyTaskSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitialize\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFSubsystemCollectionBase\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&amp;\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ECollection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F初始化依赖项\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003ECollection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EInitializeDependency\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyScoreSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n    \u003Cspan class=\"c1\"\u003E\u002F\u002F获取\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"n\"\u003EUMyScoreSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Ess\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E((\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFSubsystemCollection\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;&amp;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ECollection\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E).\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EGetSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&lt;\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyScoreSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyScoreSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E::\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EStaticClass\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E());\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"tZksLqBS\"\u003EInitializeDependency内部会调用一下AddAndInitializeSubsystem来确保UMyScoreSubsystem已经被创建出来。这样你在后续就可以访问了。现在的访问方式依然有点别扭，希望后续可以改善。\u003C\u002Fp\u003E\u003Cp data-pid=\"vGQlEvzx\"\u003E\u003Cb\u003E4. Subsystem之间也可以通信\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"JJ6hn-vC\"\u003E只要你获取到目标Subsystem的对象引用，你就可以使用它了。获取的方式有多种，一种是通过GEngine或GetGameInstance()等外部对象开始，然后GetSubsystem()来特定的获取。另一种是通过Subsystem在Initialize的时候，保存下其他Subsystem对象的指针来后续访问。\u003C\u002Fp\u003E\u003Cp data-pid=\"MIlCgHzw\"\u003E\u003Cb\u003E5. Subsystem也可以支持Tick\u003C\u002Fb\u003E \u003C\u002Fp\u003E\u003Cp data-pid=\"Z0U0HSRs\"\u003E参考源码里的UAutoDestroySubsystem，咱们自己写一个支持Tick的Subsystem可以继承自FTickableGameObject：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EUCLASS\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"nc\"\u003EHELLO_API\u003C\u002Fspan\u003E \u003Cspan class=\"nl\"\u003EUMyTickSubsystem\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EUGameInstanceSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EFTickableGameObject\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EGENERATED_BODY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E\n\u003Cspan class=\"k\"\u003Epublic\u003C\u002Fspan\u003E\u003Cspan class=\"o\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Evirtual\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETick\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EDeltaTime\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoverride\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"k\"\u003Evirtual\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Ebool\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EIsTickable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoverride\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E!\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EIsTemplate\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E();\u003C\u002Fspan\u003E \u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u002F\u002F不是CDO才Tick\n\u003C\u002Fspan\u003E\u003Cspan class=\"c1\"\u003E\u003C\u002Fspan\u003E    \u003Cspan class=\"k\"\u003Evirtual\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ETStatId\u003C\u002Fspan\u003E \u003Cspan class=\"nf\"\u003EGetStatId\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E()\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"k\"\u003Eoverride\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003ERETURN_QUICK_DECLARE_CYCLE_STAT\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EUMyScoreSubsystem\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ESTATGROUP_Tickables\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);}\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E};\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"rnpd0IMF\"\u003E其中IsTickable的实现要注意一下避免CDO，否则会造成Tick两次。\u003C\u002Fp\u003E\u003Cp data-pid=\"meKyW_oG\"\u003E\u003Cb\u003E6. SubSystem里定义一些委托回调是一个常用的套路\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"4y1FjvsP\"\u003E还是以Score系统为例子，Subsystem往往自身都带有一些业务数据。而当这些数据改变的时候，往往也需要通知一些对象如UI来更新状态。这个时候可以定义一些委托回调：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-cpp\"\u003E\u003Cspan class=\"n\"\u003EDECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EFScoreChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003ENewScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUPROPERTY\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintAssignable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"n\"\u003EFScoreChanged\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EOnScoreChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"n\"\u003EUFUNCTION\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBlueprintCallable\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"kt\"\u003Evoid\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003EAddScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"kt\"\u003Efloat\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edelta\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E{\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EScore\u003C\u002Fspan\u003E \u003Cspan class=\"o\"\u003E+=\u003C\u002Fspan\u003E \u003Cspan class=\"n\"\u003Edelta\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"n\"\u003EOnScoreChanged\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EBroadcast\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"n\"\u003EScore\u003C\u002Fspan\u003E\u003Cspan class=\"p\"\u003E);\u003C\u002Fspan\u003E\n\u003Cspan class=\"p\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp data-pid=\"K1SwXWCs\"\u003E这样OnScoreChanged就可以在蓝图和其他地方BindEvent了。因为Subsystem本身具有全局访问的特性，因此往往很容易作为数据的集中式更新和事件的统一分发处。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E再来一些零散的思考吧\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"UaLo9s99\"\u003E还有一些小的思考，也想分享一下。作为一个程序架构设计的思考领悟交流。\u003C\u002Fp\u003E\u003Ch3\u003E思考：\u003Cb\u003ESubsystem支持网络复制吗？\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"a3w_xCrm\"\u003E不支持。我们知道UE里的网络复制是基于Actor的ActorChannel的，而USubsystem是普通的UObject对象，因此并不支持。在这一点上，你可能会有冲动去定义一个AManagerActor类来作为通信通道，这也许是一个好主意，但也得仔细的评估。因为常常很多时候，GameState和PlayerState等一些内建的GamePlay通信已经能够满足你的需求，我比较建议尽量把职责划分清楚。实在不行的话，那就用一个Actor来作为通信通道吧，反正再坏也坏不到哪里去，是吧。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E思考：Subsystem为什么单挑这5个类？\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"QAB1l6J_\"\u003E多问几个为什么，不免会此疑问。我自己在思考这个问题的时候，会从引擎的关键流程有几个来思考。Engine支持了通用的引擎时机，Editor专门支持了编辑器。接下来的游戏启动和关闭，有GameInstance来负责了。然后游戏中的切换关卡有World相关联了。本地多玩家由LocalPlayer来支持。你会发现，这些对象都是关键的数据节点。\u003C\u002Fp\u003E\u003Cp data-pid=\"lAoCiFLA\"\u003E有人可能会问那怎么不弄UGameModeSubsystem？怎么不弄UPlayerControllerSubsystem？我尝试回答的答案是要控制拆分的粒度。理论上你甚至可以再定义UPawnSubsystem，把角色身上的业务逻辑也垂直拆分一下，但这未免就有点太多太细了，在很多时候往往都用不上。业务逻辑粒度太小了就更难拆分出来了。因此设计的一个原则是合适的考虑实际需求，不宜妄自追求灵活性。另一个方面，GameMode和PlayerController这些对象的生命周期往往是和World一起的，得到了World就可以顺藤摸瓜得到其他，因此在功能实现上倒也不损失多少。\u003C\u002Fp\u003E\u003Cp data-pid=\"9RpYXCIU\"\u003E当然，我同时的观点是引擎是一个持续迭代的产物，未来也许也会根据需要继续添加其他。未来需要构建更大的大世界后，架构必须演化以适应，自然会做更多的自调整。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E思考：可否自己也参照着新建个USubsystem基类？\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"EU_8xeos\"\u003E源码在手，为所欲为。在理解了这套机制的基础上，自己读读源码，其实不难参照着自己写一套。只是我自己确实没有想到实际的游戏需求。关键的倒不是如何继续添加一个，而是在吸收了这些架构知识营养后，读者们可以在自己的游戏结构里灵活应用上对象的反射和事件注册等知识。\u003C\u002Fp\u003E\u003Ch3\u003E\u003Cb\u003E思考：好奇蓝图里是怎么访问到Subsystem全局变量的？\u003C\u002Fb\u003E\u003C\u002Fh3\u003E\u003Cp data-pid=\"8xQjSf8t\"\u003E关于这一点，引擎其实是做了专门的实现的。具体的源码原理可以参照，UK2Node_GetSubsystem定义了专门的蓝图节点，其内部实现会转发到USubsystemBlueprintLibrary的一些静态函数接口去。因此关于怎么理解Subsystem的上下文ContextObject这个问题，读者朋友们可以好好的读下USubsystemBlueprintLibrary的源码。其内容比较简单直接，我就不赘述贴出来了。\u003C\u002Fp\u003E\u003Ch2\u003E\u003Cb\u003E总结\u003C\u002Fb\u003E\u003C\u002Fh2\u003E\u003Cp data-pid=\"LN4UeI-6\"\u003E不好意思，本文篇幅实在太长。原因是我想毕其功于一文，希望一次就能讲透。Subsystems其实可以算是GamePlay框架上发布的一个美味DLC，懂得使用它的人会让自己的程序架构愈发的清晰，而不懂的的人依然习惯把代码搅和在一团，摊手~\u003C\u002Fp\u003E\u003Cp data-pid=\"tH4vCGRY\"\u003E希望本文对大家有帮助，没脸皮求赞了，就酱，后会有期！\u003C\u002Fp\u003E\u003Ch2\u003E引用\u003C\u002Fh2\u003E\u003Col\u003E\u003Cli data-pid=\"p3E0al1o\"\u003E\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fdocs.unrealengine.com\u002Fen-US\u002FProgramming\u002FSubsystems\u002Findex.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003EProgramming Subsystems官方文档\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003Cli data-pid=\"Kw2_CXWV\"\u003E\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fwww.bilibili.com\u002Fvideo\u002FBV1t741187FZ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003E[英文直播]Programming Subsystems(真实字幕组)\u003C\u002Fa\u003E\u003C\u002Fli\u003E\u003C\u002Fol\u003E\u003Cp data-pid=\"xwamId6k\"\u003E\u003Ci\u003EUE4.25.1\u003C\u002Fi\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"ZbvG9Ntp\"\u003E—————————————————————————————————————— \u003C\u002Fp\u003E\u003Cp data-pid=\"dTL4Xu8v\"\u003E知乎专栏：\u003Ca href=\"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4\" class=\"internal\" target=\"_blank\"\u003EInsideUE4\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cp data-pid=\"Ogurd0Tj\"\u003EUE深入学习QQ群：\u003Cb\u003E456247757\u003C\u002Fb\u003E(非新手入门群，请先学习完官方文档和视频教程)\u003C\u002Fp\u003E\u003Cp data-pid=\"yWuDHZFB\"\u003E\u003Cb\u003E个人原创，未经授权，谢绝转载！\u003C\u002Fb\u003E\u003C\u002Fp\u003E","contentNeedTruncated":false,"forceLoginWhenClickReadMore":false,"adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19824201","type":"topic","id":"19824201","name":"虚幻引擎"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19556258","type":"topic","id":"19556258","name":"游戏引擎"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19553361","type":"topic","id":"19553361","name":"游戏开发"}],"voteupCount":784,"voting":0,"heavyUpStatus":"allow_heavy_up","column":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"},"commentCount":86,"contributions":[{"id":24937324,"state":"accepted","type":"first_publish","column":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":false,"tipjarorsCount":0,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"favlistsCount":586,"isNormal":true,"status":0,"activityToppingInfo":{"state":"untopped"},"shareText":"《InsideUE4》GamePlay架构（十一）Subsystems - 来自知乎专栏「InsideUE5」，作者: 大钊 https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F158717151 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":144,"hasColumn":true,"republishers":[],"isNewLinkCard":true,"emojiReaction":{"likeCount":144,"likeHasSet":false},"abParam":{"qaFotoolbar":"0","qaHiddenVoteup":"","qaNewdownvote":"1","rsInterest1":"","zpZhiStyle":""},"attachedInfo":"kgIkCgkxMjM0MDM4MjkSCTE1ODcxNzE1MRgHIgpJTUFHRV9URVhU","shareGuide":{"hasPositiveBubble":false,"hasTimeBubble":false,"hitShareGuideCluster":false},"settings":{"tableOfContents":{"enabled":false}},"canReference":false,"reactionInstruction":{},"reaction":{"statistics":{"upVoteCount":784,"downVoteCount":16,"likeCount":144,"commentCount":86,"shareCount":0,"playCount":0,"interestPlayCount":0,"favorites":586,"pvCount":0,"bulletCount":0,"applaudCount":0,"questionFollowerCount":0,"questionAnswerCount":0,"plaincontentVoteUpCount":0,"plaincontentLikeCount":0,"imgLikeCount":{"v242c21654f0a8c9d5bea72dd6378ecc53":0,"v247b76ae554f09a8f56b299849f696d17":0,"v25572a4e08e9176f3d7993fe322cd5c64":0,"v259be3cc03f6b6c0eabf8ab2af01640f4":0,"v25d88fad5dd8bfb6d33c1dc04a507181b":1,"v2646fc20d5f69bc6f655a4343f67a0457":1,"v27825335e062ee2125ea8c28efed80c9d":0,"v28dee155bd6ebd7c38a1a3439b4c9077c":0,"v2Dfc8899a8315844e9d9ad8f5172c0073":0}},"relation":{"isAuthor":false,"vote":"Neutral","liked":false,"imgLiked":{"v242c21654f0a8c9d5bea72dd6378ecc53":false,"v247b76ae554f09a8f56b299849f696d17":false,"v25572a4e08e9176f3d7993fe322cd5c64":false,"v259be3cc03f6b6c0eabf8ab2af01640f4":false,"v25d88fad5dd8bfb6d33c1dc04a507181b":false,"v2646fc20d5f69bc6f655a4343f67a0457":false,"v27825335e062ee2125ea8c28efed80c9d":false,"v28dee155bd6ebd7c38a1a3439b4c9077c":false,"v2Dfc8899a8315844e9d9ad8f5172c0073":false},"faved":false,"following":false},"imageReactions":{"v242c21654f0a8c9d5bea72dd6378ecc53":{"likeCount":0,"isLiked":false},"v247b76ae554f09a8f56b299849f696d17":{"likeCount":0,"isLiked":false},"v25572a4e08e9176f3d7993fe322cd5c64":{"likeCount":0,"isLiked":false},"v259be3cc03f6b6c0eabf8ab2af01640f4":{"likeCount":0,"isLiked":false},"v25d88fad5dd8bfb6d33c1dc04a507181b":{"likeCount":1,"isLiked":false},"v2646fc20d5f69bc6f655a4343f67a0457":{"likeCount":1,"isLiked":false},"v27825335e062ee2125ea8c28efed80c9d":{"likeCount":0,"isLiked":false},"v28dee155bd6ebd7c38a1a3439b4c9077c":{"likeCount":0,"isLiked":false},"v2Dfc8899a8315844e9d9ad8f5172c0073":{"likeCount":0,"isLiked":false}}},"interactionBarPlugins":[{"type":"comment","comment":{"enable":true,"placeholder":"发条带图评论"}}],"barPluginsFlipTime":3000,"podcastAudioEnter":{"text":"听内容","textColor":"MapBrand","textSize":13,"actionUrl":"zhihu:\u002F\u002Fpodcast\u002Faudio_player\u002F0?contentId=158717151&contentType=article"}}},"columns":{"insideue4":{"description":"希望从最最底层的C++源码剖析，到最最上层的蓝图节点，力求解释清楚各个模块选项的内部运作机理，游戏引擎的设计理念和权衡。知其然，更要知其所以然。","canManage":false,"intro":"深入UE5剖析源码，浅出游戏引擎架构理念","isFollowing":false,"urlToken":"insideue4","id":"insideue4","articlesCount":39,"acceptSubmission":true,"title":"InsideUE5","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","commentPermission":"all","created":1447774759,"updated":1622448163,"imageUrl":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-c11ce6a243a272cdab4264de925654cd_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpicx.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca.jpg?source=172ae18b","uid":"27236912594944","userType":"people","isFollowing":false,"urlToken":"fjz13","id":"d7d96d0468d33421cc28e93d5f45deb5","description":"虚幻引擎社区经理，致力于技术研究和传播分享。游戏引擎研究爱好者《InsideUE5》专栏作者","name":"大钊","isAdvertiser":false,"headline":"UE源码剖析，等编译的时候回答问题","gender":1,"url":"\u002Fpeople\u002Fd7d96d0468d33421cc28e93d5f45deb5","avatarUrl":"https:\u002F\u002Fpica.zhimg.com\u002Fv2-7441a0758c0965343dbd767c13f5c0ca_l.jpg?source=172ae18b","isOrg":false,"type":"people","badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""}},"followers":9303,"type":"column","columnType":"normal"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"zvideos":{},"eduCourses":{}},"currentUser":"ffde95bc6a24b298d237f46e35a3eb71","account":{"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false},"cardUserInfo":{"vipInfo":{}},"handleWidget":{},"widgetList":[],"userWidgetId":""},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{},"infinity":{},"batchUsers":{},"profileInfinity":null},"env":{"abV2":{"config":{"paramMap":{"pc_mou_cre_remove":{"value":"1","abId":"rl-mou_create_remove-1"},"ws_zhishiku":{"value":"1","abId":"rl-zhishiku1-1"},"ws_pop_activate":{"value":"1","abId":"pop_activate-1"},"ws_new_call":{"value":"1","abId":"rl-mobileweb_call-1"},"ws_hot_activate":{"value":"0","abId":"hot_activate-0"}},"abMap":{"rl-mou_create_remove-1":{"abId":"rl-mou_create_remove-1","layerId":"rl-mou_create_remove","diversionType":2},"rl-zhishiku1-1":{"abId":"rl-zhishiku1-1","layerId":"rl-zhishiku1","diversionType":2},"pop_activate-1":{"abId":"pop_activate-1","layerId":"pop_activate_layer"},"rl-mobileweb_call-1":{"abId":"rl-mobileweb_call-1","layerId":"rl-mobileweb_call"},"hot_activate-0":{"abId":"hot_activate-0","layerId":"web_standard_domain_layer8"}}},"triggers":{}},"userAgent":{"Edge":false,"IE":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"HarmonyOS":false,"iOS":false,"isAppleDevice":false,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Quark":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"WxMiniProgram":false,"BaiduMiniProgram":false,"QQMiniProgram":false,"JDMiniProgram":false,"isWebView":false,"isMiniProgram":false,"origin":"Mozilla\u002F5.0 (Windows NT 10.0; Win64; x64; rv:135.0) Gecko\u002F20100101 Firefox\u002F135.0"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F158717151","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F158717151","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"oppoSearch":false,"baiduSearch":false,"googleSearch":false,"shenma":false,"miniProgram":false,"xiaomi":false,"huaweiSearch":false},"theme":"light","appHeaderTheme":{"current":"normal","disable":true,"normal":{"bgColor":"GBK99A"},"custom":{"bgColor":"GBK99A"}},"enableShortcut":true,"referer":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Finsideue4","xUDId":"AYDYfc1uQxiPTrrDN2Oi3_z1TueANaNaDu4=","mode":"ssr","conf":{},"xTrafficFreeOrigin":"","ipInfo":{"cityName":"武汉","countryName":"中国","regionName":"湖北","countryCode":"CN"},"logged":true,"query":{},"vars":{"passThroughHeaders":{}}},"me":{"columnContributions":[]},"label":{},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0}},"recommend":{"recommendTimes":{}}},"explore":{},"levelUpperLimit":10,"mcn":{},"mcnManage":{},"tasks":{},"announcement":{},"creatorsRecommendInfo":{}},"creators":{"common":{"applyStatus":{},"rightsStatus":{}},"bayesDomains":{"status":{},"options":{"topDomains":null,"allDomains":null,"editable":0},"contents":null},"school":{"tabs":[],"contents":[],"banner":null,"entities":{}},"faq":{"tabs":[],"article":{}},"knowledgeIncome":{},"safeguardRights":{},"analytics":{"all":{},"answer":{},"zvideo":{},"article":{},"pin":{},"singleContent":{}},"account":{"growthLevel":{}},"KMResource":{},"training":{},"ToolsQuestion":{"goodatTopics":[]},"ToolsHotspot":{"domains":[]},"ToolsRecommend":{},"ToolsCustomPromotion":{"itemLists":{},"baseInfo":{}},"ToolsSearchQuestion":{},"editorSetting":{},"MCNManage":{},"knowledgeTasks":{},"incomeAnalysis":{"income":{"aggregation":{}}},"creationManage":{"editModal":{"status":false}},"activity":{},"announcement":{},"home":{"currentCreatorUrlToken":null,"rights":[],"newRights":[],"scoreInfo":{},"menusShowControlByServer":{"bVipRecomend":false,"creationRelationship":false},"newTasks":{"creatorTask":{"tasks":[],"des":[]}},"bannerList":[],"recentlyCreated":[],"homecard":{},"homeData":{}},"videoSupport":{"textBenefit":{}},"videoDistribution":{},"profilePoster":{"creatorPosterConfig":{},"creatorPosterData":{}}},"answers":{"voters":{},"upvoters":{},"copyrightApplicants":{},"favlists":{},"newAnswer":{},"entityWords":{},"paidContent":{},"settings":{},"relationEndorsement":{},"growthCardOrder":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{},"upvoters":{},"relationEndorsement":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotList":[],"hotListHeadZone":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]},"hotDaily":{"data":[],"paging":{}},"hotHighlight":{"isFetching":false,"isDrained":false,"data":[],"paging":{}},"banner":{},"commercialBanner":{"show":false,"banner":{},"trackData":{}},"video":{"items":[],"next":null,"isLoading":false,"isDrained":false}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"insideue4"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[]},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":null,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"userProfit":{"permission":{"permissionStatus":{"zhiZixuan":0,"recommend":-1,"task":0,"plugin":0,"infinity":0},"visible":false},"linkCardLimit":0},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{},"banners":{},"protocolStatus":{"isAgreedNew":true,"isAgreedOld":true},"probationCountdownDays":0},"zvideos":{"campaignVideoList":{},"campaigns":{},"tagoreCategory":[],"recommendations":{},"insertable":{},"recruit":{"form":{"platform":"","nickname":"","followerCount":"","domain":"","contact":""},"submited":false,"ranking":[]},"qyActivityData":{},"talkActivityData":{},"party2022ActivityData":{},"batchVideos":{},"creationReferences":{},"zvideoCollection":{},"zvideoGrant":{},"collectData":{"isFetching":false,"list":[]},"videoSource":{"isLoaded":false},"paidColumnInfo":{}},"republish":{},"commentPermission":{},"creatorRightStatus":{"list":[]},"adPromotion":{"answer":{},"article":{}},"paidColumn":{"entities":{}},"followingColumns":{},"hotSpot":{}},"fetchHost":"www.zhihu.com","subAppName":"column","spanName":"Post","canaryConfig":{"test_canary":"0","use_new_player":"0","player_vendor":"0","use_hevc":"1","upload_use_signature":"1","use_backdrop_blur":"1","article_title_imagex":"1","play_station":"1","use_cached_supported_countries":"1"}}</script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/vendor.4d4559ddd761145da535.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/react.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/react-dom-server.browser.production.min.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/runtime.app.cb676f5b2d3a7d3d76a9.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-75fc9c18.app.3db651c252e14ef6658e.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-29107295.app.42d07f814b7b05187671.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-79b5cf47.app.8b6b6bf4b6d894db9b07.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-330004dc.app.7437cf54ac28fca0e302.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-f3572862.app.88776a5ab04556b70cc2.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-0e5ce61e.app.22c35ce7e8956cfacf07.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-83b0f42f.app.4af446e71092c79a4337.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-38cf5c11.app.c0ead2ce5c3ab6da63bd.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-2ec050f6.app.9d36ff4f103fb294ee49.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/lib-9b20c40c.app.3b5d3b2a0de64f6e01b9.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/7941.app.193a11c73b77ab856fbe.js"></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/column.app.f306cd8a2baed3faa615.js"></script><script defer="defer" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/aria.js" id="ariascripts" wapforceoldfixed="false" loaddata="false"></script><script src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/hm.js" async=""></script><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/zap.js"></script><div><div style="display: none;"><i>想来知乎工作？请发送邮件到 jobs@zhihu.com</i></div></div><script src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/push.js"></script><div><div><div class="css-8pdeid"></div></div></div><script crossorigin="" src="%E3%80%8AInsideUE4%E3%80%8BGamePlay%E6%9E%B6%E6%9E%84%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89Subsystems%20-%20%E7%9F%A5%E4%B9%8E_files/emoticon.js"></script><div><div><div style="left: -1179px; top: -999px;" class="Editable-languageSuggestions"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete7-0" id="Popover6-toggle" aria-haspopup="true" class="Input" placeholder="选择语言"><svg width="24" height="24" viewBox="0 0 24 24" fill="#afbdcf" class="Zi Zi--Select"><path fill-rule="evenodd" d="M12.53 3.47a.75.75 0 0 0-1.06 0l-5 5a.75.75 0 0 0 1.06 1.06L12 5.06l4.47 4.47a.75.75 0 1 0 1.06-1.06l-5-5Zm-5 11a.75.75 0 0 0-1.06 1.06l5 5a.75.75 0 0 0 1.06 0l5-5a.75.75 0 1 0-1.06-1.06L12 18.94l-4.47-4.47Z" clip-rule="evenodd"></path></svg></label></div></div></div></div></div><div><div><div style="left: -1179px; top: -999px;" class="Editable-languageSuggestions"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete9-0" id="Popover8-toggle" aria-haspopup="true" class="Input" placeholder="选择语言"><svg width="24" height="24" viewBox="0 0 24 24" fill="#afbdcf" class="Zi Zi--Select"><path fill-rule="evenodd" d="M12.53 3.47a.75.75 0 0 0-1.06 0l-5 5a.75.75 0 0 0 1.06 1.06L12 5.06l4.47 4.47a.75.75 0 1 0 1.06-1.06l-5-5Zm-5 11a.75.75 0 0 0-1.06 1.06l5 5a.75.75 0 0 0 1.06 0l5-5a.75.75 0 1 0-1.06-1.06L12 18.94l-4.47-4.47Z" clip-rule="evenodd"></path></svg></label></div></div></div></div></div></body></html>